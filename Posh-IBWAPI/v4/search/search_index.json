{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Posh-IBWAPI \u00b6 A PowerShell module to help with Infoblox automation via WAPI requests and functions. It is not intended to wrap every object into a set of custom cmdlets or strong types. Instead, it aims to hide the some of the tedious complexity in calling the Infoblox REST API via PowerShell. Features \u00b6 Automatic paging for large GET result sets (Requires WAPI version 1.5+) Automatic session handling Receive-IBFile and Send-IBFile wrappers for upload/download WAPI functions. (Guide) Optionally return all fields for an object without needing to specify each one individually (Requires WAPI version 1.7.5+) Use Get-IBSchema for Get-Help style querying of the WAPI object model (Requires WAPI version 1.7.5+) . (Guide) Error details in the body of HTTP 400 responses are exposed instead of being swallowed by Invoke-RestMethod. Pipeline support so you can do things like pass the results from Get-IBObject directly to Remove-IBObject . Optionally batch pipelined requests to increase performance. Optionally ignore certificate validation errors. Save connection profiles so you don't have to pass multiple common parameters with every call. Multiple connection profiles supported for multi-grid environments or if you need to save different credentials for different purposes. SecretManagement support for connection profiles. (Guide) Cloud friendly stateless mode supported via environment variables. (Guide) Cross-platform Powershell support Installation (Stable) \u00b6 The latest release can found in the PowerShell Gallery or the GitHub releases page . Installing is easiest from the gallery using Install-Module . See Installing PowerShellGet if you run into problems with it. # install for all users (requires elevated privs) Install-Module -Name Posh-IBWAPI -Scope AllUsers # install for current user Install-Module -Name Posh-IBWAPI -Scope CurrentUser NOTE: If you use PowerShell 5.1 or earlier, Install-Module may throw an error depending on your Windows and .NET version due to a change PowerShell Gallery made to their TLS settings. For more info and a workaround, see the official blog post . Installation (Development) \u00b6 Use the following PowerShell command to install the latest development version from the git main branch. This method assumes a default PSModulePath environment variable and installs to the CurrentUser scope. iex ( irm https :// raw . githubusercontent . com / rmbolger / Posh-IBWAPI / main / instdev . ps1 ) You can also download the source manually from GitHub and extract the Posh-IBWAPI folder to your desired module location. Quick Start \u00b6 Every WAPI call needs a host, version, and credentials. Set them once for the session with Set-IBConfig and you won't need to add them to every call. If your grid is still using self-signed certs, you may also need to use the SkipCertificateCheck parameter. In addition to standard version numbers like '2.2' , the -WAPIVersion parameter also accepts 'latest' and will query the grid master for the latest supported version. Set-IBConfig -ProfileName 'mygrid' -WAPIHost 'gridmaster.example.com' -WAPIVersion 'latest' ` -Credential ( Get-Credential ) -SkipCertificateCheck Retrieve a set of objects using Get-IBObject . The only required parameter is ObjectType . Everything else like filters and return fields are optional. Get-IBObject 'record:host' Get-IBObject 'record:host' -Filters 'name~=example.com' -MaxResults 10 -ReturnFields 'extattrs' If you're just exploring the WAPI object model, it can be helpful to convert the resulting objects back to JSON for readability. Get-IBObject 'record:host' | Select -First 1 | ConvertTo-Json -Depth 5 You may notice that all objects returned by Infoblox have a _ref field. That is known as the object reference and can be used in any function that accepts an ObjectRef parameter. In the case of Get-IBObject , it will return that specific object. Get-IBObject -ObjectRef 'record:host/asdfqwerasdfqwerasdfqwerasdfqwer' Create a new object with New-IBObject . All you need to provide is the object type and an object with the minimum required fields defined. Embedded WAPI functions work just fine here. # Build the record:host object we want to create. # NOTE: An error will be thrown if the example.com DNS zone doesn't # exist in Infoblox $newhost = @{ name = 'web1.example.com' ; comment = 'web server' } $newhost . ipv4addrs = @( @{ ipv4addr = '10.10.10.1' } ) # Create the object New-IBObject -ObjectType 'record:host' -IBObject $newhost # Modify the object so we can make another and this time use an # embedded function to set the IP address. $newhost . name = 'web2.example.com' $newhost . ipv4addrs = @( @{ ipv4addr = 'func:nextavailableip:10.10.10.0/24' } ) New-IBObject -ObjectType 'record:host' -IBObject $newhost To modify an existing object, the easiest way is usually to get a copy of it, modify the copy, and save the result with Set-IBObject . Be wary of objects that return read-only fields. You need to strip them out before saving or an error will be thrown. # Get a copy of the host $myhost = Get-IBObject 'record:host' -Filters 'name=web1.example.com' # remove the read-only 'host' field from the nested 'record:host_ipv4addr' object $myhost . ipv4addrs [ 0 ]. PSObject . Properties . Remove ( 'host' ) # Modify the first listed IP address $myhost . ipv4addrs [ 0 ]. ipv4addr = '10.10.10.100' # Save the result $myhost | Set-IBObject If you need to make the same change to a set of objects, you can also pass the set of object references via the pipeline and use a template object to change all of them in the same way. # Get all hosts in the Los Angeles site $laHosts = Get-IBObject 'record:host' -Filters '*Site=Los Angeles' # Move them to the New York site $laHosts | Set-IBObject -Template @{ extattrs =@{ Site =@{ value = 'New York' }}} Deleting one or more objects is as simple as passing one or more object references to Remove-IBObject . # Get hosts being decommissioned $toDelete = Get-IBObject 'record:host' -Filters 'comment=decommission' # Delete them $toDelete | Remove-IBObject For more examples, check the Definitive REST Examples guide. Requirements and Platform Support \u00b6 Supports Windows PowerShell 5.1 (Desktop edition) with .NET Framework 4.5.2 or later Supports Powershell 7.0 or later (Core edition) on all supported OS platforms. Supports any NIOS/WAPI version, but only regularly tested against Infoblox supported versions. Changelog \u00b6 See CHANGELOG.md","title":"Home"},{"location":"#posh-ibwapi","text":"A PowerShell module to help with Infoblox automation via WAPI requests and functions. It is not intended to wrap every object into a set of custom cmdlets or strong types. Instead, it aims to hide the some of the tedious complexity in calling the Infoblox REST API via PowerShell.","title":"Posh-IBWAPI"},{"location":"#features","text":"Automatic paging for large GET result sets (Requires WAPI version 1.5+) Automatic session handling Receive-IBFile and Send-IBFile wrappers for upload/download WAPI functions. (Guide) Optionally return all fields for an object without needing to specify each one individually (Requires WAPI version 1.7.5+) Use Get-IBSchema for Get-Help style querying of the WAPI object model (Requires WAPI version 1.7.5+) . (Guide) Error details in the body of HTTP 400 responses are exposed instead of being swallowed by Invoke-RestMethod. Pipeline support so you can do things like pass the results from Get-IBObject directly to Remove-IBObject . Optionally batch pipelined requests to increase performance. Optionally ignore certificate validation errors. Save connection profiles so you don't have to pass multiple common parameters with every call. Multiple connection profiles supported for multi-grid environments or if you need to save different credentials for different purposes. SecretManagement support for connection profiles. (Guide) Cloud friendly stateless mode supported via environment variables. (Guide) Cross-platform Powershell support","title":"Features"},{"location":"#installation-stable","text":"The latest release can found in the PowerShell Gallery or the GitHub releases page . Installing is easiest from the gallery using Install-Module . See Installing PowerShellGet if you run into problems with it. # install for all users (requires elevated privs) Install-Module -Name Posh-IBWAPI -Scope AllUsers # install for current user Install-Module -Name Posh-IBWAPI -Scope CurrentUser NOTE: If you use PowerShell 5.1 or earlier, Install-Module may throw an error depending on your Windows and .NET version due to a change PowerShell Gallery made to their TLS settings. For more info and a workaround, see the official blog post .","title":"Installation (Stable)"},{"location":"#installation-development","text":"Use the following PowerShell command to install the latest development version from the git main branch. This method assumes a default PSModulePath environment variable and installs to the CurrentUser scope. iex ( irm https :// raw . githubusercontent . com / rmbolger / Posh-IBWAPI / main / instdev . ps1 ) You can also download the source manually from GitHub and extract the Posh-IBWAPI folder to your desired module location.","title":"Installation (Development)"},{"location":"#quick-start","text":"Every WAPI call needs a host, version, and credentials. Set them once for the session with Set-IBConfig and you won't need to add them to every call. If your grid is still using self-signed certs, you may also need to use the SkipCertificateCheck parameter. In addition to standard version numbers like '2.2' , the -WAPIVersion parameter also accepts 'latest' and will query the grid master for the latest supported version. Set-IBConfig -ProfileName 'mygrid' -WAPIHost 'gridmaster.example.com' -WAPIVersion 'latest' ` -Credential ( Get-Credential ) -SkipCertificateCheck Retrieve a set of objects using Get-IBObject . The only required parameter is ObjectType . Everything else like filters and return fields are optional. Get-IBObject 'record:host' Get-IBObject 'record:host' -Filters 'name~=example.com' -MaxResults 10 -ReturnFields 'extattrs' If you're just exploring the WAPI object model, it can be helpful to convert the resulting objects back to JSON for readability. Get-IBObject 'record:host' | Select -First 1 | ConvertTo-Json -Depth 5 You may notice that all objects returned by Infoblox have a _ref field. That is known as the object reference and can be used in any function that accepts an ObjectRef parameter. In the case of Get-IBObject , it will return that specific object. Get-IBObject -ObjectRef 'record:host/asdfqwerasdfqwerasdfqwerasdfqwer' Create a new object with New-IBObject . All you need to provide is the object type and an object with the minimum required fields defined. Embedded WAPI functions work just fine here. # Build the record:host object we want to create. # NOTE: An error will be thrown if the example.com DNS zone doesn't # exist in Infoblox $newhost = @{ name = 'web1.example.com' ; comment = 'web server' } $newhost . ipv4addrs = @( @{ ipv4addr = '10.10.10.1' } ) # Create the object New-IBObject -ObjectType 'record:host' -IBObject $newhost # Modify the object so we can make another and this time use an # embedded function to set the IP address. $newhost . name = 'web2.example.com' $newhost . ipv4addrs = @( @{ ipv4addr = 'func:nextavailableip:10.10.10.0/24' } ) New-IBObject -ObjectType 'record:host' -IBObject $newhost To modify an existing object, the easiest way is usually to get a copy of it, modify the copy, and save the result with Set-IBObject . Be wary of objects that return read-only fields. You need to strip them out before saving or an error will be thrown. # Get a copy of the host $myhost = Get-IBObject 'record:host' -Filters 'name=web1.example.com' # remove the read-only 'host' field from the nested 'record:host_ipv4addr' object $myhost . ipv4addrs [ 0 ]. PSObject . Properties . Remove ( 'host' ) # Modify the first listed IP address $myhost . ipv4addrs [ 0 ]. ipv4addr = '10.10.10.100' # Save the result $myhost | Set-IBObject If you need to make the same change to a set of objects, you can also pass the set of object references via the pipeline and use a template object to change all of them in the same way. # Get all hosts in the Los Angeles site $laHosts = Get-IBObject 'record:host' -Filters '*Site=Los Angeles' # Move them to the New York site $laHosts | Set-IBObject -Template @{ extattrs =@{ Site =@{ value = 'New York' }}} Deleting one or more objects is as simple as passing one or more object references to Remove-IBObject . # Get hosts being decommissioned $toDelete = Get-IBObject 'record:host' -Filters 'comment=decommission' # Delete them $toDelete | Remove-IBObject For more examples, check the Definitive REST Examples guide.","title":"Quick Start"},{"location":"#requirements-and-platform-support","text":"Supports Windows PowerShell 5.1 (Desktop edition) with .NET Framework 4.5.2 or later Supports Powershell 7.0 or later (Core edition) on all supported OS platforms. Supports any NIOS/WAPI version, but only regularly tested against Infoblox supported versions.","title":"Requirements and Platform Support"},{"location":"#changelog","text":"See CHANGELOG.md","title":"Changelog"},{"location":"FAQ/","text":"Frequently Asked Questions (FAQ) \u00b6 Does Posh-IBWAPI work cross platform on Powershell (Core)? \u00b6 YES! The current minimum supported version of PowerShell (Core) is 7.0. Things may still work on 6.x, but I'm not actively testing against it anymore. All OS platforms supported by PowerShell are supported by the module. The underlying connection was closed: Cloud not establish trust relationship for the SSL/TLS secure channel. \u00b6 Your Infoblox is either still using a self-signed SSL certificate or the custom certificate it's using is no longer valid. You can ignore certificate validation using the -SkipCertificateCheck parameter on most functions or set it in your connection profile using Set-IBConfig . Invoke-RestMethod: SSL connect error \u00b6 Your Infoblox is either still using a self-signed SSL certificate or the custom certificate it's using is no longer valid. You can ignore certificate validation using the -SkipCertificateCheck parameter on most functions or set it in your connection profile using Set-IBConfig . ConvertTo-Json doesn't seem to be converting all nested objects \u00b6 There's a -Depth parameter that \"specifies how many levels of contained objects are included in the JSON representation\". The default is 2 which is insufficient for some Infoblox objects. I usually set it to 5 just to be safe. -SkipCertificateCheck not working consistently when used in the same session as VMware PowerCLI \u00b6 In legacy Windows PowerShell 5.1, there is unfortunately no native support in Invoke-RestMethod (or any related cmdlet) for per-call disabling of certificate validation. Validation logic is controlled globally at the .NET level on a per-session basis in System.Net.ServicePointManager . In order to mimic a per-call disable flag, we're essentially disabling cert validation globally just long enough to make our call to Invoke-RestMethod and then setting it back to the default functionality. But our ServicePointManager tweaks seem to sometimes conflict with whatever VMware is doing with PowerCLI to disable certificate validation. The current recommendation is to just let PowerCLI take care of disabling validation and skip using the option in Posh-IBWAPI. Switching to PowerShell 7+ will also avoid the problem because there is per-call disabling of certificate validation. Key not valid for use in specified state \u00b6 This happens when you try to copy a posh-ibwapi.json config file to a different Windows computer or a different user's profile on the same computer. The underlying APIs used to encrypt the password in the file are tied to both the current computer and user and are not portable. The rest of the config values should still be valid. You will just need to set new -Credential value with Set-IBConfig . Using a centralized SecretManagement vault is also another alternative to share profiles across users or computers.","title":"FAQ"},{"location":"FAQ/#frequently-asked-questions-faq","text":"","title":"Frequently Asked Questions (FAQ)"},{"location":"FAQ/#does-posh-ibwapi-work-cross-platform-on-powershell-core","text":"YES! The current minimum supported version of PowerShell (Core) is 7.0. Things may still work on 6.x, but I'm not actively testing against it anymore. All OS platforms supported by PowerShell are supported by the module.","title":"Does Posh-IBWAPI work cross platform on Powershell (Core)?"},{"location":"FAQ/#the-underlying-connection-was-closed-cloud-not-establish-trust-relationship-for-the-ssltls-secure-channel","text":"Your Infoblox is either still using a self-signed SSL certificate or the custom certificate it's using is no longer valid. You can ignore certificate validation using the -SkipCertificateCheck parameter on most functions or set it in your connection profile using Set-IBConfig .","title":"The underlying connection was closed: Cloud not establish trust relationship for the SSL/TLS secure channel."},{"location":"FAQ/#invoke-restmethod-ssl-connect-error","text":"Your Infoblox is either still using a self-signed SSL certificate or the custom certificate it's using is no longer valid. You can ignore certificate validation using the -SkipCertificateCheck parameter on most functions or set it in your connection profile using Set-IBConfig .","title":"Invoke-RestMethod: SSL connect error"},{"location":"FAQ/#convertto-json-doesnt-seem-to-be-converting-all-nested-objects","text":"There's a -Depth parameter that \"specifies how many levels of contained objects are included in the JSON representation\". The default is 2 which is insufficient for some Infoblox objects. I usually set it to 5 just to be safe.","title":"ConvertTo-Json doesn't seem to be converting all nested objects"},{"location":"FAQ/#-skipcertificatecheck-not-working-consistently-when-used-in-the-same-session-as-vmware-powercli","text":"In legacy Windows PowerShell 5.1, there is unfortunately no native support in Invoke-RestMethod (or any related cmdlet) for per-call disabling of certificate validation. Validation logic is controlled globally at the .NET level on a per-session basis in System.Net.ServicePointManager . In order to mimic a per-call disable flag, we're essentially disabling cert validation globally just long enough to make our call to Invoke-RestMethod and then setting it back to the default functionality. But our ServicePointManager tweaks seem to sometimes conflict with whatever VMware is doing with PowerCLI to disable certificate validation. The current recommendation is to just let PowerCLI take care of disabling validation and skip using the option in Posh-IBWAPI. Switching to PowerShell 7+ will also avoid the problem because there is per-call disabling of certificate validation.","title":"-SkipCertificateCheck not working consistently when used in the same session as VMware PowerCLI"},{"location":"FAQ/#key-not-valid-for-use-in-specified-state","text":"This happens when you try to copy a posh-ibwapi.json config file to a different Windows computer or a different user's profile on the same computer. The underlying APIs used to encrypt the password in the file are tied to both the current computer and user and are not portable. The rest of the config values should still be valid. You will just need to set new -Credential value with Set-IBConfig . Using a centralized SecretManagement vault is also another alternative to share profiles across users or computers.","title":"Key not valid for use in specified state"},{"location":"Functions/Get-IBConfig/","text":"Get-IBConfig \u00b6 Synopsis \u00b6 Get one or more connection profiles. Syntax \u00b6 Specific (Default) \u00b6 Get-IBConfig [[ -ProfileName ] < String >] [< CommonParameters >] List \u00b6 Get-IBConfig [ -List ] [< CommonParameters >] Description \u00b6 When calling this function with no parameters, the currently active profile will be returned. These values will be used by related function calls to the Infoblox API unless they are overridden by the function's own parameters. When called with -ProfileName, the profile matching that name will be returned. When called with -List, all profiles will be returned. Examples \u00b6 Example 1: Current profile \u00b6 Get-IBConfig Get the current connection profile. Example 2: List all profiles \u00b6 Get-IBConfig -List Get all connection profiles. Parameters \u00b6 -ProfileName \u00b6 The name of the connection profile to return. Type : String Parameter Sets : Specific Aliases : Required : False Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False -List \u00b6 If set, list all connection profiles currently stored. Type : SwitchParameter Parameter Sets : List Aliases : Required : True Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False CommonParameters \u00b6 This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Outputs \u00b6 PoshIBWAPI.IBConfig \u00b6 A config object Related Links \u00b6 Set-IBConfig Get-IBObject","title":"Get-IBConfig"},{"location":"Functions/Get-IBConfig/#get-ibconfig","text":"","title":"Get-IBConfig"},{"location":"Functions/Get-IBConfig/#synopsis","text":"Get one or more connection profiles.","title":"Synopsis"},{"location":"Functions/Get-IBConfig/#syntax","text":"","title":"Syntax"},{"location":"Functions/Get-IBConfig/#specific-default","text":"Get-IBConfig [[ -ProfileName ] < String >] [< CommonParameters >]","title":"Specific (Default)"},{"location":"Functions/Get-IBConfig/#list","text":"Get-IBConfig [ -List ] [< CommonParameters >]","title":"List"},{"location":"Functions/Get-IBConfig/#description","text":"When calling this function with no parameters, the currently active profile will be returned. These values will be used by related function calls to the Infoblox API unless they are overridden by the function's own parameters. When called with -ProfileName, the profile matching that name will be returned. When called with -List, all profiles will be returned.","title":"Description"},{"location":"Functions/Get-IBConfig/#examples","text":"","title":"Examples"},{"location":"Functions/Get-IBConfig/#example-1-current-profile","text":"Get-IBConfig Get the current connection profile.","title":"Example 1: Current profile"},{"location":"Functions/Get-IBConfig/#example-2-list-all-profiles","text":"Get-IBConfig -List Get all connection profiles.","title":"Example 2: List all profiles"},{"location":"Functions/Get-IBConfig/#parameters","text":"","title":"Parameters"},{"location":"Functions/Get-IBConfig/#-profilename","text":"The name of the connection profile to return. Type : String Parameter Sets : Specific Aliases : Required : False Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ProfileName"},{"location":"Functions/Get-IBConfig/#-list","text":"If set, list all connection profiles currently stored. Type : SwitchParameter Parameter Sets : List Aliases : Required : True Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-List"},{"location":"Functions/Get-IBConfig/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Functions/Get-IBConfig/#outputs","text":"","title":"Outputs"},{"location":"Functions/Get-IBConfig/#poshibwapiibconfig","text":"A config object","title":"PoshIBWAPI.IBConfig"},{"location":"Functions/Get-IBConfig/#related-links","text":"Set-IBConfig Get-IBObject","title":"Related Links"},{"location":"Functions/Get-IBObject/","text":"Get-IBObject \u00b6 Synopsis \u00b6 Retrieve objects from the Infoblox database. Syntax \u00b6 ByType (Default) \u00b6 Get-IBObject [ -ObjectType ] < String > [ -Filter < Object >] [ -MaxResults < Int32 >] [ -PageSize < Int32 >] [ -ReturnFields < String []>] [ -ReturnBaseFields ] [ -ReturnAllFields ] [ -ProxySearch ] [ -WAPIHost < String >] [ -WAPIVersion < String >] [ -Credential < PSCredential >] [ -SkipCertificateCheck ] [ -ProfileName < String >] [< CommonParameters >] ByTypeNoPaging \u00b6 Get-IBObject [ -ObjectType ] < String > [ -Filter < Object >] [ -NoPaging ] [ -ReturnFields < String []>] [ -ReturnBaseFields ] [ -ReturnAllFields ] [ -ProxySearch ] [ -WAPIHost < String >] [ -WAPIVersion < String >] [ -Credential < PSCredential >] [ -SkipCertificateCheck ] [ -ProfileName < String >] [< CommonParameters >] ByRef \u00b6 Get-IBObject [ -ObjectRef ] < String > [ -BatchMode ] [ -ReturnFields < String []>] [ -ReturnBaseFields ] [ -ReturnAllFields ] [ -ProxySearch ] [ -WAPIHost < String >] [ -WAPIVersion < String >] [ -Credential < PSCredential >] [ -SkipCertificateCheck ] [ -ProfileName < String >] [< CommonParameters >] Description \u00b6 Query a specific object's details by specifying ObjectRef or search for a set of objects using ObjectType and optional Filter arguments. For large result sets, query pagination will automatically be used to fetch all results. The result count can be limited with the -MaxResults parameter. Examples \u00b6 Example 1: Get specific object \u00b6 Get-IBObject -ObjectRef 'record:host/XxXxXxXxXxXxXxX' Get the basic fields for a specific Host record. Example 2: Get A records with filters \u00b6 Get-IBObject 'record:a' -Filter 'name~=.*\\.example.com' -MaxResults 100 -ReturnFields 'comment' -ReturnBaseFields Get the first 100 A records in the example.com DNS zone and return the comment field in addition to the basic fields. Example 3: Get network containers within another container \u00b6 Get-IBObject -ObjectType 'networkcontainer' -Filter 'network_container=192.168.1.0/19' Get all network containers that have a parent container of 192.168.1.0/19 Example 4: Get networks within a network container \u00b6 Get-IBObject -ObjectType 'network' -Filter 'network_container=192.168.1.0/20' Get all networks that have a parent container of 192.168.1.0/20 Parameters \u00b6 -ObjectType \u00b6 Object type string. (e.g. network, record:host, range) Type : String Parameter Sets : ByType, ByTypeNoPaging Aliases : type Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False -ObjectRef \u00b6 Object reference string. This is usually found in the \"_ref\" field of returned objects. Type : String Parameter Sets : ByRef Aliases : _ref, ref Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -BatchMode \u00b6 If specified, objects passed via pipeline will be batched together into groups and sent as a single WAPI call per group instead of a WAPI call per object. This can increase performance but if any of the individual calls fail, the whole group is cancelled. Type : SwitchParameter Parameter Sets : ByRef Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -Filter \u00b6 A string array of search filter conditions (e.g. \"name%7E=myhost\",\"ipv4addr=10.10.10.10\") or hashtable (e.g. @{'name~'='myhost';ipv4addr='10.10.10.10'}). All conditions must be satisfied to match an object. String based filters must be properly URL encoded. Hashtable filters will be automatically URL encoded. See Infoblox WAPI documentation for advanced usage details. Type : Object Parameter Sets : ByType, ByTypeNoPaging Aliases : Filters Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -MaxResults \u00b6 If set to a positive number, the results list will be truncated to that number if necessary. If set to a negative number and the results would exceed the absolute value, an error is thrown. Type : Int32 Parameter Sets : ByType Aliases : Required : False Position : Named Default value : 2147483647 Accept pipeline input : False Accept wildcard characters : False -PageSize \u00b6 The number of results to retrieve per request when auto-paging large result sets. Defaults to 1000. Set this lower if you have very large results that are causing errors with ConvertTo-Json. Type : Int32 Parameter Sets : ByType Aliases : Required : False Position : Named Default value : 1000 Accept pipeline input : False Accept wildcard characters : False -NoPaging \u00b6 If specified, automatic paging will not be used. This is occasionally necessary for some object type queries that return a single object reference such as dhcp:statistics. Type : SwitchParameter Parameter Sets : ByTypeNoPaging Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -ReturnFields \u00b6 The set of fields that should be returned in addition to the object reference. Type : String[] Parameter Sets : (All) Aliases : fields Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -ReturnBaseFields \u00b6 If specified, the standard fields for this object type will be returned in addition to the object reference and any additional fields specified by -ReturnFields. If -ReturnFields is not used, this defaults to $true. Type : SwitchParameter Parameter Sets : (All) Aliases : base Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -ReturnAllFields \u00b6 If specified, all readable fields will be returned for the object. This switch relies on Get-IBSchema and as such requires WAPI 1.7.5+. Because of the additional web requests necessary to make this work, it is also not recommended for performance critical code. Type : SwitchParameter Parameter Sets : (All) Aliases : all Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -ProxySearch \u00b6 If specified, the request is redirected to Grid manager for processing. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -WAPIHost \u00b6 The fully qualified DNS name or IP address of the Infoblox WAPI endpoint (usually the grid master). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : host Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -WAPIVersion \u00b6 The version of the Infoblox WAPI to make calls against (e.g. '2.2'). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : version Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Credential \u00b6 Username and password for the Infoblox appliance. This parameter is required unless it was already set using Set-IBConfig. Type : PSCredential Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -SkipCertificateCheck \u00b6 If set, SSL/TLS certificate validation will be disabled. Overrides value stored with Set-IBConfig. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -ProfileName \u00b6 The name of a specific config profile to use instead of the currently active one. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters \u00b6 This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Outputs \u00b6 PSCustomObject \u00b6 Zero or more objects found by the search or object reference. If an object reference is specified that doesn't exist, an error will be thrown. Related Links \u00b6 Set-IBConfig","title":"Get-IBObject"},{"location":"Functions/Get-IBObject/#get-ibobject","text":"","title":"Get-IBObject"},{"location":"Functions/Get-IBObject/#synopsis","text":"Retrieve objects from the Infoblox database.","title":"Synopsis"},{"location":"Functions/Get-IBObject/#syntax","text":"","title":"Syntax"},{"location":"Functions/Get-IBObject/#bytype-default","text":"Get-IBObject [ -ObjectType ] < String > [ -Filter < Object >] [ -MaxResults < Int32 >] [ -PageSize < Int32 >] [ -ReturnFields < String []>] [ -ReturnBaseFields ] [ -ReturnAllFields ] [ -ProxySearch ] [ -WAPIHost < String >] [ -WAPIVersion < String >] [ -Credential < PSCredential >] [ -SkipCertificateCheck ] [ -ProfileName < String >] [< CommonParameters >]","title":"ByType (Default)"},{"location":"Functions/Get-IBObject/#bytypenopaging","text":"Get-IBObject [ -ObjectType ] < String > [ -Filter < Object >] [ -NoPaging ] [ -ReturnFields < String []>] [ -ReturnBaseFields ] [ -ReturnAllFields ] [ -ProxySearch ] [ -WAPIHost < String >] [ -WAPIVersion < String >] [ -Credential < PSCredential >] [ -SkipCertificateCheck ] [ -ProfileName < String >] [< CommonParameters >]","title":"ByTypeNoPaging"},{"location":"Functions/Get-IBObject/#byref","text":"Get-IBObject [ -ObjectRef ] < String > [ -BatchMode ] [ -ReturnFields < String []>] [ -ReturnBaseFields ] [ -ReturnAllFields ] [ -ProxySearch ] [ -WAPIHost < String >] [ -WAPIVersion < String >] [ -Credential < PSCredential >] [ -SkipCertificateCheck ] [ -ProfileName < String >] [< CommonParameters >]","title":"ByRef"},{"location":"Functions/Get-IBObject/#description","text":"Query a specific object's details by specifying ObjectRef or search for a set of objects using ObjectType and optional Filter arguments. For large result sets, query pagination will automatically be used to fetch all results. The result count can be limited with the -MaxResults parameter.","title":"Description"},{"location":"Functions/Get-IBObject/#examples","text":"","title":"Examples"},{"location":"Functions/Get-IBObject/#example-1-get-specific-object","text":"Get-IBObject -ObjectRef 'record:host/XxXxXxXxXxXxXxX' Get the basic fields for a specific Host record.","title":"Example 1: Get specific object"},{"location":"Functions/Get-IBObject/#example-2-get-a-records-with-filters","text":"Get-IBObject 'record:a' -Filter 'name~=.*\\.example.com' -MaxResults 100 -ReturnFields 'comment' -ReturnBaseFields Get the first 100 A records in the example.com DNS zone and return the comment field in addition to the basic fields.","title":"Example 2: Get A records with filters"},{"location":"Functions/Get-IBObject/#example-3-get-network-containers-within-another-container","text":"Get-IBObject -ObjectType 'networkcontainer' -Filter 'network_container=192.168.1.0/19' Get all network containers that have a parent container of 192.168.1.0/19","title":"Example 3: Get network containers within another container"},{"location":"Functions/Get-IBObject/#example-4-get-networks-within-a-network-container","text":"Get-IBObject -ObjectType 'network' -Filter 'network_container=192.168.1.0/20' Get all networks that have a parent container of 192.168.1.0/20","title":"Example 4: Get networks within a network container"},{"location":"Functions/Get-IBObject/#parameters","text":"","title":"Parameters"},{"location":"Functions/Get-IBObject/#-objecttype","text":"Object type string. (e.g. network, record:host, range) Type : String Parameter Sets : ByType, ByTypeNoPaging Aliases : type Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ObjectType"},{"location":"Functions/Get-IBObject/#-objectref","text":"Object reference string. This is usually found in the \"_ref\" field of returned objects. Type : String Parameter Sets : ByRef Aliases : _ref, ref Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-ObjectRef"},{"location":"Functions/Get-IBObject/#-batchmode","text":"If specified, objects passed via pipeline will be batched together into groups and sent as a single WAPI call per group instead of a WAPI call per object. This can increase performance but if any of the individual calls fail, the whole group is cancelled. Type : SwitchParameter Parameter Sets : ByRef Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-BatchMode"},{"location":"Functions/Get-IBObject/#-filter","text":"A string array of search filter conditions (e.g. \"name%7E=myhost\",\"ipv4addr=10.10.10.10\") or hashtable (e.g. @{'name~'='myhost';ipv4addr='10.10.10.10'}). All conditions must be satisfied to match an object. String based filters must be properly URL encoded. Hashtable filters will be automatically URL encoded. See Infoblox WAPI documentation for advanced usage details. Type : Object Parameter Sets : ByType, ByTypeNoPaging Aliases : Filters Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Filter"},{"location":"Functions/Get-IBObject/#-maxresults","text":"If set to a positive number, the results list will be truncated to that number if necessary. If set to a negative number and the results would exceed the absolute value, an error is thrown. Type : Int32 Parameter Sets : ByType Aliases : Required : False Position : Named Default value : 2147483647 Accept pipeline input : False Accept wildcard characters : False","title":"-MaxResults"},{"location":"Functions/Get-IBObject/#-pagesize","text":"The number of results to retrieve per request when auto-paging large result sets. Defaults to 1000. Set this lower if you have very large results that are causing errors with ConvertTo-Json. Type : Int32 Parameter Sets : ByType Aliases : Required : False Position : Named Default value : 1000 Accept pipeline input : False Accept wildcard characters : False","title":"-PageSize"},{"location":"Functions/Get-IBObject/#-nopaging","text":"If specified, automatic paging will not be used. This is occasionally necessary for some object type queries that return a single object reference such as dhcp:statistics. Type : SwitchParameter Parameter Sets : ByTypeNoPaging Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-NoPaging"},{"location":"Functions/Get-IBObject/#-returnfields","text":"The set of fields that should be returned in addition to the object reference. Type : String[] Parameter Sets : (All) Aliases : fields Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ReturnFields"},{"location":"Functions/Get-IBObject/#-returnbasefields","text":"If specified, the standard fields for this object type will be returned in addition to the object reference and any additional fields specified by -ReturnFields. If -ReturnFields is not used, this defaults to $true. Type : SwitchParameter Parameter Sets : (All) Aliases : base Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-ReturnBaseFields"},{"location":"Functions/Get-IBObject/#-returnallfields","text":"If specified, all readable fields will be returned for the object. This switch relies on Get-IBSchema and as such requires WAPI 1.7.5+. Because of the additional web requests necessary to make this work, it is also not recommended for performance critical code. Type : SwitchParameter Parameter Sets : (All) Aliases : all Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-ReturnAllFields"},{"location":"Functions/Get-IBObject/#-proxysearch","text":"If specified, the request is redirected to Grid manager for processing. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-ProxySearch"},{"location":"Functions/Get-IBObject/#-wapihost","text":"The fully qualified DNS name or IP address of the Infoblox WAPI endpoint (usually the grid master). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : host Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WAPIHost"},{"location":"Functions/Get-IBObject/#-wapiversion","text":"The version of the Infoblox WAPI to make calls against (e.g. '2.2'). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : version Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WAPIVersion"},{"location":"Functions/Get-IBObject/#-credential","text":"Username and password for the Infoblox appliance. This parameter is required unless it was already set using Set-IBConfig. Type : PSCredential Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Credential"},{"location":"Functions/Get-IBObject/#-skipcertificatecheck","text":"If set, SSL/TLS certificate validation will be disabled. Overrides value stored with Set-IBConfig. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-SkipCertificateCheck"},{"location":"Functions/Get-IBObject/#-profilename","text":"The name of a specific config profile to use instead of the currently active one. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ProfileName"},{"location":"Functions/Get-IBObject/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Functions/Get-IBObject/#outputs","text":"","title":"Outputs"},{"location":"Functions/Get-IBObject/#pscustomobject","text":"Zero or more objects found by the search or object reference. If an object reference is specified that doesn't exist, an error will be thrown.","title":"PSCustomObject"},{"location":"Functions/Get-IBObject/#related-links","text":"Set-IBConfig","title":"Related Links"},{"location":"Functions/Get-IBSchema/","text":"Get-IBSchema \u00b6 Synopsis \u00b6 Query the schema of an object or the base appliance. Syntax \u00b6 Get-IBSchema [[ -ObjectType ] < String >] [ -Raw ] [ -LaunchHTML ] [[ -Fields ] < String []>] [[ -Operations ] < String []>] [ -NoFields ] [[ -Functions ] < String []>] [ -NoFunctions ] [ -Detailed ] [[ -WAPIHost ] < String >] [[ -WAPIVersion ] < String >] [[ -Credential ] < PSCredential >] [ -SkipCertificateCheck ] [[ -ProfileName ] < String >] [< CommonParameters >] Description \u00b6 Without any parameters, this function will return the base appliance schema object which includes the list of supported WAPI versions and object types. Providing an -ObjectType will return the schema object for that type which includes a list of supported fields and functions. Examples \u00b6 Example 1: Root schema \u00b6 Get-IBSchema Get the root schema object. Example 2: Host record schema \u00b6 Get-IBSchema record : host Get the record:host schema object. Example 3: Host record schema raw object \u00b6 Get-IBSchema record : host -Raw Get the record:host schema object in raw object form. Example 4: Specific fields from grid schema \u00b6 Get-IBSchema grid -Fields enable *, name Get the grid schema object and only include the name field and fields that start with 'enable'. Example 5: Searchable fields from network schema \u00b6 Get-IBSchema network -Operations s -NoFunctions Get the network schema object and only include fields that are searchable and skip function definitions. Parameters \u00b6 -ObjectType \u00b6 Object type string. (e.g. network, record:host, range). Partial names and wildcards are supported. If the ObjectType parameter would match multiple objects, the list of matching objects will be returned. Type : String Parameter Sets : (All) Aliases : type Required : False Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False -Raw \u00b6 If set, the schema object will be returned as-is rather than pretty printing the output. All additional display parameters are ignored except -LaunchHTML. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -LaunchHTML \u00b6 If set, Powershell will attempt to launch a browser to the object's full HTML documentation page on the grid master. All additional display parameters are ignored except -Raw. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -Fields \u00b6 A list of Field names to include in the output. Wildcards are supported. This parameter is ignored if -NoFields is specified. If neither is specified, all Fields will be included. Type : String[] Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False -Operations \u00b6 A list of supported operation codes: r (read), w (write/create), u (update/set), s (search), d (delete). Only the Fields supporting at least one of these operations will be included in the output. If not specified, all Fields will be included. Type : String[] Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False -NoFields \u00b6 If set, the object's fields will not be included in the output. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -Functions \u00b6 A list of Function names to include in the output. Wildcards are supported. This parameter is ignored if -NoFunctions is specified. If neither is specified, all Functions will be included. Type : String[] Parameter Sets : (All) Aliases : Required : False Position : 4 Default value : None Accept pipeline input : False Accept wildcard characters : False -NoFunctions \u00b6 If set, the object's functions will not be included in the output. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -Detailed \u00b6 If set, detailed output is displayed for field and function information. Otherwise, a simplified view is displayed. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -WAPIHost \u00b6 The fully qualified DNS name or IP address of the Infoblox WAPI endpoint (usually the grid master). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : host Required : False Position : 5 Default value : None Accept pipeline input : False Accept wildcard characters : False -WAPIVersion \u00b6 The version of the Infoblox WAPI to make calls against (e.g. '2.2'). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : version Required : False Position : 6 Default value : None Accept pipeline input : False Accept wildcard characters : False -Credential \u00b6 Username and password for the Infoblox appliance. This parameter is required unless it was already set using Set-IBConfig. Type : PSCredential Parameter Sets : (All) Aliases : Required : False Position : 7 Default value : None Accept pipeline input : False Accept wildcard characters : False -SkipCertificateCheck \u00b6 If set, SSL/TLS certificate validation will be disabled. Overrides value stored with Set-IBConfig. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -ProfileName \u00b6 The name of a specific config profile to use instead of the currently active one. Type : String Parameter Sets : (All) Aliases : Required : False Position : 8 Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters \u00b6 This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Related Links \u00b6 Get-IBObject","title":"Get-IBSchema"},{"location":"Functions/Get-IBSchema/#get-ibschema","text":"","title":"Get-IBSchema"},{"location":"Functions/Get-IBSchema/#synopsis","text":"Query the schema of an object or the base appliance.","title":"Synopsis"},{"location":"Functions/Get-IBSchema/#syntax","text":"Get-IBSchema [[ -ObjectType ] < String >] [ -Raw ] [ -LaunchHTML ] [[ -Fields ] < String []>] [[ -Operations ] < String []>] [ -NoFields ] [[ -Functions ] < String []>] [ -NoFunctions ] [ -Detailed ] [[ -WAPIHost ] < String >] [[ -WAPIVersion ] < String >] [[ -Credential ] < PSCredential >] [ -SkipCertificateCheck ] [[ -ProfileName ] < String >] [< CommonParameters >]","title":"Syntax"},{"location":"Functions/Get-IBSchema/#description","text":"Without any parameters, this function will return the base appliance schema object which includes the list of supported WAPI versions and object types. Providing an -ObjectType will return the schema object for that type which includes a list of supported fields and functions.","title":"Description"},{"location":"Functions/Get-IBSchema/#examples","text":"","title":"Examples"},{"location":"Functions/Get-IBSchema/#example-1-root-schema","text":"Get-IBSchema Get the root schema object.","title":"Example 1: Root schema"},{"location":"Functions/Get-IBSchema/#example-2-host-record-schema","text":"Get-IBSchema record : host Get the record:host schema object.","title":"Example 2: Host record schema"},{"location":"Functions/Get-IBSchema/#example-3-host-record-schema-raw-object","text":"Get-IBSchema record : host -Raw Get the record:host schema object in raw object form.","title":"Example 3: Host record schema raw object"},{"location":"Functions/Get-IBSchema/#example-4-specific-fields-from-grid-schema","text":"Get-IBSchema grid -Fields enable *, name Get the grid schema object and only include the name field and fields that start with 'enable'.","title":"Example 4: Specific fields from grid schema"},{"location":"Functions/Get-IBSchema/#example-5-searchable-fields-from-network-schema","text":"Get-IBSchema network -Operations s -NoFunctions Get the network schema object and only include fields that are searchable and skip function definitions.","title":"Example 5: Searchable fields from network schema"},{"location":"Functions/Get-IBSchema/#parameters","text":"","title":"Parameters"},{"location":"Functions/Get-IBSchema/#-objecttype","text":"Object type string. (e.g. network, record:host, range). Partial names and wildcards are supported. If the ObjectType parameter would match multiple objects, the list of matching objects will be returned. Type : String Parameter Sets : (All) Aliases : type Required : False Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ObjectType"},{"location":"Functions/Get-IBSchema/#-raw","text":"If set, the schema object will be returned as-is rather than pretty printing the output. All additional display parameters are ignored except -LaunchHTML. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-Raw"},{"location":"Functions/Get-IBSchema/#-launchhtml","text":"If set, Powershell will attempt to launch a browser to the object's full HTML documentation page on the grid master. All additional display parameters are ignored except -Raw. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-LaunchHTML"},{"location":"Functions/Get-IBSchema/#-fields","text":"A list of Field names to include in the output. Wildcards are supported. This parameter is ignored if -NoFields is specified. If neither is specified, all Fields will be included. Type : String[] Parameter Sets : (All) Aliases : Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Fields"},{"location":"Functions/Get-IBSchema/#-operations","text":"A list of supported operation codes: r (read), w (write/create), u (update/set), s (search), d (delete). Only the Fields supporting at least one of these operations will be included in the output. If not specified, all Fields will be included. Type : String[] Parameter Sets : (All) Aliases : Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Operations"},{"location":"Functions/Get-IBSchema/#-nofields","text":"If set, the object's fields will not be included in the output. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-NoFields"},{"location":"Functions/Get-IBSchema/#-functions","text":"A list of Function names to include in the output. Wildcards are supported. This parameter is ignored if -NoFunctions is specified. If neither is specified, all Functions will be included. Type : String[] Parameter Sets : (All) Aliases : Required : False Position : 4 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Functions"},{"location":"Functions/Get-IBSchema/#-nofunctions","text":"If set, the object's functions will not be included in the output. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-NoFunctions"},{"location":"Functions/Get-IBSchema/#-detailed","text":"If set, detailed output is displayed for field and function information. Otherwise, a simplified view is displayed. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-Detailed"},{"location":"Functions/Get-IBSchema/#-wapihost","text":"The fully qualified DNS name or IP address of the Infoblox WAPI endpoint (usually the grid master). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : host Required : False Position : 5 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WAPIHost"},{"location":"Functions/Get-IBSchema/#-wapiversion","text":"The version of the Infoblox WAPI to make calls against (e.g. '2.2'). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : version Required : False Position : 6 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WAPIVersion"},{"location":"Functions/Get-IBSchema/#-credential","text":"Username and password for the Infoblox appliance. This parameter is required unless it was already set using Set-IBConfig. Type : PSCredential Parameter Sets : (All) Aliases : Required : False Position : 7 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Credential"},{"location":"Functions/Get-IBSchema/#-skipcertificatecheck","text":"If set, SSL/TLS certificate validation will be disabled. Overrides value stored with Set-IBConfig. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-SkipCertificateCheck"},{"location":"Functions/Get-IBSchema/#-profilename","text":"The name of a specific config profile to use instead of the currently active one. Type : String Parameter Sets : (All) Aliases : Required : False Position : 8 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ProfileName"},{"location":"Functions/Get-IBSchema/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Functions/Get-IBSchema/#related-links","text":"Get-IBObject","title":"Related Links"},{"location":"Functions/Invoke-IBFunction/","text":"Invoke-IBFunction \u00b6 Synopsis \u00b6 Call a WAPI function Syntax \u00b6 Invoke-IBFunction [ -ObjectRef ] < String > [ -FunctionName ] < String > [[ -FunctionArgs ] < PSObject >] [[ -WAPIHost ] < String >] [[ -WAPIVersion ] < String >] [[ -Credential ] < PSCredential >] [ -SkipCertificateCheck ] [[ -ProfileName ] < String >] [ -WhatIf ] [ -Confirm ] [< CommonParameters >] Description \u00b6 This function allows you to call a WAPI function given a specific object reference and the function details. Examples \u00b6 Example 1: Restart grid services \u00b6 $grid = Get-IBObject -type grid $restartArgs = @{ restart_option = 'RESTART_IF_NEEDED' } $grid | Invoke-IBFunction -name restartservices -args $restartArgs Restart grid services if necessary. Parameters \u00b6 -ObjectRef \u00b6 Object reference string. This is usually found in the \"_ref\" field of returned objects. Type : String Parameter Sets : (All) Aliases : _ref, ref Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -FunctionName \u00b6 The name of the function to call. Type : String Parameter Sets : (All) Aliases : name Required : True Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False -FunctionArgs \u00b6 An object with the required parameters for the function. Type : PSObject Parameter Sets : (All) Aliases : args Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False -WAPIHost \u00b6 The fully qualified DNS name or IP address of the Infoblox WAPI endpoint (usually the grid master). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : host Required : False Position : 4 Default value : None Accept pipeline input : False Accept wildcard characters : False -WAPIVersion \u00b6 The version of the Infoblox WAPI to make calls against (e.g. '2.2'). Type : String Parameter Sets : (All) Aliases : version Required : False Position : 5 Default value : None Accept pipeline input : False Accept wildcard characters : False -Credential \u00b6 Username and password for the Infoblox appliance. This parameter is required unless it was already set using Set-IBConfig. Type : PSCredential Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : None Accept pipeline input : False Accept wildcard characters : False -SkipCertificateCheck \u00b6 If set, SSL/TLS certificate validation will be disabled. Overrides value stored with Set-IBConfig. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -ProfileName \u00b6 The name of a specific config profile to use instead of the currently active one. Type : String Parameter Sets : (All) Aliases : Required : False Position : 7 Default value : None Accept pipeline input : False Accept wildcard characters : False -WhatIf \u00b6 Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm \u00b6 Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters \u00b6 This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Related Links \u00b6 Get-IBObject","title":"Invoke-IBFunction"},{"location":"Functions/Invoke-IBFunction/#invoke-ibfunction","text":"","title":"Invoke-IBFunction"},{"location":"Functions/Invoke-IBFunction/#synopsis","text":"Call a WAPI function","title":"Synopsis"},{"location":"Functions/Invoke-IBFunction/#syntax","text":"Invoke-IBFunction [ -ObjectRef ] < String > [ -FunctionName ] < String > [[ -FunctionArgs ] < PSObject >] [[ -WAPIHost ] < String >] [[ -WAPIVersion ] < String >] [[ -Credential ] < PSCredential >] [ -SkipCertificateCheck ] [[ -ProfileName ] < String >] [ -WhatIf ] [ -Confirm ] [< CommonParameters >]","title":"Syntax"},{"location":"Functions/Invoke-IBFunction/#description","text":"This function allows you to call a WAPI function given a specific object reference and the function details.","title":"Description"},{"location":"Functions/Invoke-IBFunction/#examples","text":"","title":"Examples"},{"location":"Functions/Invoke-IBFunction/#example-1-restart-grid-services","text":"$grid = Get-IBObject -type grid $restartArgs = @{ restart_option = 'RESTART_IF_NEEDED' } $grid | Invoke-IBFunction -name restartservices -args $restartArgs Restart grid services if necessary.","title":"Example 1: Restart grid services"},{"location":"Functions/Invoke-IBFunction/#parameters","text":"","title":"Parameters"},{"location":"Functions/Invoke-IBFunction/#-objectref","text":"Object reference string. This is usually found in the \"_ref\" field of returned objects. Type : String Parameter Sets : (All) Aliases : _ref, ref Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-ObjectRef"},{"location":"Functions/Invoke-IBFunction/#-functionname","text":"The name of the function to call. Type : String Parameter Sets : (All) Aliases : name Required : True Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-FunctionName"},{"location":"Functions/Invoke-IBFunction/#-functionargs","text":"An object with the required parameters for the function. Type : PSObject Parameter Sets : (All) Aliases : args Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-FunctionArgs"},{"location":"Functions/Invoke-IBFunction/#-wapihost","text":"The fully qualified DNS name or IP address of the Infoblox WAPI endpoint (usually the grid master). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : host Required : False Position : 4 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WAPIHost"},{"location":"Functions/Invoke-IBFunction/#-wapiversion","text":"The version of the Infoblox WAPI to make calls against (e.g. '2.2'). Type : String Parameter Sets : (All) Aliases : version Required : False Position : 5 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WAPIVersion"},{"location":"Functions/Invoke-IBFunction/#-credential","text":"Username and password for the Infoblox appliance. This parameter is required unless it was already set using Set-IBConfig. Type : PSCredential Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Credential"},{"location":"Functions/Invoke-IBFunction/#-skipcertificatecheck","text":"If set, SSL/TLS certificate validation will be disabled. Overrides value stored with Set-IBConfig. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-SkipCertificateCheck"},{"location":"Functions/Invoke-IBFunction/#-profilename","text":"The name of a specific config profile to use instead of the currently active one. Type : String Parameter Sets : (All) Aliases : Required : False Position : 7 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ProfileName"},{"location":"Functions/Invoke-IBFunction/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"Functions/Invoke-IBFunction/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"Functions/Invoke-IBFunction/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Functions/Invoke-IBFunction/#related-links","text":"Get-IBObject","title":"Related Links"},{"location":"Functions/Invoke-IBWAPI/","text":"Invoke-IBWAPI \u00b6 Synopsis \u00b6 Send a request to the Infoblox WAPI (REST API). Syntax \u00b6 Uri (Default) \u00b6 Invoke-IBWAPI [ -Uri ] < Uri > [ -Method < WebRequestMethod >] [ -Credential < PSCredential >] [ -Body < Object >] [ -ContentType < String >] [ -OutFile < String >] [ -SessionVariable < String >] [ -WebSession < WebRequestSession >] [ -SkipCertificateCheck ] [ -WhatIf ] [ -Confirm ] [< CommonParameters >] HostVersion \u00b6 Invoke-IBWAPI [ -WAPIHost ] < String > [ -WAPIVersion ] < String > [ -Query ] < String > [ -Method < WebRequestMethod >] [ -Credential < PSCredential >] [ -Body < Object >] [ -ContentType < String >] [ -OutFile < String >] [ -SessionVariable < String >] [ -WebSession < WebRequestSession >] [ -SkipCertificateCheck ] [ -WhatIf ] [ -Confirm ] [< CommonParameters >] Description \u00b6 This function is largely just a wrapper around Invoke-RestMethod that supports trapping and exposing syntax errors with the WAPI and the ability to ignore certificate validation. It is what all of the *-IBObject functions use under the hood and shouldn't be necessary to call directly most of the time. Examples \u00b6 Example 1: Get network objects \u00b6 Invoke-IBWAPI -Uri 'https://gridmaster.example.com/wapi/v2.2/network' -Credential ( Get-Credential ) Retrieve the list of network objects from the grid master using interactive credentials. Parameters \u00b6 -Uri \u00b6 The full Uri of the WAPI endpoint. (e.g. https://gridmaster.example.com/wapi/v2.2/network) Type : Uri Parameter Sets : Uri Aliases : Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False -WAPIHost \u00b6 The fully qualified DNS name or IP address of the Infoblox WAPI endpoint (usually the grid master). Type : String Parameter Sets : HostVersion Aliases : host Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False -WAPIVersion \u00b6 The version of the Infoblox WAPI to make calls against (e.g. '2.2'). Type : String Parameter Sets : HostVersion Aliases : version Required : True Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False -Query \u00b6 The object type or reference being queried along with any URI querystring parameters. (e.g. 'network' or 'network?comment=Production') Type : String Parameter Sets : HostVersion Aliases : Required : True Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False -Method \u00b6 The HTTP method to use in the request. Default is GET. Type : WebRequestMethod Parameter Sets : (All) Aliases : Accepted values : Default, Get, Head, Post, Put, Delete, Trace, Options, Merge, Patch Required : False Position : Named Default value : Get Accept pipeline input : False Accept wildcard characters : False -Credential \u00b6 Username and password for the Infoblox appliance. This parameter is required unless -WebSession is specified. Type : PSCredential Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Body \u00b6 The body of the request. This is usually either a JSON string or an object that will be converted to JSON automatically by the function. If the ContentType parameter is used, this function will not attempt to automatically convert the Body to JSON. Type : Object Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -ContentType \u00b6 The Content-Type header for the request. Default is 'application/json; charset=utf-8'. If specified along with a Body parameter, the Body will not be modified before being passed to the WAPI. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : Application/json; charset=utf-8 Accept pipeline input : False Accept wildcard characters : False -OutFile \u00b6 Specifies the output file that this cmdlet saves the response body. Enter a path and file name. If you omit the path, the default is the current location. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -SessionVariable \u00b6 Specifies a variable for which this cmdlet creates a web request session and saves it in the value. Enter a variable name without the dollar sign ($) symbol. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -WebSession \u00b6 Specifies an existing WebSession object to use with the request. If specified, the SessionVariable parameter will be ignored. Type : WebRequestSession Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -SkipCertificateCheck \u00b6 If set, SSL/TLS certificate validation will be disabled. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -WhatIf \u00b6 Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm \u00b6 Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters \u00b6 This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Related Links \u00b6 New-IBObject Get-IBObject","title":"Invoke-IBWAPI"},{"location":"Functions/Invoke-IBWAPI/#invoke-ibwapi","text":"","title":"Invoke-IBWAPI"},{"location":"Functions/Invoke-IBWAPI/#synopsis","text":"Send a request to the Infoblox WAPI (REST API).","title":"Synopsis"},{"location":"Functions/Invoke-IBWAPI/#syntax","text":"","title":"Syntax"},{"location":"Functions/Invoke-IBWAPI/#uri-default","text":"Invoke-IBWAPI [ -Uri ] < Uri > [ -Method < WebRequestMethod >] [ -Credential < PSCredential >] [ -Body < Object >] [ -ContentType < String >] [ -OutFile < String >] [ -SessionVariable < String >] [ -WebSession < WebRequestSession >] [ -SkipCertificateCheck ] [ -WhatIf ] [ -Confirm ] [< CommonParameters >]","title":"Uri (Default)"},{"location":"Functions/Invoke-IBWAPI/#hostversion","text":"Invoke-IBWAPI [ -WAPIHost ] < String > [ -WAPIVersion ] < String > [ -Query ] < String > [ -Method < WebRequestMethod >] [ -Credential < PSCredential >] [ -Body < Object >] [ -ContentType < String >] [ -OutFile < String >] [ -SessionVariable < String >] [ -WebSession < WebRequestSession >] [ -SkipCertificateCheck ] [ -WhatIf ] [ -Confirm ] [< CommonParameters >]","title":"HostVersion"},{"location":"Functions/Invoke-IBWAPI/#description","text":"This function is largely just a wrapper around Invoke-RestMethod that supports trapping and exposing syntax errors with the WAPI and the ability to ignore certificate validation. It is what all of the *-IBObject functions use under the hood and shouldn't be necessary to call directly most of the time.","title":"Description"},{"location":"Functions/Invoke-IBWAPI/#examples","text":"","title":"Examples"},{"location":"Functions/Invoke-IBWAPI/#example-1-get-network-objects","text":"Invoke-IBWAPI -Uri 'https://gridmaster.example.com/wapi/v2.2/network' -Credential ( Get-Credential ) Retrieve the list of network objects from the grid master using interactive credentials.","title":"Example 1: Get network objects"},{"location":"Functions/Invoke-IBWAPI/#parameters","text":"","title":"Parameters"},{"location":"Functions/Invoke-IBWAPI/#-uri","text":"The full Uri of the WAPI endpoint. (e.g. https://gridmaster.example.com/wapi/v2.2/network) Type : Uri Parameter Sets : Uri Aliases : Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Uri"},{"location":"Functions/Invoke-IBWAPI/#-wapihost","text":"The fully qualified DNS name or IP address of the Infoblox WAPI endpoint (usually the grid master). Type : String Parameter Sets : HostVersion Aliases : host Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WAPIHost"},{"location":"Functions/Invoke-IBWAPI/#-wapiversion","text":"The version of the Infoblox WAPI to make calls against (e.g. '2.2'). Type : String Parameter Sets : HostVersion Aliases : version Required : True Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WAPIVersion"},{"location":"Functions/Invoke-IBWAPI/#-query","text":"The object type or reference being queried along with any URI querystring parameters. (e.g. 'network' or 'network?comment=Production') Type : String Parameter Sets : HostVersion Aliases : Required : True Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Query"},{"location":"Functions/Invoke-IBWAPI/#-method","text":"The HTTP method to use in the request. Default is GET. Type : WebRequestMethod Parameter Sets : (All) Aliases : Accepted values : Default, Get, Head, Post, Put, Delete, Trace, Options, Merge, Patch Required : False Position : Named Default value : Get Accept pipeline input : False Accept wildcard characters : False","title":"-Method"},{"location":"Functions/Invoke-IBWAPI/#-credential","text":"Username and password for the Infoblox appliance. This parameter is required unless -WebSession is specified. Type : PSCredential Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Credential"},{"location":"Functions/Invoke-IBWAPI/#-body","text":"The body of the request. This is usually either a JSON string or an object that will be converted to JSON automatically by the function. If the ContentType parameter is used, this function will not attempt to automatically convert the Body to JSON. Type : Object Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Body"},{"location":"Functions/Invoke-IBWAPI/#-contenttype","text":"The Content-Type header for the request. Default is 'application/json; charset=utf-8'. If specified along with a Body parameter, the Body will not be modified before being passed to the WAPI. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : Application/json; charset=utf-8 Accept pipeline input : False Accept wildcard characters : False","title":"-ContentType"},{"location":"Functions/Invoke-IBWAPI/#-outfile","text":"Specifies the output file that this cmdlet saves the response body. Enter a path and file name. If you omit the path, the default is the current location. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-OutFile"},{"location":"Functions/Invoke-IBWAPI/#-sessionvariable","text":"Specifies a variable for which this cmdlet creates a web request session and saves it in the value. Enter a variable name without the dollar sign ($) symbol. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-SessionVariable"},{"location":"Functions/Invoke-IBWAPI/#-websession","text":"Specifies an existing WebSession object to use with the request. If specified, the SessionVariable parameter will be ignored. Type : WebRequestSession Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WebSession"},{"location":"Functions/Invoke-IBWAPI/#-skipcertificatecheck","text":"If set, SSL/TLS certificate validation will be disabled. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-SkipCertificateCheck"},{"location":"Functions/Invoke-IBWAPI/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"Functions/Invoke-IBWAPI/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"Functions/Invoke-IBWAPI/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Functions/Invoke-IBWAPI/#related-links","text":"New-IBObject Get-IBObject","title":"Related Links"},{"location":"Functions/New-IBObject/","text":"New-IBObject \u00b6 Synopsis \u00b6 Create an object in Infoblox. Syntax \u00b6 New-IBObject [ -ObjectType ] < String > [ -IBObject ] < PSObject > [[ -ReturnFields ] < String []>] [ -ReturnBaseFields ] [ -BatchMode ] [[ -WAPIHost ] < String >] [[ -WAPIVersion ] < String >] [[ -Credential ] < PSCredential >] [ -SkipCertificateCheck ] [[ -ProfileName ] < String >] [ -WhatIf ] [ -Confirm ] [< CommonParameters >] Description \u00b6 Create an object by specifying the type and a PSObject with the required (and optional) fields for that type. Examples \u00b6 Example 1: New network \u00b6 $mynetwork = @{ network = '10.10.12.0/24' ; comment = 'my network' } New-IBObject -ObjectType 'network' -IBObject $mynetwork Create a basic new network with a comment. Example 2 New host with next IP \u00b6 $myhost = @{ name = 'myhost' ; comment = 'my host' ; configure_for_dns = $false } $myhost . ipv4addrs = @(@{ ipv4addr = 'func:nextavailableip:10.10.12.0/24' }) New-IBObject 'record:host' $myhost -ReturnFields 'comment' , 'configure_for_dns' -ReturnBaseFields Create a new host record using an embedded function to get the next available IP in the specified network. Returns the basic host fields plus the comment and configure_for_dns fields. Example 3: Multiple hosts with a template \u00b6 $template = @{ name = 'dummy' ; configure_for_dns = $false ; ipv4addrs =@(@{ ipv4addr = \"func:nextavailableip:10.10.12.0/24\" })} 1 .. 5 | %{ $template . name = \"myhost$_\" ; $template } | New-IBObject -ObjectType 'record:host' -BatchMode Create a template object. Then create 5 new host records with sequential names using the next 5 available IPs in the specified network based on the template. Example 4: New network with extensible attribute \u00b6 New-IBObject -ObjectType 'network' -IBObject @{ network = '192.168.1.0/24' ; extattrs =@{ 'Environment' =@{ value = 'Production' } } } Create a network object that has extensibility attribute 'Environment' with value of 'Production' Example 5: New extensible attribute definition \u00b6 New-IBObject -ObjectType 'extensibleattributedef' -IBObject @{ name = 'TestAttribute' ; flags = 'I' ; type = 'STRING' ; allowed_object_types = 'Network' , 'NetworkContainer' } Create an extensible attribute of STRING type with name of 'TestAttribute' enabled for object types IPV4 Network and IPV4 NetworkContainer and enable inheritance. Note that Network is a case sensitive string, this will not work if one would used 'network' or 'Networkcontainer'. Parameters \u00b6 -ObjectType \u00b6 Object type string. (e.g. network, record:host, range) Type : String Parameter Sets : (All) Aliases : type Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False -IBObject \u00b6 A PSObject with the required fields for the specified type. Optional fields may also be included. Type : PSObject Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : True (ByValue) Accept wildcard characters : False -ReturnFields \u00b6 The set of fields that should be returned in addition to the object reference. Type : String[] Parameter Sets : (All) Aliases : fields Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False -ReturnBaseFields \u00b6 If specified, the standard fields for this object type will be returned in addition to the object reference and any additional fields specified by -ReturnFields. Type : SwitchParameter Parameter Sets : (All) Aliases : base Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -BatchMode \u00b6 If specified, objects passed via pipeline will be batched together into groups and sent as a single WAPI call per group instead of a WAPI call per object. This can increase performance but if any of the individual calls fail, the whole group is cancelled. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -WAPIHost \u00b6 The fully qualified DNS name or IP address of the Infoblox WAPI endpoint (usually the grid master). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : host Required : False Position : 4 Default value : None Accept pipeline input : False Accept wildcard characters : False -WAPIVersion \u00b6 The version of the Infoblox WAPI to make calls against (e.g. '2.2'). Type : String Parameter Sets : (All) Aliases : version Required : False Position : 5 Default value : None Accept pipeline input : False Accept wildcard characters : False -Credential \u00b6 Username and password for the Infoblox appliance. This parameter is required unless it was already set using Set-IBConfig. Type : PSCredential Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : None Accept pipeline input : False Accept wildcard characters : False -SkipCertificateCheck \u00b6 If set, SSL/TLS certificate validation will be disabled. Overrides value stored with Set-IBConfig. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -ProfileName \u00b6 The name of a specific config profile to use instead of the currently active one. Type : String Parameter Sets : (All) Aliases : Required : False Position : 7 Default value : None Accept pipeline input : False Accept wildcard characters : False -WhatIf \u00b6 Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm \u00b6 Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters \u00b6 This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Outputs \u00b6 PSCustomObject \u00b6 The object reference string of the created item or a custom object if -ReturnFields or -ReturnBaseFields was used. Related Links \u00b6 Get-IBObject","title":"New-IBObject"},{"location":"Functions/New-IBObject/#new-ibobject","text":"","title":"New-IBObject"},{"location":"Functions/New-IBObject/#synopsis","text":"Create an object in Infoblox.","title":"Synopsis"},{"location":"Functions/New-IBObject/#syntax","text":"New-IBObject [ -ObjectType ] < String > [ -IBObject ] < PSObject > [[ -ReturnFields ] < String []>] [ -ReturnBaseFields ] [ -BatchMode ] [[ -WAPIHost ] < String >] [[ -WAPIVersion ] < String >] [[ -Credential ] < PSCredential >] [ -SkipCertificateCheck ] [[ -ProfileName ] < String >] [ -WhatIf ] [ -Confirm ] [< CommonParameters >]","title":"Syntax"},{"location":"Functions/New-IBObject/#description","text":"Create an object by specifying the type and a PSObject with the required (and optional) fields for that type.","title":"Description"},{"location":"Functions/New-IBObject/#examples","text":"","title":"Examples"},{"location":"Functions/New-IBObject/#example-1-new-network","text":"$mynetwork = @{ network = '10.10.12.0/24' ; comment = 'my network' } New-IBObject -ObjectType 'network' -IBObject $mynetwork Create a basic new network with a comment.","title":"Example 1: New network"},{"location":"Functions/New-IBObject/#example-2-new-host-with-next-ip","text":"$myhost = @{ name = 'myhost' ; comment = 'my host' ; configure_for_dns = $false } $myhost . ipv4addrs = @(@{ ipv4addr = 'func:nextavailableip:10.10.12.0/24' }) New-IBObject 'record:host' $myhost -ReturnFields 'comment' , 'configure_for_dns' -ReturnBaseFields Create a new host record using an embedded function to get the next available IP in the specified network. Returns the basic host fields plus the comment and configure_for_dns fields.","title":"Example 2 New host with next IP"},{"location":"Functions/New-IBObject/#example-3-multiple-hosts-with-a-template","text":"$template = @{ name = 'dummy' ; configure_for_dns = $false ; ipv4addrs =@(@{ ipv4addr = \"func:nextavailableip:10.10.12.0/24\" })} 1 .. 5 | %{ $template . name = \"myhost$_\" ; $template } | New-IBObject -ObjectType 'record:host' -BatchMode Create a template object. Then create 5 new host records with sequential names using the next 5 available IPs in the specified network based on the template.","title":"Example 3: Multiple hosts with a template"},{"location":"Functions/New-IBObject/#example-4-new-network-with-extensible-attribute","text":"New-IBObject -ObjectType 'network' -IBObject @{ network = '192.168.1.0/24' ; extattrs =@{ 'Environment' =@{ value = 'Production' } } } Create a network object that has extensibility attribute 'Environment' with value of 'Production'","title":"Example 4: New network with extensible attribute"},{"location":"Functions/New-IBObject/#example-5-new-extensible-attribute-definition","text":"New-IBObject -ObjectType 'extensibleattributedef' -IBObject @{ name = 'TestAttribute' ; flags = 'I' ; type = 'STRING' ; allowed_object_types = 'Network' , 'NetworkContainer' } Create an extensible attribute of STRING type with name of 'TestAttribute' enabled for object types IPV4 Network and IPV4 NetworkContainer and enable inheritance. Note that Network is a case sensitive string, this will not work if one would used 'network' or 'Networkcontainer'.","title":"Example 5: New extensible attribute definition"},{"location":"Functions/New-IBObject/#parameters","text":"","title":"Parameters"},{"location":"Functions/New-IBObject/#-objecttype","text":"Object type string. (e.g. network, record:host, range) Type : String Parameter Sets : (All) Aliases : type Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ObjectType"},{"location":"Functions/New-IBObject/#-ibobject","text":"A PSObject with the required fields for the specified type. Optional fields may also be included. Type : PSObject Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : True (ByValue) Accept wildcard characters : False","title":"-IBObject"},{"location":"Functions/New-IBObject/#-returnfields","text":"The set of fields that should be returned in addition to the object reference. Type : String[] Parameter Sets : (All) Aliases : fields Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ReturnFields"},{"location":"Functions/New-IBObject/#-returnbasefields","text":"If specified, the standard fields for this object type will be returned in addition to the object reference and any additional fields specified by -ReturnFields. Type : SwitchParameter Parameter Sets : (All) Aliases : base Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-ReturnBaseFields"},{"location":"Functions/New-IBObject/#-batchmode","text":"If specified, objects passed via pipeline will be batched together into groups and sent as a single WAPI call per group instead of a WAPI call per object. This can increase performance but if any of the individual calls fail, the whole group is cancelled. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-BatchMode"},{"location":"Functions/New-IBObject/#-wapihost","text":"The fully qualified DNS name or IP address of the Infoblox WAPI endpoint (usually the grid master). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : host Required : False Position : 4 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WAPIHost"},{"location":"Functions/New-IBObject/#-wapiversion","text":"The version of the Infoblox WAPI to make calls against (e.g. '2.2'). Type : String Parameter Sets : (All) Aliases : version Required : False Position : 5 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WAPIVersion"},{"location":"Functions/New-IBObject/#-credential","text":"Username and password for the Infoblox appliance. This parameter is required unless it was already set using Set-IBConfig. Type : PSCredential Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Credential"},{"location":"Functions/New-IBObject/#-skipcertificatecheck","text":"If set, SSL/TLS certificate validation will be disabled. Overrides value stored with Set-IBConfig. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-SkipCertificateCheck"},{"location":"Functions/New-IBObject/#-profilename","text":"The name of a specific config profile to use instead of the currently active one. Type : String Parameter Sets : (All) Aliases : Required : False Position : 7 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ProfileName"},{"location":"Functions/New-IBObject/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"Functions/New-IBObject/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"Functions/New-IBObject/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Functions/New-IBObject/#outputs","text":"","title":"Outputs"},{"location":"Functions/New-IBObject/#pscustomobject","text":"The object reference string of the created item or a custom object if -ReturnFields or -ReturnBaseFields was used.","title":"PSCustomObject"},{"location":"Functions/New-IBObject/#related-links","text":"Get-IBObject","title":"Related Links"},{"location":"Functions/Receive-IBFile/","text":"Receive-IBFile \u00b6 Synopsis \u00b6 Download a file from a fileop function Syntax \u00b6 Receive-IBFile [ -FunctionName ] < String > [ -OutFile ] < String > [[ -FunctionArgs ] < Hashtable >] [[ -ObjectRef ] < String >] [ -OverrideTransferHost ] [[ -WAPIHost ] < String >] [[ -WAPIVersion ] < String >] [[ -Credential ] < PSCredential >] [ -SkipCertificateCheck ] [[ -ProfileName ] < String >] [< CommonParameters >] Description \u00b6 This is a wrapper around the various fileop functions that allow data export from Infoblox. Examples \u00b6 Example 1: Download grid backup \u00b6 Receive-IBFile getgriddata .\\ backup . tar . gz -args @{ type = 'BACKUP' } Download a grid backup file using the 'getgriddata' fileop function. Example 2: Download CSV export \u00b6 Receive-IBFile csv_export .\\ host-records . csv -args @{ _object = 'record:host' } Download a CSV export of all host records using the 'csv_export' fileop function. Parameters \u00b6 -FunctionName \u00b6 The name of the fileop download function to call. Type : String Parameter Sets : (All) Aliases : name Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False -OutFile \u00b6 Specifies the output file that this cmdlet saves the response body. Enter a path and file name. If you omit the path, the default is the current location. Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False -FunctionArgs \u00b6 A hashtable with the required parameters for the function. NOTE: 'token' parameters are handled automatically and can be ignored. Type : Hashtable Parameter Sets : (All) Aliases : args Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False -ObjectRef \u00b6 Object reference string. This is usually found in the \"_ref\" field of returned objects. Type : String Parameter Sets : (All) Aliases : _ref, ref, ObjectType, type Required : False Position : 4 Default value : Fileop Accept pipeline input : False Accept wildcard characters : False -OverrideTransferHost \u00b6 If set, the hostname in the transfer URL returned by WAPI will be overridden to match the original WAPIHost if they don't already match. The SkipCertificateCheck switch will also be updated to match the passed in value instead of always being set to true for the call. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -WAPIHost \u00b6 The fully qualified DNS name or IP address of the Infoblox WAPI endpoint (usually the grid master). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : host Required : False Position : 5 Default value : None Accept pipeline input : False Accept wildcard characters : False -WAPIVersion \u00b6 The version of the Infoblox WAPI to make calls against (e.g. '2.2'). Type : String Parameter Sets : (All) Aliases : version Required : False Position : 6 Default value : None Accept pipeline input : False Accept wildcard characters : False -Credential \u00b6 Username and password for the Infoblox appliance. This parameter is required unless it was already set using Set-IBConfig. Type : PSCredential Parameter Sets : (All) Aliases : Required : False Position : 7 Default value : None Accept pipeline input : False Accept wildcard characters : False -SkipCertificateCheck \u00b6 If set, SSL/TLS certificate validation will be disabled. Overrides value stored with Set-IBConfig. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -ProfileName \u00b6 The name of a specific config profile to use instead of the currently active one. Type : String Parameter Sets : (All) Aliases : Required : False Position : 8 Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters \u00b6 This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Related Links \u00b6 Invoke-IBFunction","title":"Receive-IBFile"},{"location":"Functions/Receive-IBFile/#receive-ibfile","text":"","title":"Receive-IBFile"},{"location":"Functions/Receive-IBFile/#synopsis","text":"Download a file from a fileop function","title":"Synopsis"},{"location":"Functions/Receive-IBFile/#syntax","text":"Receive-IBFile [ -FunctionName ] < String > [ -OutFile ] < String > [[ -FunctionArgs ] < Hashtable >] [[ -ObjectRef ] < String >] [ -OverrideTransferHost ] [[ -WAPIHost ] < String >] [[ -WAPIVersion ] < String >] [[ -Credential ] < PSCredential >] [ -SkipCertificateCheck ] [[ -ProfileName ] < String >] [< CommonParameters >]","title":"Syntax"},{"location":"Functions/Receive-IBFile/#description","text":"This is a wrapper around the various fileop functions that allow data export from Infoblox.","title":"Description"},{"location":"Functions/Receive-IBFile/#examples","text":"","title":"Examples"},{"location":"Functions/Receive-IBFile/#example-1-download-grid-backup","text":"Receive-IBFile getgriddata .\\ backup . tar . gz -args @{ type = 'BACKUP' } Download a grid backup file using the 'getgriddata' fileop function.","title":"Example 1: Download grid backup"},{"location":"Functions/Receive-IBFile/#example-2-download-csv-export","text":"Receive-IBFile csv_export .\\ host-records . csv -args @{ _object = 'record:host' } Download a CSV export of all host records using the 'csv_export' fileop function.","title":"Example 2: Download CSV export"},{"location":"Functions/Receive-IBFile/#parameters","text":"","title":"Parameters"},{"location":"Functions/Receive-IBFile/#-functionname","text":"The name of the fileop download function to call. Type : String Parameter Sets : (All) Aliases : name Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-FunctionName"},{"location":"Functions/Receive-IBFile/#-outfile","text":"Specifies the output file that this cmdlet saves the response body. Enter a path and file name. If you omit the path, the default is the current location. Type : String Parameter Sets : (All) Aliases : Required : True Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-OutFile"},{"location":"Functions/Receive-IBFile/#-functionargs","text":"A hashtable with the required parameters for the function. NOTE: 'token' parameters are handled automatically and can be ignored. Type : Hashtable Parameter Sets : (All) Aliases : args Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-FunctionArgs"},{"location":"Functions/Receive-IBFile/#-objectref","text":"Object reference string. This is usually found in the \"_ref\" field of returned objects. Type : String Parameter Sets : (All) Aliases : _ref, ref, ObjectType, type Required : False Position : 4 Default value : Fileop Accept pipeline input : False Accept wildcard characters : False","title":"-ObjectRef"},{"location":"Functions/Receive-IBFile/#-overridetransferhost","text":"If set, the hostname in the transfer URL returned by WAPI will be overridden to match the original WAPIHost if they don't already match. The SkipCertificateCheck switch will also be updated to match the passed in value instead of always being set to true for the call. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-OverrideTransferHost"},{"location":"Functions/Receive-IBFile/#-wapihost","text":"The fully qualified DNS name or IP address of the Infoblox WAPI endpoint (usually the grid master). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : host Required : False Position : 5 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WAPIHost"},{"location":"Functions/Receive-IBFile/#-wapiversion","text":"The version of the Infoblox WAPI to make calls against (e.g. '2.2'). Type : String Parameter Sets : (All) Aliases : version Required : False Position : 6 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WAPIVersion"},{"location":"Functions/Receive-IBFile/#-credential","text":"Username and password for the Infoblox appliance. This parameter is required unless it was already set using Set-IBConfig. Type : PSCredential Parameter Sets : (All) Aliases : Required : False Position : 7 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Credential"},{"location":"Functions/Receive-IBFile/#-skipcertificatecheck","text":"If set, SSL/TLS certificate validation will be disabled. Overrides value stored with Set-IBConfig. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-SkipCertificateCheck"},{"location":"Functions/Receive-IBFile/#-profilename","text":"The name of a specific config profile to use instead of the currently active one. Type : String Parameter Sets : (All) Aliases : Required : False Position : 8 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ProfileName"},{"location":"Functions/Receive-IBFile/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Functions/Receive-IBFile/#related-links","text":"Invoke-IBFunction","title":"Related Links"},{"location":"Functions/Remove-IBConfig/","text":"Remove-IBConfig \u00b6 Synopsis \u00b6 Remove a WAPI connection profile. Syntax \u00b6 Specific \u00b6 Remove-IBConfig [[ -ProfileName ] < String >] [< CommonParameters >] All \u00b6 Remove-IBConfig [ -AllProfiles ] [< CommonParameters >] Description \u00b6 When called with no parameters, the currently active connection profile will be removed. When called with -ProfileName, the specified profile will be removed. When called with -AllProfiles, all profiles will be removed. Examples \u00b6 Example 1: Remove current profile \u00b6 Remove-IBConfig Remove the currently active connection profile. Example 2: Remove all profiles \u00b6 Remove-IBConfig -AllHosts Remove all connection profiles. Parameters \u00b6 -ProfileName \u00b6 The name of the profile to remove. Type : String Parameter Sets : Specific Aliases : name Required : False Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -AllProfiles \u00b6 If set, all profiles will be removed. Type : SwitchParameter Parameter Sets : All Aliases : Required : True Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False CommonParameters \u00b6 This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Related Links \u00b6 Set-IBConfig","title":"Remove-IBConfig"},{"location":"Functions/Remove-IBConfig/#remove-ibconfig","text":"","title":"Remove-IBConfig"},{"location":"Functions/Remove-IBConfig/#synopsis","text":"Remove a WAPI connection profile.","title":"Synopsis"},{"location":"Functions/Remove-IBConfig/#syntax","text":"","title":"Syntax"},{"location":"Functions/Remove-IBConfig/#specific","text":"Remove-IBConfig [[ -ProfileName ] < String >] [< CommonParameters >]","title":"Specific"},{"location":"Functions/Remove-IBConfig/#all","text":"Remove-IBConfig [ -AllProfiles ] [< CommonParameters >]","title":"All"},{"location":"Functions/Remove-IBConfig/#description","text":"When called with no parameters, the currently active connection profile will be removed. When called with -ProfileName, the specified profile will be removed. When called with -AllProfiles, all profiles will be removed.","title":"Description"},{"location":"Functions/Remove-IBConfig/#examples","text":"","title":"Examples"},{"location":"Functions/Remove-IBConfig/#example-1-remove-current-profile","text":"Remove-IBConfig Remove the currently active connection profile.","title":"Example 1: Remove current profile"},{"location":"Functions/Remove-IBConfig/#example-2-remove-all-profiles","text":"Remove-IBConfig -AllHosts Remove all connection profiles.","title":"Example 2: Remove all profiles"},{"location":"Functions/Remove-IBConfig/#parameters","text":"","title":"Parameters"},{"location":"Functions/Remove-IBConfig/#-profilename","text":"The name of the profile to remove. Type : String Parameter Sets : Specific Aliases : name Required : False Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-ProfileName"},{"location":"Functions/Remove-IBConfig/#-allprofiles","text":"If set, all profiles will be removed. Type : SwitchParameter Parameter Sets : All Aliases : Required : True Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-AllProfiles"},{"location":"Functions/Remove-IBConfig/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Functions/Remove-IBConfig/#related-links","text":"Set-IBConfig","title":"Related Links"},{"location":"Functions/Remove-IBObject/","text":"Remove-IBObject \u00b6 Synopsis \u00b6 Delete an object from Infoblox. Syntax \u00b6 Remove-IBObject [ -ObjectRef ] < String > [[ -DeleteArgs ] < String []>] [ -BatchMode ] [[ -WAPIHost ] < String >] [[ -WAPIVersion ] < String >] [[ -Credential ] < PSCredential >] [ -SkipCertificateCheck ] [[ -ProfileName ] < String >] [ -WhatIf ] [ -Confirm ] [< CommonParameters >] Description \u00b6 Specify an object reference to delete that object from the Infoblox database. Examples \u00b6 Example 1: Delete host record by name \u00b6 $myhost = Get-IBObject -ObjectType 'record:host' -Filter 'name=myhost' Remove-IBObject -ObjectRef $myhost . _ref Search for a host record called 'myhost' and delete it. Example 2: Delete host record by comment \u00b6 $hostsToDelete = Get-IBObject 'record:host' -Filter 'comment=decommissioned' $hostsToDelete | Remove-IBObject Search for hosts with their comment set to 'decommissioned' and delete them all. Parameters \u00b6 -ObjectRef \u00b6 Object reference string. This is usually found in the \"_ref\" field of returned objects. Type : String Parameter Sets : (All) Aliases : _ref, ref Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -DeleteArgs \u00b6 Additional delete arguments for this object. For example, 'remove_associated_ptr=true' can be used with record:a. Requires WAPI 2.1+. Type : String[] Parameter Sets : (All) Aliases : args Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False -BatchMode \u00b6 If specified, objects passed via pipeline will be batched together into groups and sent as a single WAPI call per group instead of a WAPI call per object. This can increase performance but if any of the individual calls fail, the whole group is cancelled. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -WAPIHost \u00b6 The fully qualified DNS name or IP address of the Infoblox WAPI endpoint (usually the grid master). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : host Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False -WAPIVersion \u00b6 The version of the Infoblox WAPI to make calls against (e.g. '2.2'). You may optionally specify 'latest' and the function will attempt to query the WAPI for the latest supported version. Type : String Parameter Sets : (All) Aliases : version Required : False Position : 4 Default value : None Accept pipeline input : False Accept wildcard characters : False -Credential \u00b6 Username and password for the Infoblox appliance. This parameter is required unless it was already set using Set-IBConfig. Type : PSCredential Parameter Sets : (All) Aliases : Required : False Position : 5 Default value : None Accept pipeline input : False Accept wildcard characters : False -SkipCertificateCheck \u00b6 If set, SSL/TLS certificate validation will be disabled. Overrides value stored with Set-IBConfig. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -ProfileName \u00b6 The name of a specific config profile to use instead of the currently active one. Type : String Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : None Accept pipeline input : False Accept wildcard characters : False -WhatIf \u00b6 Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm \u00b6 Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters \u00b6 This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Outputs \u00b6 String \u00b6 The object reference string of the deleted item. Related Links \u00b6 New-IBObject Get-IBObject","title":"Remove-IBObject"},{"location":"Functions/Remove-IBObject/#remove-ibobject","text":"","title":"Remove-IBObject"},{"location":"Functions/Remove-IBObject/#synopsis","text":"Delete an object from Infoblox.","title":"Synopsis"},{"location":"Functions/Remove-IBObject/#syntax","text":"Remove-IBObject [ -ObjectRef ] < String > [[ -DeleteArgs ] < String []>] [ -BatchMode ] [[ -WAPIHost ] < String >] [[ -WAPIVersion ] < String >] [[ -Credential ] < PSCredential >] [ -SkipCertificateCheck ] [[ -ProfileName ] < String >] [ -WhatIf ] [ -Confirm ] [< CommonParameters >]","title":"Syntax"},{"location":"Functions/Remove-IBObject/#description","text":"Specify an object reference to delete that object from the Infoblox database.","title":"Description"},{"location":"Functions/Remove-IBObject/#examples","text":"","title":"Examples"},{"location":"Functions/Remove-IBObject/#example-1-delete-host-record-by-name","text":"$myhost = Get-IBObject -ObjectType 'record:host' -Filter 'name=myhost' Remove-IBObject -ObjectRef $myhost . _ref Search for a host record called 'myhost' and delete it.","title":"Example 1: Delete host record by name"},{"location":"Functions/Remove-IBObject/#example-2-delete-host-record-by-comment","text":"$hostsToDelete = Get-IBObject 'record:host' -Filter 'comment=decommissioned' $hostsToDelete | Remove-IBObject Search for hosts with their comment set to 'decommissioned' and delete them all.","title":"Example 2: Delete host record by comment"},{"location":"Functions/Remove-IBObject/#parameters","text":"","title":"Parameters"},{"location":"Functions/Remove-IBObject/#-objectref","text":"Object reference string. This is usually found in the \"_ref\" field of returned objects. Type : String Parameter Sets : (All) Aliases : _ref, ref Required : True Position : 1 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-ObjectRef"},{"location":"Functions/Remove-IBObject/#-deleteargs","text":"Additional delete arguments for this object. For example, 'remove_associated_ptr=true' can be used with record:a. Requires WAPI 2.1+. Type : String[] Parameter Sets : (All) Aliases : args Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-DeleteArgs"},{"location":"Functions/Remove-IBObject/#-batchmode","text":"If specified, objects passed via pipeline will be batched together into groups and sent as a single WAPI call per group instead of a WAPI call per object. This can increase performance but if any of the individual calls fail, the whole group is cancelled. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-BatchMode"},{"location":"Functions/Remove-IBObject/#-wapihost","text":"The fully qualified DNS name or IP address of the Infoblox WAPI endpoint (usually the grid master). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : host Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WAPIHost"},{"location":"Functions/Remove-IBObject/#-wapiversion","text":"The version of the Infoblox WAPI to make calls against (e.g. '2.2'). You may optionally specify 'latest' and the function will attempt to query the WAPI for the latest supported version. Type : String Parameter Sets : (All) Aliases : version Required : False Position : 4 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WAPIVersion"},{"location":"Functions/Remove-IBObject/#-credential","text":"Username and password for the Infoblox appliance. This parameter is required unless it was already set using Set-IBConfig. Type : PSCredential Parameter Sets : (All) Aliases : Required : False Position : 5 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Credential"},{"location":"Functions/Remove-IBObject/#-skipcertificatecheck","text":"If set, SSL/TLS certificate validation will be disabled. Overrides value stored with Set-IBConfig. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-SkipCertificateCheck"},{"location":"Functions/Remove-IBObject/#-profilename","text":"The name of a specific config profile to use instead of the currently active one. Type : String Parameter Sets : (All) Aliases : Required : False Position : 6 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ProfileName"},{"location":"Functions/Remove-IBObject/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"Functions/Remove-IBObject/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"Functions/Remove-IBObject/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Functions/Remove-IBObject/#outputs","text":"","title":"Outputs"},{"location":"Functions/Remove-IBObject/#string","text":"The object reference string of the deleted item.","title":"String"},{"location":"Functions/Remove-IBObject/#related-links","text":"New-IBObject Get-IBObject","title":"Related Links"},{"location":"Functions/Send-IBFile/","text":"Send-IBFile \u00b6 Synopsis \u00b6 Upload a file to Infoblox using one of the fileop upload functions. Syntax \u00b6 Send-IBFile [ -FunctionName ] < String > [ -Path ] < String > [ -FunctionArgs < Hashtable >] [ -ObjectRef < String >] [ -OverrideTransferHost ] [ -WAPIHost < String >] [ -WAPIVersion < String >] [ -Credential < PSCredential >] [ -SkipCertificateCheck ] [ -ProfileName < String >] [< CommonParameters >] Description \u00b6 This is a wrapper around the various fileop functions that allow data import into Infoblox. Examples \u00b6 Example 1: Upload CA certificate \u00b6 Send-IBFile uploadcertificate .\\ ca . pem -FunctionArgs @{ certificate_usage = 'EAP_CA' } Upload a trusted CA certificate to the grid. Parameters \u00b6 -FunctionName \u00b6 The name of the fileop upload function to call. Type : String Parameter Sets : (All) Aliases : name Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False -Path \u00b6 The path to the file that will be uploaded for this call. Type : String Parameter Sets : (All) Aliases : PSPath Required : True Position : 2 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -FunctionArgs \u00b6 A hashtable with the required parameters for the function. NOTE: 'token' parameters are handled automatically and can be ignored. Type : Hashtable Parameter Sets : (All) Aliases : args Required : False Position : Named Default value : @ {} Accept pipeline input : False Accept wildcard characters : False -ObjectRef \u00b6 Object reference string. This is usually found in the \"_ref\" field of returned objects. Type : String Parameter Sets : (All) Aliases : _ref, ref, ObjectType, type Required : False Position : Named Default value : Fileop Accept pipeline input : False Accept wildcard characters : False -OverrideTransferHost \u00b6 If set, the hostname in the transfer URL returned by WAPI will be overridden to match the original WAPIHost if they don't already match. The SkipCertificateCheck switch will also be updated to match the passed in value instead of always being set to true for the call. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -WAPIHost \u00b6 The fully qualified DNS name or IP address of the Infoblox WAPI endpoint (usually the grid master). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : host Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -WAPIVersion \u00b6 The version of the Infoblox WAPI to make calls against (e.g. '2.2'). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : version Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Credential \u00b6 Username and password for the Infoblox appliance. This parameter is required unless it was already set using Set-IBConfig. Type : PSCredential Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -SkipCertificateCheck \u00b6 If set, SSL/TLS certificate validation will be disabled. Overrides value stored with Set-IBConfig. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -ProfileName \u00b6 The name of a specific config profile to use instead of the currently active one. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters \u00b6 This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Related Links \u00b6 Receive-IBFile","title":"Send-IBFile"},{"location":"Functions/Send-IBFile/#send-ibfile","text":"","title":"Send-IBFile"},{"location":"Functions/Send-IBFile/#synopsis","text":"Upload a file to Infoblox using one of the fileop upload functions.","title":"Synopsis"},{"location":"Functions/Send-IBFile/#syntax","text":"Send-IBFile [ -FunctionName ] < String > [ -Path ] < String > [ -FunctionArgs < Hashtable >] [ -ObjectRef < String >] [ -OverrideTransferHost ] [ -WAPIHost < String >] [ -WAPIVersion < String >] [ -Credential < PSCredential >] [ -SkipCertificateCheck ] [ -ProfileName < String >] [< CommonParameters >]","title":"Syntax"},{"location":"Functions/Send-IBFile/#description","text":"This is a wrapper around the various fileop functions that allow data import into Infoblox.","title":"Description"},{"location":"Functions/Send-IBFile/#examples","text":"","title":"Examples"},{"location":"Functions/Send-IBFile/#example-1-upload-ca-certificate","text":"Send-IBFile uploadcertificate .\\ ca . pem -FunctionArgs @{ certificate_usage = 'EAP_CA' } Upload a trusted CA certificate to the grid.","title":"Example 1: Upload CA certificate"},{"location":"Functions/Send-IBFile/#parameters","text":"","title":"Parameters"},{"location":"Functions/Send-IBFile/#-functionname","text":"The name of the fileop upload function to call. Type : String Parameter Sets : (All) Aliases : name Required : True Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-FunctionName"},{"location":"Functions/Send-IBFile/#-path","text":"The path to the file that will be uploaded for this call. Type : String Parameter Sets : (All) Aliases : PSPath Required : True Position : 2 Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-Path"},{"location":"Functions/Send-IBFile/#-functionargs","text":"A hashtable with the required parameters for the function. NOTE: 'token' parameters are handled automatically and can be ignored. Type : Hashtable Parameter Sets : (All) Aliases : args Required : False Position : Named Default value : @ {} Accept pipeline input : False Accept wildcard characters : False","title":"-FunctionArgs"},{"location":"Functions/Send-IBFile/#-objectref","text":"Object reference string. This is usually found in the \"_ref\" field of returned objects. Type : String Parameter Sets : (All) Aliases : _ref, ref, ObjectType, type Required : False Position : Named Default value : Fileop Accept pipeline input : False Accept wildcard characters : False","title":"-ObjectRef"},{"location":"Functions/Send-IBFile/#-overridetransferhost","text":"If set, the hostname in the transfer URL returned by WAPI will be overridden to match the original WAPIHost if they don't already match. The SkipCertificateCheck switch will also be updated to match the passed in value instead of always being set to true for the call. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-OverrideTransferHost"},{"location":"Functions/Send-IBFile/#-wapihost","text":"The fully qualified DNS name or IP address of the Infoblox WAPI endpoint (usually the grid master). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : host Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WAPIHost"},{"location":"Functions/Send-IBFile/#-wapiversion","text":"The version of the Infoblox WAPI to make calls against (e.g. '2.2'). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : version Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WAPIVersion"},{"location":"Functions/Send-IBFile/#-credential","text":"Username and password for the Infoblox appliance. This parameter is required unless it was already set using Set-IBConfig. Type : PSCredential Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Credential"},{"location":"Functions/Send-IBFile/#-skipcertificatecheck","text":"If set, SSL/TLS certificate validation will be disabled. Overrides value stored with Set-IBConfig. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-SkipCertificateCheck"},{"location":"Functions/Send-IBFile/#-profilename","text":"The name of a specific config profile to use instead of the currently active one. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ProfileName"},{"location":"Functions/Send-IBFile/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Functions/Send-IBFile/#related-links","text":"Receive-IBFile","title":"Related Links"},{"location":"Functions/Set-IBConfig/","text":"Set-IBConfig \u00b6 Synopsis \u00b6 Save connection parameters to a profile to avoid needing to supply them to future functions. Syntax \u00b6 Set-IBConfig [[ -ProfileName ] < String >] [[ -WAPIHost ] < String >] [[ -WAPIVersion ] < String >] [[ -Credential ] < PSCredential >] [ -SkipCertificateCheck ] [[ -NewName ] < String >] [ -NoSwitchProfile ] [< CommonParameters >] Description \u00b6 Rather than specifying the same common parameter values to most of the function calls in this module, you can pre-set them with this function instead. They will be used automatically by other functions that support them unless overridden by the function's own parameters. Calling this function with a profile name will update that profile's values and switch the current profile to the specified one unless -NoSwitchProfile is used. When a profile name is not specified, the current profile's values will be updated with any specified changes. Examples \u00b6 Example 1: Switch profiles \u00b6 Set-IBConfig -ProfileName 'gm-admin' Switch to the 'gm-admin' profile, but make no changes. Example 2: Create or update a profile \u00b6 Set-IBConfig -ProfileName 'gm-admin' -WAPIHost gm . example . com -WAPIVersion 2 . 2 -Credential ( Get-Credential ) -SkipCertificateCheck Create or update the 'gm-admin' profile with all basic connection parameters for an Infoblox WAPI connection. This will also prompt for the credentials and skip certificate validation. Example 3: Update the current profile \u00b6 Set-IBConfig -WAPIVersion 2 . 5 Update the current profile to WAPI version 2.5 Parameters \u00b6 -ProfileName \u00b6 The name of the profile to create or modify. Type : String Parameter Sets : (All) Aliases : name Required : False Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False -WAPIHost \u00b6 The fully qualified DNS name or IP address of the Infoblox WAPI endpoint (usually the grid master). Type : String Parameter Sets : (All) Aliases : host Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False -WAPIVersion \u00b6 The version of the Infoblox WAPI to make calls against (e.g. '2.2'). You may optionally specify 'latest' and the function will attempt to query the WAPI for the latest supported version. Type : String Parameter Sets : (All) Aliases : version Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False -Credential \u00b6 Username and password for the Infoblox appliance. Type : PSCredential Parameter Sets : (All) Aliases : Required : False Position : 4 Default value : None Accept pipeline input : False Accept wildcard characters : False -SkipCertificateCheck \u00b6 If set, SSL/TLS certificate validation will be disabled for this profile. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -NewName \u00b6 A new name that this config profile should be renamed to. Type : String Parameter Sets : (All) Aliases : Required : False Position : 5 Default value : None Accept pipeline input : False Accept wildcard characters : False -NoSwitchProfile \u00b6 If set, the current profile will not switch to the specified -ProfileName if different. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False CommonParameters \u00b6 This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Related Links \u00b6 Get-IBConfig Invoke-IBWAPI","title":"Set-IBConfig"},{"location":"Functions/Set-IBConfig/#set-ibconfig","text":"","title":"Set-IBConfig"},{"location":"Functions/Set-IBConfig/#synopsis","text":"Save connection parameters to a profile to avoid needing to supply them to future functions.","title":"Synopsis"},{"location":"Functions/Set-IBConfig/#syntax","text":"Set-IBConfig [[ -ProfileName ] < String >] [[ -WAPIHost ] < String >] [[ -WAPIVersion ] < String >] [[ -Credential ] < PSCredential >] [ -SkipCertificateCheck ] [[ -NewName ] < String >] [ -NoSwitchProfile ] [< CommonParameters >]","title":"Syntax"},{"location":"Functions/Set-IBConfig/#description","text":"Rather than specifying the same common parameter values to most of the function calls in this module, you can pre-set them with this function instead. They will be used automatically by other functions that support them unless overridden by the function's own parameters. Calling this function with a profile name will update that profile's values and switch the current profile to the specified one unless -NoSwitchProfile is used. When a profile name is not specified, the current profile's values will be updated with any specified changes.","title":"Description"},{"location":"Functions/Set-IBConfig/#examples","text":"","title":"Examples"},{"location":"Functions/Set-IBConfig/#example-1-switch-profiles","text":"Set-IBConfig -ProfileName 'gm-admin' Switch to the 'gm-admin' profile, but make no changes.","title":"Example 1: Switch profiles"},{"location":"Functions/Set-IBConfig/#example-2-create-or-update-a-profile","text":"Set-IBConfig -ProfileName 'gm-admin' -WAPIHost gm . example . com -WAPIVersion 2 . 2 -Credential ( Get-Credential ) -SkipCertificateCheck Create or update the 'gm-admin' profile with all basic connection parameters for an Infoblox WAPI connection. This will also prompt for the credentials and skip certificate validation.","title":"Example 2: Create or update a profile"},{"location":"Functions/Set-IBConfig/#example-3-update-the-current-profile","text":"Set-IBConfig -WAPIVersion 2 . 5 Update the current profile to WAPI version 2.5","title":"Example 3: Update the current profile"},{"location":"Functions/Set-IBConfig/#parameters","text":"","title":"Parameters"},{"location":"Functions/Set-IBConfig/#-profilename","text":"The name of the profile to create or modify. Type : String Parameter Sets : (All) Aliases : name Required : False Position : 1 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ProfileName"},{"location":"Functions/Set-IBConfig/#-wapihost","text":"The fully qualified DNS name or IP address of the Infoblox WAPI endpoint (usually the grid master). Type : String Parameter Sets : (All) Aliases : host Required : False Position : 2 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WAPIHost"},{"location":"Functions/Set-IBConfig/#-wapiversion","text":"The version of the Infoblox WAPI to make calls against (e.g. '2.2'). You may optionally specify 'latest' and the function will attempt to query the WAPI for the latest supported version. Type : String Parameter Sets : (All) Aliases : version Required : False Position : 3 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WAPIVersion"},{"location":"Functions/Set-IBConfig/#-credential","text":"Username and password for the Infoblox appliance. Type : PSCredential Parameter Sets : (All) Aliases : Required : False Position : 4 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Credential"},{"location":"Functions/Set-IBConfig/#-skipcertificatecheck","text":"If set, SSL/TLS certificate validation will be disabled for this profile. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-SkipCertificateCheck"},{"location":"Functions/Set-IBConfig/#-newname","text":"A new name that this config profile should be renamed to. Type : String Parameter Sets : (All) Aliases : Required : False Position : 5 Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-NewName"},{"location":"Functions/Set-IBConfig/#-noswitchprofile","text":"If set, the current profile will not switch to the specified -ProfileName if different. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-NoSwitchProfile"},{"location":"Functions/Set-IBConfig/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Functions/Set-IBConfig/#related-links","text":"Get-IBConfig Invoke-IBWAPI","title":"Related Links"},{"location":"Functions/Set-IBObject/","text":"Set-IBObject \u00b6 Synopsis \u00b6 Modify an object in Infoblox. Syntax \u00b6 ObjectOnly \u00b6 Set-IBObject -IBObject < PSObject > [ -ReturnFields < String []>] [ -ReturnBaseFields ] [ -BatchMode ] [ -WAPIHost < String >] [ -WAPIVersion < String >] [ -Credential < PSCredential >] [ -SkipCertificateCheck ] [ -ProfileName < String >] [ -WhatIf ] [ -Confirm ] [< CommonParameters >] RefAndTemplate \u00b6 Set-IBObject -ObjectRef < String > -TemplateObject < PSObject > [ -ReturnFields < String []>] [ -ReturnBaseFields ] [ -BatchMode ] [ -WAPIHost < String >] [ -WAPIVersion < String >] [ -Credential < PSCredential >] [ -SkipCertificateCheck ] [ -ProfileName < String >] [ -WhatIf ] [ -Confirm ] [< CommonParameters >] Description \u00b6 Modify an object by specifying its object reference and a PSObject with the fields to change. Examples \u00b6 Example 1: Update host record \u00b6 $myhost = Get-IBObject -ObjectType 'record:host' -Filter 'name=myhost' -ReturnFields 'comment' $myhost . comment = 'new comment' Set-IBObject -ObjectRef $myhost . _ref -IBObject $myhost Search for a host record called 'myhost', update the comment field, and save it. Example 2: Update multiple host records \u00b6 $toChange = Get-IBObject -type 'record:host' -Filter 'name~=oldname' -fields 'name' $toChange | %{ $_ . name = $_ . name . Replace ( 'oldname' , 'newname' ); $_ } | Set-IBObject Find all hosts with 'oldname' in the name, change the references to 'newname', and send them through the pipeline to Set-IBObject for saving. Example 3: Change multiple comments \u00b6 $myhosts = Get-IBObject 'record:host' -Filter 'comment=web server' $myhosts | Set-IBObject -TemplateObject @{ comment = 'db server' } Find all host records with comment 'web server' and change them to 'db server' with a manually created template Parameters \u00b6 -IBObject \u00b6 An object with the fields to be modified. This must include a '_ref' with the object reference string to modify. All included fields will be modified even if they are empty. Type : PSObject Parameter Sets : ObjectOnly Aliases : Required : True Position : Named Default value : None Accept pipeline input : True (ByValue) Accept wildcard characters : False -ObjectRef \u00b6 Object reference string. This is usually found in the \"_ref\" field of returned objects. Type : String Parameter Sets : RefAndTemplate Aliases : _ref, ref Required : True Position : Named Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False -TemplateObject \u00b6 An object with the fields to be modified. A '_ref' field in this object will be ignored. This is only usable with a separate -ObjectRef parameter. Type : PSObject Parameter Sets : RefAndTemplate Aliases : Required : True Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -ReturnFields \u00b6 The set of fields that should be returned in addition to the object reference. Type : String[] Parameter Sets : (All) Aliases : fields Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -ReturnBaseFields \u00b6 If specified, the standard fields for this object type will be returned in addition to the object reference and any additional fields specified by -ReturnFields. Type : SwitchParameter Parameter Sets : (All) Aliases : base Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -BatchMode \u00b6 If specified, objects passed via pipeline will be batched together into groups and sent as a single WAPI call per group instead of a WAPI call per object. This can increase performance but if any of the individual calls fail, the whole group is cancelled. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -WAPIHost \u00b6 The fully qualified DNS name or IP address of the Infoblox WAPI endpoint (usually the grid master). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : host Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -WAPIVersion \u00b6 The version of the Infoblox WAPI to make calls against (e.g. '2.2'). Type : String Parameter Sets : (All) Aliases : version Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Credential \u00b6 Username and password for the Infoblox appliance. This parameter is required unless it was already set using Set-IBConfig. Type : PSCredential Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -SkipCertificateCheck \u00b6 If set, SSL/TLS certificate validation will be disabled. Overrides value stored with Set-IBConfig. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False -ProfileName \u00b6 The name of a specific config profile to use instead of the currently active one. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -WhatIf \u00b6 Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False -Confirm \u00b6 Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False CommonParameters \u00b6 This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . Outputs \u00b6 PSCustomObject \u00b6 The object reference string of the modified item or a custom object if -ReturnFields or -ReturnBaseFields was used. Related Links \u00b6 Get-IBObject","title":"Set-IBObject"},{"location":"Functions/Set-IBObject/#set-ibobject","text":"","title":"Set-IBObject"},{"location":"Functions/Set-IBObject/#synopsis","text":"Modify an object in Infoblox.","title":"Synopsis"},{"location":"Functions/Set-IBObject/#syntax","text":"","title":"Syntax"},{"location":"Functions/Set-IBObject/#objectonly","text":"Set-IBObject -IBObject < PSObject > [ -ReturnFields < String []>] [ -ReturnBaseFields ] [ -BatchMode ] [ -WAPIHost < String >] [ -WAPIVersion < String >] [ -Credential < PSCredential >] [ -SkipCertificateCheck ] [ -ProfileName < String >] [ -WhatIf ] [ -Confirm ] [< CommonParameters >]","title":"ObjectOnly"},{"location":"Functions/Set-IBObject/#refandtemplate","text":"Set-IBObject -ObjectRef < String > -TemplateObject < PSObject > [ -ReturnFields < String []>] [ -ReturnBaseFields ] [ -BatchMode ] [ -WAPIHost < String >] [ -WAPIVersion < String >] [ -Credential < PSCredential >] [ -SkipCertificateCheck ] [ -ProfileName < String >] [ -WhatIf ] [ -Confirm ] [< CommonParameters >]","title":"RefAndTemplate"},{"location":"Functions/Set-IBObject/#description","text":"Modify an object by specifying its object reference and a PSObject with the fields to change.","title":"Description"},{"location":"Functions/Set-IBObject/#examples","text":"","title":"Examples"},{"location":"Functions/Set-IBObject/#example-1-update-host-record","text":"$myhost = Get-IBObject -ObjectType 'record:host' -Filter 'name=myhost' -ReturnFields 'comment' $myhost . comment = 'new comment' Set-IBObject -ObjectRef $myhost . _ref -IBObject $myhost Search for a host record called 'myhost', update the comment field, and save it.","title":"Example 1: Update host record"},{"location":"Functions/Set-IBObject/#example-2-update-multiple-host-records","text":"$toChange = Get-IBObject -type 'record:host' -Filter 'name~=oldname' -fields 'name' $toChange | %{ $_ . name = $_ . name . Replace ( 'oldname' , 'newname' ); $_ } | Set-IBObject Find all hosts with 'oldname' in the name, change the references to 'newname', and send them through the pipeline to Set-IBObject for saving.","title":"Example 2: Update multiple host records"},{"location":"Functions/Set-IBObject/#example-3-change-multiple-comments","text":"$myhosts = Get-IBObject 'record:host' -Filter 'comment=web server' $myhosts | Set-IBObject -TemplateObject @{ comment = 'db server' } Find all host records with comment 'web server' and change them to 'db server' with a manually created template","title":"Example 3: Change multiple comments"},{"location":"Functions/Set-IBObject/#parameters","text":"","title":"Parameters"},{"location":"Functions/Set-IBObject/#-ibobject","text":"An object with the fields to be modified. This must include a '_ref' with the object reference string to modify. All included fields will be modified even if they are empty. Type : PSObject Parameter Sets : ObjectOnly Aliases : Required : True Position : Named Default value : None Accept pipeline input : True (ByValue) Accept wildcard characters : False","title":"-IBObject"},{"location":"Functions/Set-IBObject/#-objectref","text":"Object reference string. This is usually found in the \"_ref\" field of returned objects. Type : String Parameter Sets : RefAndTemplate Aliases : _ref, ref Required : True Position : Named Default value : None Accept pipeline input : True (ByPropertyName, ByValue) Accept wildcard characters : False","title":"-ObjectRef"},{"location":"Functions/Set-IBObject/#-templateobject","text":"An object with the fields to be modified. A '_ref' field in this object will be ignored. This is only usable with a separate -ObjectRef parameter. Type : PSObject Parameter Sets : RefAndTemplate Aliases : Required : True Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-TemplateObject"},{"location":"Functions/Set-IBObject/#-returnfields","text":"The set of fields that should be returned in addition to the object reference. Type : String[] Parameter Sets : (All) Aliases : fields Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ReturnFields"},{"location":"Functions/Set-IBObject/#-returnbasefields","text":"If specified, the standard fields for this object type will be returned in addition to the object reference and any additional fields specified by -ReturnFields. Type : SwitchParameter Parameter Sets : (All) Aliases : base Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-ReturnBaseFields"},{"location":"Functions/Set-IBObject/#-batchmode","text":"If specified, objects passed via pipeline will be batched together into groups and sent as a single WAPI call per group instead of a WAPI call per object. This can increase performance but if any of the individual calls fail, the whole group is cancelled. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-BatchMode"},{"location":"Functions/Set-IBObject/#-wapihost","text":"The fully qualified DNS name or IP address of the Infoblox WAPI endpoint (usually the grid master). This parameter is required if not already set using Set-IBConfig. Type : String Parameter Sets : (All) Aliases : host Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WAPIHost"},{"location":"Functions/Set-IBObject/#-wapiversion","text":"The version of the Infoblox WAPI to make calls against (e.g. '2.2'). Type : String Parameter Sets : (All) Aliases : version Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WAPIVersion"},{"location":"Functions/Set-IBObject/#-credential","text":"Username and password for the Infoblox appliance. This parameter is required unless it was already set using Set-IBConfig. Type : PSCredential Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Credential"},{"location":"Functions/Set-IBObject/#-skipcertificatecheck","text":"If set, SSL/TLS certificate validation will be disabled. Overrides value stored with Set-IBConfig. Type : SwitchParameter Parameter Sets : (All) Aliases : Required : False Position : Named Default value : False Accept pipeline input : False Accept wildcard characters : False","title":"-SkipCertificateCheck"},{"location":"Functions/Set-IBObject/#-profilename","text":"The name of a specific config profile to use instead of the currently active one. Type : String Parameter Sets : (All) Aliases : Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-ProfileName"},{"location":"Functions/Set-IBObject/#-whatif","text":"Shows what would happen if the cmdlet runs. The cmdlet is not run. Type : SwitchParameter Parameter Sets : (All) Aliases : wi Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-WhatIf"},{"location":"Functions/Set-IBObject/#-confirm","text":"Prompts you for confirmation before running the cmdlet. Type : SwitchParameter Parameter Sets : (All) Aliases : cf Required : False Position : Named Default value : None Accept pipeline input : False Accept wildcard characters : False","title":"-Confirm"},{"location":"Functions/Set-IBObject/#commonparameters","text":"This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters .","title":"CommonParameters"},{"location":"Functions/Set-IBObject/#outputs","text":"","title":"Outputs"},{"location":"Functions/Set-IBObject/#pscustomobject","text":"The object reference string of the modified item or a custom object if -ReturnFields or -ReturnBaseFields was used.","title":"PSCustomObject"},{"location":"Functions/Set-IBObject/#related-links","text":"Get-IBObject","title":"Related Links"},{"location":"Guides/","text":"Guides and Deep Dives \u00b6 This section contains a variety of guides that explain some lesser known or more complicated features of Posh-IBWAPI.","title":"Guides and Deep Dives"},{"location":"Guides/#guides-and-deep-dives","text":"This section contains a variety of guides that explain some lesser known or more complicated features of Posh-IBWAPI.","title":"Guides and Deep Dives"},{"location":"Guides/Definitive-REST-Examples/","text":"Background \u00b6 This page will attempt to be a ported version of a now archived Infoblox community post called \"The definitive list of REST examples\" using Posh-IBWAPI functions. All examples assume you have already configured common connection settings with Set-IBConfig . If you're still using the default self-signed Infoblox certificates, don't forget to include -SkipCertificateCheck . For example: Set-IBConfig -ProfileName mygrid -host gridmaster . test . com -ver latest -cred ( Get-Credential ) -SkipCertificateCheck Functions generally output zero or more PSCustomObject objects natively parsed from the WAPI's JSON output or raw object reference strings. While trying the examples on your own, it can be helpful to convert your own result objects to JSON for better readability. For example: $hosts = Get-IBObject -type record : host # output the first host result as JSON $hosts [ 0 ] | ConvertTo-Json -Depth 5 The definitive list of REST examples \u00b6 A common question we are asked is \"Do you have some examples of specific REST calls\", or \"How can I get started with testing the WAPI?\". The API docs are good if you need the technical details, but this post hopes to address the overall fundamentals. The Basics \u00b6 use Get-IBObject to get/search use New-IBObject to add use Set-IBObject to modify use Remove-IBObject to remove If you want to modify an object, you have to use a Get-IBObject to read it first. This will give you the _ref (among other base fields) , which you will need in order to update that object. # Get a specific host by name (case-insensitive) $testhost = Get-IBObject -type record : host -filters 'name:=test_host.test.com' # $testhost looks like the following when converted to JSON { \"_ref\" : \"record:host/ZG5zLmhvc3QkLjEubmV0LmR2b2x2ZS5leHRucw:test_host.test.com/default\" , \"ipv4addrs\" : [ { \"_ref\" : \"record:host_ipv4addr/ZG5zLmhvc3RfYWRkcmVzcyQuMS5uZXQuZHZvbHZlLmV4dG5zLjEwLjE3LjYuNC4:192.168.0.1/test_host.test.com/default\" , \"configure_for_dhcp\" : false , \"host\" : \"test_host.test.com\" , \"ipv4addr\" : \"1.1.1.1\" } ], \"name\" : \"test_host.test.com\" , \"view\" : \"default\" } Note You can use -ReturnAllFields to return all available data for a given object type. This flag requires WAPI version 1.7.5+ because it involves extra queries to the schema under the hood. Thus, it is also less performant than a normal query because of the extra roundtrips to the server. If you know the fields you want, it is better to use -ReturnFields 'field1','field2','fieldX' . Using -ReturnFields will prevent the base fields from being returned unless you explicitly include them or also use -ReturnBaseFields . There are two different ways to modify the host you just queried. They involve slightly different ways of calling Set-IBObject . The easiest, particularly if you're making the same change to multiple objects, is usually to just pipe the variable to Set-IBObject and provide a template for the changes with -TemplateObject . This works because Set-IBObject knows how to pull the _ref field out of the pipelined object and use it for -ObjectRef : # create a template to change the IP address $template = @{ ipv4addrs =@(@{ ipv4addr = '1.1.1.2' })} # save the change $testhost | Set-IBObject -template $template # this also works when you only have a copy of the _ref string Set-IBObject -ref 'record:host/ZG5zLmhvc3QkLjEubmV0LmR2b2x2ZS5' -template $template The second way involves modifying the variable and then piping it to Set-IBObject by itself. This has a tendency to be more difficult because read-only fields in the original variable need to be removed or an error will be thrown. It can also be more tedious to add fields if the original variable doesn't contain the fields you want to edit. However, this way can also be easier if you're changing many objects in a more algorithmic way; such as modifying a set of hostnames using string replacement. # remove the read-only 'host' field from the nested 'record:host_ipv4addr' object $testhost . ipv4addrs [ 0 ]. PSObject . Properties . Remove ( 'host' ) # change the IP address $testhost . ipv4addrs [ 0 ]. ipv4addr = '1.1.1.2' # add a comment $testhost | Add-Member @{ comment = 'my test host' } # save the change $testhost | Set-IBObject Search for HOST by name \u00b6 # case-sensitive exact match using '=' Get-IBObject -type record : host -filters 'name=my.fqdn.org' # case-insensitive exact match using ':=' (Requires WAPI 1.4+) Get-IBObject -type record : host -filters 'name:=my.fqdn.org' # case-sensitive Regex partial match using '~=' Get-IBObject -type record : host -filters 'name~=my' # case-insensitive Regex partial match using ':~=' (Requires WAPI 1.4+) Get-IBObject -type record : host -filters 'name:~=my' Search for FixedAddress by MAC \u00b6 # return base fields + mac Get-IBObject -type fixedaddress -filters 'mac=aa:bb:cc:11:22:33' -fields 'mac' -base Search for objects associated with a specific IP address \u00b6 $ipObj = Get-IBObject -type ipv4address -filters 'status=USED' , 'ip_address=1.1.1.1' # the object references are stored in the 'objects' field, but we can # also query for additional information $ipObj | select -expand objects | Get-IBObject # just list the names associated with that IP $ipObj | select -expand names Add a HOST \u00b6 # build the host variable $newhost = @{ name = 'wapi.test.org' ; ipv4addrs =@( @{ ipv4addr = '1.1.1.21' } ) } # Note: `configure_for_dns` defaults to $true which means the 'test.org' DNS zone for # this host must be managed by Infoblox for the call to succeed. Otherwise, you must # set configure_for_dns=$false in the host variable. # Note: the network containing the specified IP must also be managed by Infoblox for # the call to succeed. # create the host $newhost | New-IBObject -type record : host Delete a HOST \u00b6 # search for the host we want to delete $delHost = Get-IBObject -type record : host -filters 'name=wapi.test.org' # delete it $delHost | Remove-IBObject # or delete it directly using an already known object reference Remove-IBOBject -ref 'record:host/ZG5zLmhvc3QkLm5vbl9ETlNfaG' Update a host, or change the IP address \u00b6 (See the examples in The Basics ) Add/Remove IP addresses from a host without altering the original list \u00b6 # add with `ipv4addrs+` in your change template $template = @{ 'ipv4addrs+' = @( @{ ipv4addr = '2.2.2.22' }, @{ ipv4addr = '4.4.4.24' } ) } # save the change using a known object reference Set-IBObject -ref 'record:host/ZG5zLmhvc3QkLl9kZWZhdWx0Lm9yZy5naC' -template $template # remove with `ipv4addrs-' in your change template $template = @{ 'ipv4addrs-' = @( @{ ipv4addr = '2.2.2.22' } ) } # save the change using an existing $myhost variable returned by Get-IBObject $myhost | Set-IBObject -template $template Add a HOST with next_available IP address from a network \u00b6 # create the host variable $newhost = @{ name = 'wapi.test.org' ; ipv4addrs =@( @{} ) } $newhost . ipv4addrs [ 0 ]. ipv4addr = 'func:nextavailableip:10.1.1.0/24' # 'func:' syntax also supports these forms: # func:nextavailableip:network/ZG54dfgsrDFEFfsfsLzA:10.0.0.0/8/default # func:nextavailableip:10.0.0.0/8 # func:nextavailableip:10.0.0.0/8,external # func:nextavailableip:10.0.0.3-10.0.0.10 # OR you can use the longhand form $newhost = @{ name = 'wapi.test.org' ; ipv4addrs =@( @{ ipv4addr =@{} } ) } $newhost . ipv4addrs [ 0 ]. ipv4addr . _function = 'next_available_ip' $newhost . ipv4addrs [ 0 ]. ipv4addr . _object_field = 'value' $newhost . ipv4addrs [ 0 ]. ipv4addr . _object = '10.1.1.0/24' $newhost . ipv4addrs [ 0 ]. ipv4addr . _parameters = @{ num = 1 ; exclude =@( '10.1.1.50' , '10.1.1.60' ) } # create the host $newhost | New-IBObject -type record : host Add a HOST with next_available IP address from a network using a complex search (e.g Extensible Attributes) \u00b6 # This is similar to the previous example using longhand form # But you need to pass the search criteria in the `_object_parameters` field # Note also that `_object` changes from a reference to a type $newhost = @{ name = 'wapi.test.org' ; ipv4addrs =@( @{ ipv4addr =@{} } ) } $newhost . ipv4addrs [ 0 ]. ipv4addr . _function = 'next_available_ip' $newhost . ipv4addrs [ 0 ]. ipv4addr . _object_field = 'value' $newhost . ipv4addrs [ 0 ]. ipv4addr . _object = 'network' $newhost . ipv4addrs [ 0 ]. ipv4addr . _object_parameters = @{ '*Site' = 'Santa Clara' } $newhost . ipv4addrs [ 0 ]. ipv4addr . _parameters = @{ num = 1 ; exclude =@( '10.1.1.50' , '10.1.1.60' ) } # create the host $newhost | New-IBObject -type record : host Add a HOST with a fixed address \u00b6 # basically the same as adding a normal host, but include a mac address $newhost = @{ name = 'wapi.test.org' ; ipv4addrs =@( @{} ) } $newhost . ipv4addrs [ 0 ]. ipv4addr = '1.1.1.21' $newhost . ipv4addrs [ 0 ]. mac = 'aa:bb:cc:11:22:21' # create the host $newhost | New-IBObject -type record : host Add a Fixed address \u00b6 New-IBObject -type fixedaddress -IBObject @{ ipv4addr = '1.1.1.21' ; mac = 'aa:bb:cc:11:22:21' } Add a Fixed address Reservation \u00b6 New-IBObject -type fixedaddress -IBObject @{ ipv4addr = '1.1.1.21' ; mac = '00:00:00:00:00:00' } Search for a subnet \u00b6 $subnet = Get-IBObject -type network -filters 'network=1.1.1.0/24' Get Next Available address from a subnet \u00b6 # using the $subnet variable returned from Get-IBObject $subnet | Invoke-IBFunction -name 'next_available_ip' -args @{ num = 1 } # and if you just want the raw values $subnet | Invoke-IBFunction -name 'next_available_ip' -args @{ num = 1 } | Select -expand ips Get the next 5 IP addresses \u00b6 # using the $subnet variable returned from Get-IBObject $subnet | Invoke-IBFunction -name 'next_available_ip' -args @{ num = 5 } # and if you just want the raw values $subnet | Invoke-IBFunction -name 'next_available_ip' -args @{ num = 5 } | Select -expand ips Get all the addresses (and records) in a subnet \u00b6 Get-IBObject -type ipv4address -filters 'network=1.1.1.0/24' Get all the IP addresses in a given range \u00b6 Get-IBObject -type ipv4address -filters 'ip_address>=1.1.1.1' , 'ip_address<=1.1.1.10' Search for HOSTS by Extensible Attribute \u00b6 # when filtering on EA, prepend '*' to the front of the EA name Get-IBObject -type record : host -filters '*Floor=3rd' -fields 'extattrs' Add extensible Attributes to an object \u00b6 # using a $myhost variable returned by Get-IBObject $myhost | Set-IBObject -template @{ extattrs =@{ Site =@{ value = 'East' }}} # combine with the previous example to change all hosts on the # 3rd Floor to the 5th Floor Get-IBObject -type record : host -filters '*Floor=3rd' | Set-IBObject -template @{ extattrs =@{ Floor =@{ value = '5th' }}} Add a value to a \"List\" type Extensible Attribute \u00b6 # get the existing definition $listdef = Get-IBObject -type extensibleattributedef -Filters 'name=MyList' -Fields 'list_values' # add a new item to the list $listdef . list_values += @{ value = 'NewValue' } # write the updated object back to Infoblox $listdef | Set-IBObject Add a HOST with aliases \u00b6 # build the host variable $newhost = @{ name = 'wapialiased.test.org' ; ipv4addrs =@( @{ ipv4addr = '1.1.1.21' } ) } $newhost . aliases = @( 'remote' , 'pointer' ) # create the host $newhost | New-IBObject -type record : host Get all the aliases on a host \u00b6 Get-IBObject -type record : host -filters 'name=wapialiased.test.org' -fields 'aliases' -base Remove or modify aliases from a host \u00b6 # using a $myhost variable returned by Get-IBObject # remove all existing aliases by sending an empty list $myhost | Set-IBObject -template @{ aliases =@()} # or modify by sending a new list $myhost | Set-IBObject -template @{ aliases =@( 'remote2' )} Add a CNAME \u00b6 $cname = @{ name = 'cname.test.org' ; canonical = 'wapi.test.org' } New-IBObject -type record : cname -IBObject $cname DELETE a CNAME \u00b6 # get a reference to the existing object $myCname = Get-IBObject -type record : cname -filters 'name=cname.test.org' # delete it $myCname | Remove-IBObject Move a CNAME to point to a new canonical \u00b6 # get a reference to the existing object $myCname = Get-IBObject -type record : cname -filters 'name=cname.test.org' # set a new canonical $myCname | Set-IBObject -template @{ canonical = 'wapi-new.test.org' } Add a network or a container \u00b6 # NIOS will auto create the container if it needs to New-IBObject -type network -IBObject @{ network = '45.0.45.0/24' } Add a network and assign to a member \u00b6 # build the network variable $newNet = @{ network = '45.0.46.0/24' ; members =@()} $newNet . members += @{ '_struct' = 'dhcpmember' ; ipv4addr = '192.168.1.3' } # create the network $newNet | New-IBObject -type network Add a DHCP range \u00b6 # build the range variable $newRange = @{ start_addr = '45.0.46.20' ; end_addr = '45.0.46.101' } $newRange . server_association_type = 'MEMBER' $newRange . member = @{ '_struct' = 'dhcpmember' ; ipv4addr = '192.168.1.3' } # create the range $newRange | New-IBObject -type range Add a DHCP reserved range \u00b6 # If you don't assign a member, the range just gets created as 'reserved' New-IBObject -type range -IBObject @{ start_addr = '45.0.46.20' ; end_addr = '45.0.46.101' } Add a zone association to a network \u00b6 # create a template object $zoneAssoc = @{ zone_associations =@() } $zoneAssoc . zone_associations += @{ fqdn = 'test.org' ; is_default = $true } # assuming you have the network object reference string already Set-IBObject -ref 'network/ZG5zLm5l...' -template $zoneAssoc List the zone_associations on a network \u00b6 # assuming you have the network object reference string already Get-IBObject -ref 'network/ZG5zLm5l...' -fields 'zone_associations' -base # or not Get-IBObject -type network -filters 'network=45.0.46.0/24' -fields 'zone_associations' -base Add a zone, of type forward \u00b6 forwarding_servers are the grid members that will forward for that zone # build the zone variable $fwdZone = @{ fqdn = 'foo.com' ; forward_to =@(); forwarding_servers =@() } $fwdZone . forward_to += @{ address = '1.1.1.1' ; name = 'ns.foo.com' } $fwdZone . forward_to += @{ address = '1.1.1.2' ; name = 'ns2.foo.com' } $fwdZone . forwarding_servers += @{ name = 'infoblox2.localdomain' } $fwdZone . forwarding_servers += @{ name = 'infoblox1.localdomain' } # create the zone $fwdZone | New-IBObject -type zone_forward Get \"restart status\" of grid services \u00b6 # First make a function call to 'refresh the restartservicestatus object' # (this doesn't return any data) Get-IBObject -type grid | Invoke-IBFunction -name requestrestartservicestatus -args @{ service_option = 'ALL' } # Now get the updated restartservicestatus object # If the status for things is REQUESTING, wait a few seconds and try again Get-IBObject -type restartservicestatus Restart services \u00b6 $restartArgs = @{ member_order = 'SIMULTANEOUSLY' ; service_option = 'ALL' } Get-IBObject -type grid | Invoke-IBFunction -name restartservices -args $restartArgs Export a database \u00b6 In Posh-IBWAPI 2.x or later: Receive-IBFile -FunctionName getgriddata -OutFile .\\ backup . tar . gz -FunctionArgs @{ type = 'BACKUP' } In Posh-IBWAPI 1.x: # request a download token and URL $dl = Invoke-IBFunction -ref fileop -name getgriddata -args @{ type = 'BACKUP' } # download the file Invoke-IBWAPI -Uri $dl . url -ContentType 'application/force-download' ` -Credential ( Get-IBConfig ). Credential ` -OutFile .\\ backup . tar . gz # inform Infoblox that the download is complete Invoke-IBFunction -ref fileop -name downloadcomplete -args @{ token = $dl . token } Export a CSV file \u00b6 In Posh-IBWAPI 2.x or later: Receive-IBFile -FunctionName csv_export -OutFile .\\ hosts . csv -FunctionArgs @{ _object = 'record:host' } In Posh-IBWAPI 1.x: # request a download token and URL $dl = Invoke-IBFunction -ref fileop -name csv_export -args @{ _object = 'record:host' } # download the file Invoke-IBWAPI -Uri $dl . url -ContentType 'application/force-download' ` -Credential ( Get-IBConfig ). Credential ` -OutFile .\\ hosts . csv # inform Infoblox that the download is complete Invoke-IBFunction -ref fileop -name downloadcomplete -args @{ token = $dl . token } Export the results of a WAPI call \u00b6 And save the data to disk. (Yes, you can cache results) # build the args object $funcArgs = @{ _encoding = 'JSON' ; _filename = 'allhosts.corp.org.json' ; _object = 'record:host' ; _return_fields = 'name,extattrs' ; zone = 'corp.org' } # call the function Invoke-IBFunction -ref fileop -name read -args $funcArgs # The file will be in a folder 'wapi_output' in the HTTP file distribution","title":"Definitive REST examples"},{"location":"Guides/Definitive-REST-Examples/#background","text":"This page will attempt to be a ported version of a now archived Infoblox community post called \"The definitive list of REST examples\" using Posh-IBWAPI functions. All examples assume you have already configured common connection settings with Set-IBConfig . If you're still using the default self-signed Infoblox certificates, don't forget to include -SkipCertificateCheck . For example: Set-IBConfig -ProfileName mygrid -host gridmaster . test . com -ver latest -cred ( Get-Credential ) -SkipCertificateCheck Functions generally output zero or more PSCustomObject objects natively parsed from the WAPI's JSON output or raw object reference strings. While trying the examples on your own, it can be helpful to convert your own result objects to JSON for better readability. For example: $hosts = Get-IBObject -type record : host # output the first host result as JSON $hosts [ 0 ] | ConvertTo-Json -Depth 5","title":"Background"},{"location":"Guides/Definitive-REST-Examples/#the-definitive-list-of-rest-examples","text":"A common question we are asked is \"Do you have some examples of specific REST calls\", or \"How can I get started with testing the WAPI?\". The API docs are good if you need the technical details, but this post hopes to address the overall fundamentals.","title":"The definitive list of REST examples"},{"location":"Guides/Definitive-REST-Examples/#the-basics","text":"use Get-IBObject to get/search use New-IBObject to add use Set-IBObject to modify use Remove-IBObject to remove If you want to modify an object, you have to use a Get-IBObject to read it first. This will give you the _ref (among other base fields) , which you will need in order to update that object. # Get a specific host by name (case-insensitive) $testhost = Get-IBObject -type record : host -filters 'name:=test_host.test.com' # $testhost looks like the following when converted to JSON { \"_ref\" : \"record:host/ZG5zLmhvc3QkLjEubmV0LmR2b2x2ZS5leHRucw:test_host.test.com/default\" , \"ipv4addrs\" : [ { \"_ref\" : \"record:host_ipv4addr/ZG5zLmhvc3RfYWRkcmVzcyQuMS5uZXQuZHZvbHZlLmV4dG5zLjEwLjE3LjYuNC4:192.168.0.1/test_host.test.com/default\" , \"configure_for_dhcp\" : false , \"host\" : \"test_host.test.com\" , \"ipv4addr\" : \"1.1.1.1\" } ], \"name\" : \"test_host.test.com\" , \"view\" : \"default\" } Note You can use -ReturnAllFields to return all available data for a given object type. This flag requires WAPI version 1.7.5+ because it involves extra queries to the schema under the hood. Thus, it is also less performant than a normal query because of the extra roundtrips to the server. If you know the fields you want, it is better to use -ReturnFields 'field1','field2','fieldX' . Using -ReturnFields will prevent the base fields from being returned unless you explicitly include them or also use -ReturnBaseFields . There are two different ways to modify the host you just queried. They involve slightly different ways of calling Set-IBObject . The easiest, particularly if you're making the same change to multiple objects, is usually to just pipe the variable to Set-IBObject and provide a template for the changes with -TemplateObject . This works because Set-IBObject knows how to pull the _ref field out of the pipelined object and use it for -ObjectRef : # create a template to change the IP address $template = @{ ipv4addrs =@(@{ ipv4addr = '1.1.1.2' })} # save the change $testhost | Set-IBObject -template $template # this also works when you only have a copy of the _ref string Set-IBObject -ref 'record:host/ZG5zLmhvc3QkLjEubmV0LmR2b2x2ZS5' -template $template The second way involves modifying the variable and then piping it to Set-IBObject by itself. This has a tendency to be more difficult because read-only fields in the original variable need to be removed or an error will be thrown. It can also be more tedious to add fields if the original variable doesn't contain the fields you want to edit. However, this way can also be easier if you're changing many objects in a more algorithmic way; such as modifying a set of hostnames using string replacement. # remove the read-only 'host' field from the nested 'record:host_ipv4addr' object $testhost . ipv4addrs [ 0 ]. PSObject . Properties . Remove ( 'host' ) # change the IP address $testhost . ipv4addrs [ 0 ]. ipv4addr = '1.1.1.2' # add a comment $testhost | Add-Member @{ comment = 'my test host' } # save the change $testhost | Set-IBObject","title":"The Basics"},{"location":"Guides/Definitive-REST-Examples/#search-for-host-by-name","text":"# case-sensitive exact match using '=' Get-IBObject -type record : host -filters 'name=my.fqdn.org' # case-insensitive exact match using ':=' (Requires WAPI 1.4+) Get-IBObject -type record : host -filters 'name:=my.fqdn.org' # case-sensitive Regex partial match using '~=' Get-IBObject -type record : host -filters 'name~=my' # case-insensitive Regex partial match using ':~=' (Requires WAPI 1.4+) Get-IBObject -type record : host -filters 'name:~=my'","title":"Search for HOST by name"},{"location":"Guides/Definitive-REST-Examples/#search-for-fixedaddress-by-mac","text":"# return base fields + mac Get-IBObject -type fixedaddress -filters 'mac=aa:bb:cc:11:22:33' -fields 'mac' -base","title":"Search for FixedAddress by MAC"},{"location":"Guides/Definitive-REST-Examples/#search-for-objects-associated-with-a-specific-ip-address","text":"$ipObj = Get-IBObject -type ipv4address -filters 'status=USED' , 'ip_address=1.1.1.1' # the object references are stored in the 'objects' field, but we can # also query for additional information $ipObj | select -expand objects | Get-IBObject # just list the names associated with that IP $ipObj | select -expand names","title":"Search for objects associated with a specific IP address"},{"location":"Guides/Definitive-REST-Examples/#add-a-host","text":"# build the host variable $newhost = @{ name = 'wapi.test.org' ; ipv4addrs =@( @{ ipv4addr = '1.1.1.21' } ) } # Note: `configure_for_dns` defaults to $true which means the 'test.org' DNS zone for # this host must be managed by Infoblox for the call to succeed. Otherwise, you must # set configure_for_dns=$false in the host variable. # Note: the network containing the specified IP must also be managed by Infoblox for # the call to succeed. # create the host $newhost | New-IBObject -type record : host","title":"Add a HOST"},{"location":"Guides/Definitive-REST-Examples/#delete-a-host","text":"# search for the host we want to delete $delHost = Get-IBObject -type record : host -filters 'name=wapi.test.org' # delete it $delHost | Remove-IBObject # or delete it directly using an already known object reference Remove-IBOBject -ref 'record:host/ZG5zLmhvc3QkLm5vbl9ETlNfaG'","title":"Delete a HOST"},{"location":"Guides/Definitive-REST-Examples/#update-a-host-or-change-the-ip-address","text":"(See the examples in The Basics )","title":"Update a host, or change the IP address"},{"location":"Guides/Definitive-REST-Examples/#addremove-ip-addresses-from-a-host-without-altering-the-original-list","text":"# add with `ipv4addrs+` in your change template $template = @{ 'ipv4addrs+' = @( @{ ipv4addr = '2.2.2.22' }, @{ ipv4addr = '4.4.4.24' } ) } # save the change using a known object reference Set-IBObject -ref 'record:host/ZG5zLmhvc3QkLl9kZWZhdWx0Lm9yZy5naC' -template $template # remove with `ipv4addrs-' in your change template $template = @{ 'ipv4addrs-' = @( @{ ipv4addr = '2.2.2.22' } ) } # save the change using an existing $myhost variable returned by Get-IBObject $myhost | Set-IBObject -template $template","title":"Add/Remove IP addresses from a host without altering the original list"},{"location":"Guides/Definitive-REST-Examples/#add-a-host-with-next_available-ip-address-from-a-network","text":"# create the host variable $newhost = @{ name = 'wapi.test.org' ; ipv4addrs =@( @{} ) } $newhost . ipv4addrs [ 0 ]. ipv4addr = 'func:nextavailableip:10.1.1.0/24' # 'func:' syntax also supports these forms: # func:nextavailableip:network/ZG54dfgsrDFEFfsfsLzA:10.0.0.0/8/default # func:nextavailableip:10.0.0.0/8 # func:nextavailableip:10.0.0.0/8,external # func:nextavailableip:10.0.0.3-10.0.0.10 # OR you can use the longhand form $newhost = @{ name = 'wapi.test.org' ; ipv4addrs =@( @{ ipv4addr =@{} } ) } $newhost . ipv4addrs [ 0 ]. ipv4addr . _function = 'next_available_ip' $newhost . ipv4addrs [ 0 ]. ipv4addr . _object_field = 'value' $newhost . ipv4addrs [ 0 ]. ipv4addr . _object = '10.1.1.0/24' $newhost . ipv4addrs [ 0 ]. ipv4addr . _parameters = @{ num = 1 ; exclude =@( '10.1.1.50' , '10.1.1.60' ) } # create the host $newhost | New-IBObject -type record : host","title":"Add a HOST with next_available IP address from a network"},{"location":"Guides/Definitive-REST-Examples/#add-a-host-with-next_available-ip-address-from-a-network-using-a-complex-search-eg-extensible-attributes","text":"# This is similar to the previous example using longhand form # But you need to pass the search criteria in the `_object_parameters` field # Note also that `_object` changes from a reference to a type $newhost = @{ name = 'wapi.test.org' ; ipv4addrs =@( @{ ipv4addr =@{} } ) } $newhost . ipv4addrs [ 0 ]. ipv4addr . _function = 'next_available_ip' $newhost . ipv4addrs [ 0 ]. ipv4addr . _object_field = 'value' $newhost . ipv4addrs [ 0 ]. ipv4addr . _object = 'network' $newhost . ipv4addrs [ 0 ]. ipv4addr . _object_parameters = @{ '*Site' = 'Santa Clara' } $newhost . ipv4addrs [ 0 ]. ipv4addr . _parameters = @{ num = 1 ; exclude =@( '10.1.1.50' , '10.1.1.60' ) } # create the host $newhost | New-IBObject -type record : host","title":"Add a HOST with next_available IP address from a network using a complex search (e.g Extensible Attributes)"},{"location":"Guides/Definitive-REST-Examples/#add-a-host-with-a-fixed-address","text":"# basically the same as adding a normal host, but include a mac address $newhost = @{ name = 'wapi.test.org' ; ipv4addrs =@( @{} ) } $newhost . ipv4addrs [ 0 ]. ipv4addr = '1.1.1.21' $newhost . ipv4addrs [ 0 ]. mac = 'aa:bb:cc:11:22:21' # create the host $newhost | New-IBObject -type record : host","title":"Add a HOST with a fixed address"},{"location":"Guides/Definitive-REST-Examples/#add-a-fixed-address","text":"New-IBObject -type fixedaddress -IBObject @{ ipv4addr = '1.1.1.21' ; mac = 'aa:bb:cc:11:22:21' }","title":"Add a Fixed address"},{"location":"Guides/Definitive-REST-Examples/#add-a-fixed-address-reservation","text":"New-IBObject -type fixedaddress -IBObject @{ ipv4addr = '1.1.1.21' ; mac = '00:00:00:00:00:00' }","title":"Add a Fixed address Reservation"},{"location":"Guides/Definitive-REST-Examples/#search-for-a-subnet","text":"$subnet = Get-IBObject -type network -filters 'network=1.1.1.0/24'","title":"Search for a subnet"},{"location":"Guides/Definitive-REST-Examples/#get-next-available-address-from-a-subnet","text":"# using the $subnet variable returned from Get-IBObject $subnet | Invoke-IBFunction -name 'next_available_ip' -args @{ num = 1 } # and if you just want the raw values $subnet | Invoke-IBFunction -name 'next_available_ip' -args @{ num = 1 } | Select -expand ips","title":"Get Next Available address from a subnet"},{"location":"Guides/Definitive-REST-Examples/#get-the-next-5-ip-addresses","text":"# using the $subnet variable returned from Get-IBObject $subnet | Invoke-IBFunction -name 'next_available_ip' -args @{ num = 5 } # and if you just want the raw values $subnet | Invoke-IBFunction -name 'next_available_ip' -args @{ num = 5 } | Select -expand ips","title":"Get the next 5 IP addresses"},{"location":"Guides/Definitive-REST-Examples/#get-all-the-addresses-and-records-in-a-subnet","text":"Get-IBObject -type ipv4address -filters 'network=1.1.1.0/24'","title":"Get all the addresses (and records) in a subnet"},{"location":"Guides/Definitive-REST-Examples/#get-all-the-ip-addresses-in-a-given-range","text":"Get-IBObject -type ipv4address -filters 'ip_address>=1.1.1.1' , 'ip_address<=1.1.1.10'","title":"Get all the IP addresses in a given range"},{"location":"Guides/Definitive-REST-Examples/#search-for-hosts-by-extensible-attribute","text":"# when filtering on EA, prepend '*' to the front of the EA name Get-IBObject -type record : host -filters '*Floor=3rd' -fields 'extattrs'","title":"Search for HOSTS by Extensible Attribute"},{"location":"Guides/Definitive-REST-Examples/#add-extensible-attributes-to-an-object","text":"# using a $myhost variable returned by Get-IBObject $myhost | Set-IBObject -template @{ extattrs =@{ Site =@{ value = 'East' }}} # combine with the previous example to change all hosts on the # 3rd Floor to the 5th Floor Get-IBObject -type record : host -filters '*Floor=3rd' | Set-IBObject -template @{ extattrs =@{ Floor =@{ value = '5th' }}}","title":"Add extensible Attributes to an object"},{"location":"Guides/Definitive-REST-Examples/#add-a-value-to-a-list-type-extensible-attribute","text":"# get the existing definition $listdef = Get-IBObject -type extensibleattributedef -Filters 'name=MyList' -Fields 'list_values' # add a new item to the list $listdef . list_values += @{ value = 'NewValue' } # write the updated object back to Infoblox $listdef | Set-IBObject","title":"Add a value to a \"List\" type Extensible Attribute"},{"location":"Guides/Definitive-REST-Examples/#add-a-host-with-aliases","text":"# build the host variable $newhost = @{ name = 'wapialiased.test.org' ; ipv4addrs =@( @{ ipv4addr = '1.1.1.21' } ) } $newhost . aliases = @( 'remote' , 'pointer' ) # create the host $newhost | New-IBObject -type record : host","title":"Add a HOST with aliases"},{"location":"Guides/Definitive-REST-Examples/#get-all-the-aliases-on-a-host","text":"Get-IBObject -type record : host -filters 'name=wapialiased.test.org' -fields 'aliases' -base","title":"Get all the aliases on a host"},{"location":"Guides/Definitive-REST-Examples/#remove-or-modify-aliases-from-a-host","text":"# using a $myhost variable returned by Get-IBObject # remove all existing aliases by sending an empty list $myhost | Set-IBObject -template @{ aliases =@()} # or modify by sending a new list $myhost | Set-IBObject -template @{ aliases =@( 'remote2' )}","title":"Remove or modify aliases from a host"},{"location":"Guides/Definitive-REST-Examples/#add-a-cname","text":"$cname = @{ name = 'cname.test.org' ; canonical = 'wapi.test.org' } New-IBObject -type record : cname -IBObject $cname","title":"Add a CNAME"},{"location":"Guides/Definitive-REST-Examples/#delete-a-cname","text":"# get a reference to the existing object $myCname = Get-IBObject -type record : cname -filters 'name=cname.test.org' # delete it $myCname | Remove-IBObject","title":"DELETE a CNAME"},{"location":"Guides/Definitive-REST-Examples/#move-a-cname-to-point-to-a-new-canonical","text":"# get a reference to the existing object $myCname = Get-IBObject -type record : cname -filters 'name=cname.test.org' # set a new canonical $myCname | Set-IBObject -template @{ canonical = 'wapi-new.test.org' }","title":"Move a CNAME to point to a new canonical"},{"location":"Guides/Definitive-REST-Examples/#add-a-network-or-a-container","text":"# NIOS will auto create the container if it needs to New-IBObject -type network -IBObject @{ network = '45.0.45.0/24' }","title":"Add a network or a container"},{"location":"Guides/Definitive-REST-Examples/#add-a-network-and-assign-to-a-member","text":"# build the network variable $newNet = @{ network = '45.0.46.0/24' ; members =@()} $newNet . members += @{ '_struct' = 'dhcpmember' ; ipv4addr = '192.168.1.3' } # create the network $newNet | New-IBObject -type network","title":"Add a network and assign to a member"},{"location":"Guides/Definitive-REST-Examples/#add-a-dhcp-range","text":"# build the range variable $newRange = @{ start_addr = '45.0.46.20' ; end_addr = '45.0.46.101' } $newRange . server_association_type = 'MEMBER' $newRange . member = @{ '_struct' = 'dhcpmember' ; ipv4addr = '192.168.1.3' } # create the range $newRange | New-IBObject -type range","title":"Add a DHCP range"},{"location":"Guides/Definitive-REST-Examples/#add-a-dhcp-reserved-range","text":"# If you don't assign a member, the range just gets created as 'reserved' New-IBObject -type range -IBObject @{ start_addr = '45.0.46.20' ; end_addr = '45.0.46.101' }","title":"Add a DHCP reserved range"},{"location":"Guides/Definitive-REST-Examples/#add-a-zone-association-to-a-network","text":"# create a template object $zoneAssoc = @{ zone_associations =@() } $zoneAssoc . zone_associations += @{ fqdn = 'test.org' ; is_default = $true } # assuming you have the network object reference string already Set-IBObject -ref 'network/ZG5zLm5l...' -template $zoneAssoc","title":"Add a zone association to a network"},{"location":"Guides/Definitive-REST-Examples/#list-the-zone_associations-on-a-network","text":"# assuming you have the network object reference string already Get-IBObject -ref 'network/ZG5zLm5l...' -fields 'zone_associations' -base # or not Get-IBObject -type network -filters 'network=45.0.46.0/24' -fields 'zone_associations' -base","title":"List the zone_associations on a network"},{"location":"Guides/Definitive-REST-Examples/#add-a-zone-of-type-forward","text":"forwarding_servers are the grid members that will forward for that zone # build the zone variable $fwdZone = @{ fqdn = 'foo.com' ; forward_to =@(); forwarding_servers =@() } $fwdZone . forward_to += @{ address = '1.1.1.1' ; name = 'ns.foo.com' } $fwdZone . forward_to += @{ address = '1.1.1.2' ; name = 'ns2.foo.com' } $fwdZone . forwarding_servers += @{ name = 'infoblox2.localdomain' } $fwdZone . forwarding_servers += @{ name = 'infoblox1.localdomain' } # create the zone $fwdZone | New-IBObject -type zone_forward","title":"Add a zone, of type forward"},{"location":"Guides/Definitive-REST-Examples/#get-restart-status-of-grid-services","text":"# First make a function call to 'refresh the restartservicestatus object' # (this doesn't return any data) Get-IBObject -type grid | Invoke-IBFunction -name requestrestartservicestatus -args @{ service_option = 'ALL' } # Now get the updated restartservicestatus object # If the status for things is REQUESTING, wait a few seconds and try again Get-IBObject -type restartservicestatus","title":"Get \"restart status\" of grid services"},{"location":"Guides/Definitive-REST-Examples/#restart-services","text":"$restartArgs = @{ member_order = 'SIMULTANEOUSLY' ; service_option = 'ALL' } Get-IBObject -type grid | Invoke-IBFunction -name restartservices -args $restartArgs","title":"Restart services"},{"location":"Guides/Definitive-REST-Examples/#export-a-database","text":"In Posh-IBWAPI 2.x or later: Receive-IBFile -FunctionName getgriddata -OutFile .\\ backup . tar . gz -FunctionArgs @{ type = 'BACKUP' } In Posh-IBWAPI 1.x: # request a download token and URL $dl = Invoke-IBFunction -ref fileop -name getgriddata -args @{ type = 'BACKUP' } # download the file Invoke-IBWAPI -Uri $dl . url -ContentType 'application/force-download' ` -Credential ( Get-IBConfig ). Credential ` -OutFile .\\ backup . tar . gz # inform Infoblox that the download is complete Invoke-IBFunction -ref fileop -name downloadcomplete -args @{ token = $dl . token }","title":"Export a database"},{"location":"Guides/Definitive-REST-Examples/#export-a-csv-file","text":"In Posh-IBWAPI 2.x or later: Receive-IBFile -FunctionName csv_export -OutFile .\\ hosts . csv -FunctionArgs @{ _object = 'record:host' } In Posh-IBWAPI 1.x: # request a download token and URL $dl = Invoke-IBFunction -ref fileop -name csv_export -args @{ _object = 'record:host' } # download the file Invoke-IBWAPI -Uri $dl . url -ContentType 'application/force-download' ` -Credential ( Get-IBConfig ). Credential ` -OutFile .\\ hosts . csv # inform Infoblox that the download is complete Invoke-IBFunction -ref fileop -name downloadcomplete -args @{ token = $dl . token }","title":"Export a CSV file"},{"location":"Guides/Definitive-REST-Examples/#export-the-results-of-a-wapi-call","text":"And save the data to disk. (Yes, you can cache results) # build the args object $funcArgs = @{ _encoding = 'JSON' ; _filename = 'allhosts.corp.org.json' ; _object = 'record:host' ; _return_fields = 'name,extattrs' ; zone = 'corp.org' } # call the function Invoke-IBFunction -ref fileop -name read -args $funcArgs # The file will be in a folder 'wapi_output' in the HTTP file distribution","title":"Export the results of a WAPI call"},{"location":"Guides/Development-Notes/","text":"Development Notes \u00b6 Observations: Invoke-RestMethod and authentication \u00b6 Using both -WebSession and -SessionVariable in the same call is not supported and will generate an exception. The WebRequestSession object set by -SessionVariable contains a copy of the -Credential used and the ibapauth cookie returned from Infoblox. When the session expires, the embedded credential will automatically be used to re-authenticate on the next call and update cookie in the session object. Instead of using -SessionVariable , it is possible to pre-create a WebRequestSession object with embedded credentials and use that with -WebSession instead of making a separate call with -SessionVariable first. It will automatically authenticate the same way it does if the login cookie had expired. $session = New-Object Microsoft . PowerShell . Commands . WebRequestSession $session . Credentials = ( Get-Credential ). GetNetworkCredential () Invoke-RestMethod -Uri \"http://example.com\" -WebSession $session It is possible to use both -Credential and -WebSession in the same call. If the ibapauth cookie in the session object is still valid, that will be used even if the explicit credential object is a different user. If there is no cookie or the cookie is expired, the explicit credential object will override any credential embedded in the session object. Because the functions in this module are largely just wrapping Invoke-RestMethod, all of the observations listed above apply to this module's functions that take the same parameters. Observations: Disabling Certificate Validation \u00b6 There is unfortunately no native support in Invoke-RestMethod (or any related cmdlet) for per-call disabling of certificate validation. Validation logic is controlled globally at the .NET level on a per-session basis in System.Net.ServicePointManager . In order to mimic a per-call disable flag, we're essentially disabling cert validation globally just long enough to make our call to Invoke-RestMethod and then setting it back to the default functionality. However, the ServicePointManager seems to cache the validation results for each base URL. The result is that for a short period of time (minutes), cert validation will continue to appear to be disabled when making calls against the same WAPI endpoint even though cert validation is technically turned back on. There may be a way to shorten the cache duration by changing the value of ServicePointManager.MaxServicePointIdleTime . But even setting it to 0 doesn't remove the cached validation immediately. There's still a delay likely waiting for the idle object to be garbage collected. For the time being, we're going to leave MaxServicePointIdleTime alone as it's likely an extreme edge case that someone would need to disable cert validation for a single call and then turn it back on for the same WAPI endpoint in quick succession. Most of the people who care about this feature are running Infoblox with the default self-signed certificate and will just choose to always have certificate validation disabled. UPDATE: The version of Invoke-RestMethod included in Powershell Core 6.0 includes a -SkipCertificateCheck parameter which should resolve this issue at least for Core edition users. Hopefully Microsoft will back port those changes into Desktop edition eventually.","title":"Development Notes"},{"location":"Guides/Development-Notes/#development-notes","text":"","title":"Development Notes"},{"location":"Guides/Development-Notes/#observations-invoke-restmethod-and-authentication","text":"Using both -WebSession and -SessionVariable in the same call is not supported and will generate an exception. The WebRequestSession object set by -SessionVariable contains a copy of the -Credential used and the ibapauth cookie returned from Infoblox. When the session expires, the embedded credential will automatically be used to re-authenticate on the next call and update cookie in the session object. Instead of using -SessionVariable , it is possible to pre-create a WebRequestSession object with embedded credentials and use that with -WebSession instead of making a separate call with -SessionVariable first. It will automatically authenticate the same way it does if the login cookie had expired. $session = New-Object Microsoft . PowerShell . Commands . WebRequestSession $session . Credentials = ( Get-Credential ). GetNetworkCredential () Invoke-RestMethod -Uri \"http://example.com\" -WebSession $session It is possible to use both -Credential and -WebSession in the same call. If the ibapauth cookie in the session object is still valid, that will be used even if the explicit credential object is a different user. If there is no cookie or the cookie is expired, the explicit credential object will override any credential embedded in the session object. Because the functions in this module are largely just wrapping Invoke-RestMethod, all of the observations listed above apply to this module's functions that take the same parameters.","title":"Observations: Invoke-RestMethod and authentication"},{"location":"Guides/Development-Notes/#observations-disabling-certificate-validation","text":"There is unfortunately no native support in Invoke-RestMethod (or any related cmdlet) for per-call disabling of certificate validation. Validation logic is controlled globally at the .NET level on a per-session basis in System.Net.ServicePointManager . In order to mimic a per-call disable flag, we're essentially disabling cert validation globally just long enough to make our call to Invoke-RestMethod and then setting it back to the default functionality. However, the ServicePointManager seems to cache the validation results for each base URL. The result is that for a short period of time (minutes), cert validation will continue to appear to be disabled when making calls against the same WAPI endpoint even though cert validation is technically turned back on. There may be a way to shorten the cache duration by changing the value of ServicePointManager.MaxServicePointIdleTime . But even setting it to 0 doesn't remove the cached validation immediately. There's still a delay likely waiting for the idle object to be garbage collected. For the time being, we're going to leave MaxServicePointIdleTime alone as it's likely an extreme edge case that someone would need to disable cert validation for a single call and then turn it back on for the same WAPI endpoint in quick succession. Most of the people who care about this feature are running Infoblox with the default self-signed certificate and will just choose to always have certificate validation disabled. UPDATE: The version of Invoke-RestMethod included in Powershell Core 6.0 includes a -SkipCertificateCheck parameter which should resolve this issue at least for Core edition users. Hopefully Microsoft will back port those changes into Desktop edition eventually.","title":"Observations: Disabling Certificate Validation"},{"location":"Guides/Stateless-Mode/","text":"Stateless Mode \u00b6 Particularly in cloud environments, being able to use the module without needing to run an explicit configuration command like Set-IBConfig can be very useful. Posh-IBWAPI 4.0 now allows you to do that by specifying configuring the properties of a typical connection profile as environment variables. If the module is imported and sees these environment variables, they will override any local config file that may exist. Note The environment variable based profile will also override any SecretManagement related environment variables which are also new in 4.0 Supported Environment Variables \u00b6 The rules for these values mimic the rules for the equivalent parameters in Set-IBConfig except the Credential is split out into separate username and password values. Name Example Notes IBWAPI_HOST gm.example.com (Required) This can be an FQDN or IP address IBWAPI_VERSION 2.12.1 (Required) A valid WAPI version string IBWAPI_USERNAME admin (Required) The account username IBWAPI_PASSWORD infoblox (Required) The plaintext password IBWAPI_SKIPCERTCHECK False (Optional) False if not defined, empty, or equal to 'False', 'No', or '0' The values are read during module import. So if you set them after the module is already loaded or need to change the values, you will need to force re-load the module for them to take effect. Import-Module Posh-IBWAPI -Force You'll know it's working if you run Get-IBConfig and see a profile called ENV with your details similar to this: ProfileName WAPIHost WAPIVersion CredentialUser SkipCertificateCheck ----------- -------- ----------- -------------- -------------------- ENV gm.example.com 2.12.1 admin False Also a warning will be thrown if you attempt to use Set-IBConfig or Remove-IBConfig while an environment variable based profile is active.","title":"Stateless Mode"},{"location":"Guides/Stateless-Mode/#stateless-mode","text":"Particularly in cloud environments, being able to use the module without needing to run an explicit configuration command like Set-IBConfig can be very useful. Posh-IBWAPI 4.0 now allows you to do that by specifying configuring the properties of a typical connection profile as environment variables. If the module is imported and sees these environment variables, they will override any local config file that may exist. Note The environment variable based profile will also override any SecretManagement related environment variables which are also new in 4.0","title":"Stateless Mode"},{"location":"Guides/Stateless-Mode/#supported-environment-variables","text":"The rules for these values mimic the rules for the equivalent parameters in Set-IBConfig except the Credential is split out into separate username and password values. Name Example Notes IBWAPI_HOST gm.example.com (Required) This can be an FQDN or IP address IBWAPI_VERSION 2.12.1 (Required) A valid WAPI version string IBWAPI_USERNAME admin (Required) The account username IBWAPI_PASSWORD infoblox (Required) The plaintext password IBWAPI_SKIPCERTCHECK False (Optional) False if not defined, empty, or equal to 'False', 'No', or '0' The values are read during module import. So if you set them after the module is already loaded or need to change the values, you will need to force re-load the module for them to take effect. Import-Module Posh-IBWAPI -Force You'll know it's working if you run Get-IBConfig and see a profile called ENV with your details similar to this: ProfileName WAPIHost WAPIVersion CredentialUser SkipCertificateCheck ----------- -------- ----------- -------------- -------------------- ENV gm.example.com 2.12.1 admin False Also a warning will be thrown if you attempt to use Set-IBConfig or Remove-IBConfig while an environment variable based profile is active.","title":"Supported Environment Variables"},{"location":"Guides/Using-Get-IBSchema/","text":"Using Get-IBSchema \u00b6 In WAPI 1.7.5 (NIOS 6.12), Infoblox added a _schema option to GET queries that will ignore most of the normal options and return a JSON view of the object model for the object type specified. This was presumably so that one could programmatically discover the WAPI object model without necessarily needing to look at the full HTML or PDF documentation. In WAPI 2.0 (NIOS 6.12.later and 7.0), they expanded on the schema querying functionality by adding more metadata to the object model and a _get_doc option that returned human readable text descriptions. It feels like they're trying to slowly move towards feature parity with the full HTML/PDF documentation which will be awesome if/when they get there. The goal of Get-IBSchema is to provide a Get-Help style view of the WAPI object model so that you don't necessarily have to continually reference the full documentation as you are developing your code. Some of the WAPI objects have fairly large object models and the full output can be pretty dense and long. So there are a lot of parameters that can help filter the output to only what you want to see. Note Most of the examples below will be queried from a WAPI 2.0+ appliance. They should work the same way against 1.7.5, but there might be less data returned. The Basics \u00b6 Get-IBSchema uses the same common connection settings as other *-IBObject queries including values saved with Set-IBConfig . It's important to note that the WAPI will return a view of the schema that is filtered for the WAPI version you request. So if your WAPI version is 2.x and your requested version is 1.5, you'll get the schema that existed in WAPI 1.5. This is cool because you can do schema queries for WAPI versions that didn't originally support schema queries. Calling Get-IBSchema with no parameters or only a -WAPIVersion will return the base schema which includes the list of supported versions and the list of supported objects. For example: PS C:\\> Get-IBSchema -version 1.5 Requested Version: 1.5 Supported Versions: 1.0 1.5 1.7.5 2.3 1.1 1.6 2.0 2.3.1 1.2 1.6.1 2.1 2.4 1.2.1 1.7 2.1.1 2.5 1.3 1.7.1 2.1.2 2.6 1.4 1.7.2 2.2 2.6.1 1.4.1 1.7.3 2.2.1 2.7 1.4.2 1.7.4 2.2.2 Supported Objects: allrecords ipv6networkcontainer record:cname sharedrecord:a csvimporttask ipv6range record:host sharedrecord:aaaa discovery:device ipv6sharednetwork record:host_ipv4addr sharedrecord:mx discovery:deviceinterface lease record:host_ipv6addr sharedrecord:srv discovery:deviceneighbor macfilteraddress record:mx sharedrecord:txt discovery:status member record:naptr snmpuser fileop namedacl record:ptr view fixedaddress network record:srv zone_auth grid networkcontainer record:txt zone_delegated grid:dhcpproperties networkview restartservicestatus zone_forward ipv4address permission roaminghost zone_stub ipv6address range scheduledtask ipv6fixedaddress record:a search ipv6network record:aaaa sharednetwork To get the specifics for a particular object, add it with the -ObjectType parameter. The \"RESTRICTIONS\" section are the operations not supported by this object. Some objects may also have a \"CLOUD RESTRICTIONS\" section that has the operations not supported when querying via a cloud appliance. Without any additional parameters, the fields are displayed in a table format similar to the \"Fields List\" section from the full docs. The TYPE column shows the data type of that field and whether it is an array or not indicated by [] after the type name. The SUPPORTS column indicates what operations are allowed for each field (R = Read/Get, W = Write/Create, U = Update/Modify, D = Delete, S = Search) . The BASE column indicates whether the field is returned by default as part of the base object. The SEARCH column indicates what types of searches are allowed against that field (case-insensitive, regex, greater than, etc) . If the object has functions associated with it, those are displayed in a separate section below the fields table. PS C:\\> Get-IBSchema member OBJECT member (WAPI 2.7) RESTRICTIONS scheduling, csv FIELD TYPE SUPPORTS BASE SEARCH ----- ---- -------- ---- ------ active_position string R additional_ip_list interface[] RWU bgp_as bgpas[] RWU comment string RWU S :=~ config_addr_type enum RWU S X = dns_resolver_setting setting:dnsresolver RWU dscp uint RWU email_setting setting:email RWU enable_ha bool RWU S = enable_lom bool RWU enable_member_redirect bool RWU enable_ro_api_access bool RWU S = extattrs extattr RWU external_syslog_backup_servers extsyslogbackupserver[] RWU external_syslog_server_enable bool RWU host_name string RWU S X :=~ ipv4_address string S = ipv6_address string S = ipv6_setting ipv6setting RWU ipv6_static_routes ipv6setting[] RWU is_dscp_capable bool R lan2_enabled bool RWU lan2_port_setting lan2portsetting RWU lcd_input bool RWU lom_network_config lomnetworkconfig[] RWU lom_users lomuser[] RWU master_candidate bool RWU S = member_service_communication memberservicecommunication[] RWU mgmt_port_setting mgmtportsetting RWU mmdb_ea_build_time timestamp R mmdb_geoip_build_time timestamp R nat_setting natsetting RWU node_info nodeinfo[] RWU ntp_setting member:ntp RWU ospf_list ospf[] RWU passive_ha_arp_enabled bool RWU platform enum RWU S X = pre_provisioning preprovision RWU preserve_if_owns_delegation bool RWU S = remote_console_access_enable bool RWU router_id uint RWU S = service_status memberservicestatus[] R service_type_configuration enum RWU S X = snmp_setting setting:snmp RWU static_routes setting:network[] RWU support_access_enable bool RWU support_access_info string R syslog_proxy_setting setting:syslogproxy RWU syslog_servers syslogserver[] RWU syslog_size uint RWU threshold_traps thresholdtrap[] RWU time_zone string RWU trap_notifications trapnotification[] RWU upgrade_group string RWU use_dns_resolver_setting bool RWU use_dscp bool RWU use_email_setting bool RWU use_enable_lom bool RWU use_enable_member_redirect bool RWU use_external_syslog_backup_servers bool RWU use_lcd_input bool RWU use_remote_console_access_enable bool RWU use_snmp_setting bool RWU use_support_access_enable bool RWU use_syslog_proxy_setting bool RWU use_threshold_traps bool RWU use_time_zone bool RWU use_trap_notifications bool RWU use_v4_vrrp bool RWU vip_setting setting:network RWU vpn_mtu uint RWU FUNCTIONS capture_traffic_control(action, interface, seconds_to_run) capture_traffic_status() => status, file_exists, file_size create_token() => pnode_tokens member_admin_operation(operation) read_token() => pnode_tokens requestrestartservicestatus(service_option) restartservices(restart_option, service_option) Filtering Results \u00b6 The full output of some objects can be pretty long and while you could just pipe the output to more to get a paged view, you can also use -Fields , -NoFields , -Operations , -Functions , and -NoFunctions to limit the output. -Fields takes a string array (optionally with wildcards) and filters the field list to only those fields that match at least one of the strings. So if you wanted to filter IP and NAT related fields on the member example above, you could do this: PS C:\\> Get-IBSchema member -Fields ip*,nat* OBJECT member (WAPI 2.7) RESTRICTIONS scheduling, csv FIELD TYPE SUPPORTS BASE SEARCH ----- ---- -------- ---- ------ ipv4_address string S = ipv6_address string S = ipv6_setting ipv6setting RWU ipv6_static_routes ipv6setting[] RWU nat_setting natsetting RWU FUNCTIONS capture_traffic_control(action, interface, seconds_to_run) capture_traffic_status() => status, file_exists, file_size create_token() => pnode_tokens member_admin_operation(operation) read_token() => pnode_tokens requestrestartservicestatus(service_option) restartservices(restart_option, service_option) And if you wanted to exclude the functions from the output, just add the -NoFunctions switch: PS C:\\> Get-IBSchema member -Fields ip*,nat* -NoFunctions OBJECT member (WAPI 2.7) RESTRICTIONS scheduling, csv FIELD TYPE SUPPORTS BASE SEARCH ----- ---- -------- ---- ------ ipv4_address string S = ipv6_address string S = ipv6_setting ipv6setting RWU ipv6_static_routes ipv6setting[] RWU nat_setting natsetting RWU -Operations is used to filter fields by the operations they support in the SUPPORTS column. It also takes a string array (no wildcards) comprised of letter codes you want to limit the results to. So if you only wanted to return the fields that are searchable, you could do this: PS C:\\> Get-IBSchema member -Operations s -NoFunctions OBJECT member (WAPI 2.7) RESTRICTIONS scheduling, csv FIELD TYPE SUPPORTS BASE SEARCH ----- ---- -------- ---- ------ comment string RWU S :=~ config_addr_type enum RWU S X = enable_ha bool RWU S = enable_ro_api_access bool RWU S = host_name string RWU S X :=~ ipv4_address string S = ipv6_address string S = master_candidate bool RWU S = platform enum RWU S X = preserve_if_owns_delegation bool RWU S = router_id uint RWU S = service_type_configuration enum RWU S X = If you're done checking field details and want to know about specific functions, -Functions works the same way as -Fields and -NoFields works the same way as -NoFunctions . So let's say you want to see the traffic capture related functions for member , you could do something like this: PS C:\\> Get-IBSchema member -Functions capture* -NoFields OBJECT member (WAPI 2.7) RESTRICTIONS scheduling, csv FUNCTIONS capture_traffic_control(action, interface, seconds_to_run) capture_traffic_status() => status, file_exists, file_size Detailed View \u00b6 The default view of fields and functions is intended to be a quick reference. But particularly for functions, sometimes you need more detail. For that, you can use the -Detailed switch: PS C:\\> Get-IBSchema member -Functions capture* -NoFields -Detailed OBJECT member (WAPI 2.7) RESTRICTIONS scheduling, csv FUNCTIONS ---------------------------------------------------------- capture_traffic_control ---------------------------------------------------------- Starts/Stops a traffic capture session on the specified member node. INPUTS action <{ START | STOP }> The traffic capture action. interface <{ ALL | HA | LAN1 | LAN2 | MGMT }> The interface on which the traffic is captured. seconds_to_run <uint> The number of seconds for which the traffic capture is going to run. ---------------------------------------------------------- capture_traffic_status ---------------------------------------------------------- Gets traffic capture status on the specified member node. OUTPUTS status <{ STOPPED | RUNNING | UNKNOWN }> The status of the capture operation for the member. file_exists <bool> Determines if the capture file for the member exist or not. file_size <uint> The size of the traffic capture file for the member. It can also help to get details for fields as well. Let's add the -Detailed flag to one of our previous examples: PS C:\\> Get-IBSchema member -Fields ip*,nat* -NoFunctions -Detailed OBJECT member (WAPI 2.7) RESTRICTIONS scheduling, csv FIELDS ipv4_address <string> The member's IPv4 Address. Supports: Search This field is available for search via: '=' (exact equality) ipv6_address <string> The member's IPv6 Address. Supports: Search This field is available for search via: '=' (exact equality) ipv6_setting <ipv6setting> IPV6 setting for member. Supports: Read, Write, Update ipv6_static_routes <ipv6setting[]> List of IPv6 static routes. Supports: Read, Write, Update nat_setting <natsetting> NAT settings for the member. Supports: Read, Write, Update Raw Output and HTML Fallback \u00b6 For whatever reason, you may want to just get the raw schema data back instead of a pretty printed view. In that case, use the -Raw switch. Filtering parameters are ignored when using -Raw . PS C:\\> Get-IBSchema member -Raw cloud_additional_restrictions : {} fields : {@{doc=The active server of a Grid member.; is_array=False; name=active_position; standard_field=False; supports=r; type=System.Object[]}, @{doc=The additional IP list of a Grid member. This list contains additional interface information that can be used at the member level. Note that interface structure(s) with interface type set to 'MGMT' are not supported.; is_array=True; name=additional_ip_list; schema=; standard_field=False; supports=rwu; type=System.Object[]; wapi_primitive=struct}, @{doc=The BGP configuration for anycast for a Grid member.; is_array=True; name=bgp_as; schema=; standard_field=False; supports=rwu; type=System.Object[]; wapi_primitive=struct}, @{doc=Starts/Stops a traffic capture session on the specified member node.; is_array=False; name=capture_traffic_control; schema=; standard_field=False; supports=rwu; type=System.Object[]; wapi_primitive=funccall}...} restrictions : {scheduling, csv} schema_version : 2 type : member version : 2.7 wapi_primitive : object Until schema queries reach feature parity with the HTML docs, it may still occasionally be necessary to view the full HTML. In these cases, you can use -LaunchHTML as a shortcut to get to the specific object page you want to view. It will attempt to \"start\" the URL for that page which should open your default web browser to the location. PS C:\\> Get-IBSchema member -LaunchHTML # (launches browser to https://<WAPIHost>/wapidoc/objects/member.html)","title":"Using Get-IBSchema"},{"location":"Guides/Using-Get-IBSchema/#using-get-ibschema","text":"In WAPI 1.7.5 (NIOS 6.12), Infoblox added a _schema option to GET queries that will ignore most of the normal options and return a JSON view of the object model for the object type specified. This was presumably so that one could programmatically discover the WAPI object model without necessarily needing to look at the full HTML or PDF documentation. In WAPI 2.0 (NIOS 6.12.later and 7.0), they expanded on the schema querying functionality by adding more metadata to the object model and a _get_doc option that returned human readable text descriptions. It feels like they're trying to slowly move towards feature parity with the full HTML/PDF documentation which will be awesome if/when they get there. The goal of Get-IBSchema is to provide a Get-Help style view of the WAPI object model so that you don't necessarily have to continually reference the full documentation as you are developing your code. Some of the WAPI objects have fairly large object models and the full output can be pretty dense and long. So there are a lot of parameters that can help filter the output to only what you want to see. Note Most of the examples below will be queried from a WAPI 2.0+ appliance. They should work the same way against 1.7.5, but there might be less data returned.","title":"Using Get-IBSchema"},{"location":"Guides/Using-Get-IBSchema/#the-basics","text":"Get-IBSchema uses the same common connection settings as other *-IBObject queries including values saved with Set-IBConfig . It's important to note that the WAPI will return a view of the schema that is filtered for the WAPI version you request. So if your WAPI version is 2.x and your requested version is 1.5, you'll get the schema that existed in WAPI 1.5. This is cool because you can do schema queries for WAPI versions that didn't originally support schema queries. Calling Get-IBSchema with no parameters or only a -WAPIVersion will return the base schema which includes the list of supported versions and the list of supported objects. For example: PS C:\\> Get-IBSchema -version 1.5 Requested Version: 1.5 Supported Versions: 1.0 1.5 1.7.5 2.3 1.1 1.6 2.0 2.3.1 1.2 1.6.1 2.1 2.4 1.2.1 1.7 2.1.1 2.5 1.3 1.7.1 2.1.2 2.6 1.4 1.7.2 2.2 2.6.1 1.4.1 1.7.3 2.2.1 2.7 1.4.2 1.7.4 2.2.2 Supported Objects: allrecords ipv6networkcontainer record:cname sharedrecord:a csvimporttask ipv6range record:host sharedrecord:aaaa discovery:device ipv6sharednetwork record:host_ipv4addr sharedrecord:mx discovery:deviceinterface lease record:host_ipv6addr sharedrecord:srv discovery:deviceneighbor macfilteraddress record:mx sharedrecord:txt discovery:status member record:naptr snmpuser fileop namedacl record:ptr view fixedaddress network record:srv zone_auth grid networkcontainer record:txt zone_delegated grid:dhcpproperties networkview restartservicestatus zone_forward ipv4address permission roaminghost zone_stub ipv6address range scheduledtask ipv6fixedaddress record:a search ipv6network record:aaaa sharednetwork To get the specifics for a particular object, add it with the -ObjectType parameter. The \"RESTRICTIONS\" section are the operations not supported by this object. Some objects may also have a \"CLOUD RESTRICTIONS\" section that has the operations not supported when querying via a cloud appliance. Without any additional parameters, the fields are displayed in a table format similar to the \"Fields List\" section from the full docs. The TYPE column shows the data type of that field and whether it is an array or not indicated by [] after the type name. The SUPPORTS column indicates what operations are allowed for each field (R = Read/Get, W = Write/Create, U = Update/Modify, D = Delete, S = Search) . The BASE column indicates whether the field is returned by default as part of the base object. The SEARCH column indicates what types of searches are allowed against that field (case-insensitive, regex, greater than, etc) . If the object has functions associated with it, those are displayed in a separate section below the fields table. PS C:\\> Get-IBSchema member OBJECT member (WAPI 2.7) RESTRICTIONS scheduling, csv FIELD TYPE SUPPORTS BASE SEARCH ----- ---- -------- ---- ------ active_position string R additional_ip_list interface[] RWU bgp_as bgpas[] RWU comment string RWU S :=~ config_addr_type enum RWU S X = dns_resolver_setting setting:dnsresolver RWU dscp uint RWU email_setting setting:email RWU enable_ha bool RWU S = enable_lom bool RWU enable_member_redirect bool RWU enable_ro_api_access bool RWU S = extattrs extattr RWU external_syslog_backup_servers extsyslogbackupserver[] RWU external_syslog_server_enable bool RWU host_name string RWU S X :=~ ipv4_address string S = ipv6_address string S = ipv6_setting ipv6setting RWU ipv6_static_routes ipv6setting[] RWU is_dscp_capable bool R lan2_enabled bool RWU lan2_port_setting lan2portsetting RWU lcd_input bool RWU lom_network_config lomnetworkconfig[] RWU lom_users lomuser[] RWU master_candidate bool RWU S = member_service_communication memberservicecommunication[] RWU mgmt_port_setting mgmtportsetting RWU mmdb_ea_build_time timestamp R mmdb_geoip_build_time timestamp R nat_setting natsetting RWU node_info nodeinfo[] RWU ntp_setting member:ntp RWU ospf_list ospf[] RWU passive_ha_arp_enabled bool RWU platform enum RWU S X = pre_provisioning preprovision RWU preserve_if_owns_delegation bool RWU S = remote_console_access_enable bool RWU router_id uint RWU S = service_status memberservicestatus[] R service_type_configuration enum RWU S X = snmp_setting setting:snmp RWU static_routes setting:network[] RWU support_access_enable bool RWU support_access_info string R syslog_proxy_setting setting:syslogproxy RWU syslog_servers syslogserver[] RWU syslog_size uint RWU threshold_traps thresholdtrap[] RWU time_zone string RWU trap_notifications trapnotification[] RWU upgrade_group string RWU use_dns_resolver_setting bool RWU use_dscp bool RWU use_email_setting bool RWU use_enable_lom bool RWU use_enable_member_redirect bool RWU use_external_syslog_backup_servers bool RWU use_lcd_input bool RWU use_remote_console_access_enable bool RWU use_snmp_setting bool RWU use_support_access_enable bool RWU use_syslog_proxy_setting bool RWU use_threshold_traps bool RWU use_time_zone bool RWU use_trap_notifications bool RWU use_v4_vrrp bool RWU vip_setting setting:network RWU vpn_mtu uint RWU FUNCTIONS capture_traffic_control(action, interface, seconds_to_run) capture_traffic_status() => status, file_exists, file_size create_token() => pnode_tokens member_admin_operation(operation) read_token() => pnode_tokens requestrestartservicestatus(service_option) restartservices(restart_option, service_option)","title":"The Basics"},{"location":"Guides/Using-Get-IBSchema/#filtering-results","text":"The full output of some objects can be pretty long and while you could just pipe the output to more to get a paged view, you can also use -Fields , -NoFields , -Operations , -Functions , and -NoFunctions to limit the output. -Fields takes a string array (optionally with wildcards) and filters the field list to only those fields that match at least one of the strings. So if you wanted to filter IP and NAT related fields on the member example above, you could do this: PS C:\\> Get-IBSchema member -Fields ip*,nat* OBJECT member (WAPI 2.7) RESTRICTIONS scheduling, csv FIELD TYPE SUPPORTS BASE SEARCH ----- ---- -------- ---- ------ ipv4_address string S = ipv6_address string S = ipv6_setting ipv6setting RWU ipv6_static_routes ipv6setting[] RWU nat_setting natsetting RWU FUNCTIONS capture_traffic_control(action, interface, seconds_to_run) capture_traffic_status() => status, file_exists, file_size create_token() => pnode_tokens member_admin_operation(operation) read_token() => pnode_tokens requestrestartservicestatus(service_option) restartservices(restart_option, service_option) And if you wanted to exclude the functions from the output, just add the -NoFunctions switch: PS C:\\> Get-IBSchema member -Fields ip*,nat* -NoFunctions OBJECT member (WAPI 2.7) RESTRICTIONS scheduling, csv FIELD TYPE SUPPORTS BASE SEARCH ----- ---- -------- ---- ------ ipv4_address string S = ipv6_address string S = ipv6_setting ipv6setting RWU ipv6_static_routes ipv6setting[] RWU nat_setting natsetting RWU -Operations is used to filter fields by the operations they support in the SUPPORTS column. It also takes a string array (no wildcards) comprised of letter codes you want to limit the results to. So if you only wanted to return the fields that are searchable, you could do this: PS C:\\> Get-IBSchema member -Operations s -NoFunctions OBJECT member (WAPI 2.7) RESTRICTIONS scheduling, csv FIELD TYPE SUPPORTS BASE SEARCH ----- ---- -------- ---- ------ comment string RWU S :=~ config_addr_type enum RWU S X = enable_ha bool RWU S = enable_ro_api_access bool RWU S = host_name string RWU S X :=~ ipv4_address string S = ipv6_address string S = master_candidate bool RWU S = platform enum RWU S X = preserve_if_owns_delegation bool RWU S = router_id uint RWU S = service_type_configuration enum RWU S X = If you're done checking field details and want to know about specific functions, -Functions works the same way as -Fields and -NoFields works the same way as -NoFunctions . So let's say you want to see the traffic capture related functions for member , you could do something like this: PS C:\\> Get-IBSchema member -Functions capture* -NoFields OBJECT member (WAPI 2.7) RESTRICTIONS scheduling, csv FUNCTIONS capture_traffic_control(action, interface, seconds_to_run) capture_traffic_status() => status, file_exists, file_size","title":"Filtering Results"},{"location":"Guides/Using-Get-IBSchema/#detailed-view","text":"The default view of fields and functions is intended to be a quick reference. But particularly for functions, sometimes you need more detail. For that, you can use the -Detailed switch: PS C:\\> Get-IBSchema member -Functions capture* -NoFields -Detailed OBJECT member (WAPI 2.7) RESTRICTIONS scheduling, csv FUNCTIONS ---------------------------------------------------------- capture_traffic_control ---------------------------------------------------------- Starts/Stops a traffic capture session on the specified member node. INPUTS action <{ START | STOP }> The traffic capture action. interface <{ ALL | HA | LAN1 | LAN2 | MGMT }> The interface on which the traffic is captured. seconds_to_run <uint> The number of seconds for which the traffic capture is going to run. ---------------------------------------------------------- capture_traffic_status ---------------------------------------------------------- Gets traffic capture status on the specified member node. OUTPUTS status <{ STOPPED | RUNNING | UNKNOWN }> The status of the capture operation for the member. file_exists <bool> Determines if the capture file for the member exist or not. file_size <uint> The size of the traffic capture file for the member. It can also help to get details for fields as well. Let's add the -Detailed flag to one of our previous examples: PS C:\\> Get-IBSchema member -Fields ip*,nat* -NoFunctions -Detailed OBJECT member (WAPI 2.7) RESTRICTIONS scheduling, csv FIELDS ipv4_address <string> The member's IPv4 Address. Supports: Search This field is available for search via: '=' (exact equality) ipv6_address <string> The member's IPv6 Address. Supports: Search This field is available for search via: '=' (exact equality) ipv6_setting <ipv6setting> IPV6 setting for member. Supports: Read, Write, Update ipv6_static_routes <ipv6setting[]> List of IPv6 static routes. Supports: Read, Write, Update nat_setting <natsetting> NAT settings for the member. Supports: Read, Write, Update","title":"Detailed View"},{"location":"Guides/Using-Get-IBSchema/#raw-output-and-html-fallback","text":"For whatever reason, you may want to just get the raw schema data back instead of a pretty printed view. In that case, use the -Raw switch. Filtering parameters are ignored when using -Raw . PS C:\\> Get-IBSchema member -Raw cloud_additional_restrictions : {} fields : {@{doc=The active server of a Grid member.; is_array=False; name=active_position; standard_field=False; supports=r; type=System.Object[]}, @{doc=The additional IP list of a Grid member. This list contains additional interface information that can be used at the member level. Note that interface structure(s) with interface type set to 'MGMT' are not supported.; is_array=True; name=additional_ip_list; schema=; standard_field=False; supports=rwu; type=System.Object[]; wapi_primitive=struct}, @{doc=The BGP configuration for anycast for a Grid member.; is_array=True; name=bgp_as; schema=; standard_field=False; supports=rwu; type=System.Object[]; wapi_primitive=struct}, @{doc=Starts/Stops a traffic capture session on the specified member node.; is_array=False; name=capture_traffic_control; schema=; standard_field=False; supports=rwu; type=System.Object[]; wapi_primitive=funccall}...} restrictions : {scheduling, csv} schema_version : 2 type : member version : 2.7 wapi_primitive : object Until schema queries reach feature parity with the HTML docs, it may still occasionally be necessary to view the full HTML. In these cases, you can use -LaunchHTML as a shortcut to get to the specific object page you want to view. It will attempt to \"start\" the URL for that page which should open your default web browser to the location. PS C:\\> Get-IBSchema member -LaunchHTML # (launches browser to https://<WAPIHost>/wapidoc/objects/member.html)","title":"Raw Output and HTML Fallback"},{"location":"Guides/Using-IBFile-Functions/","text":"Using IBFile Functions \u00b6 The Infoblox WAPI has long supported the fileop object type which has a bunch of functions associated with it for uploading and download data to and from the appliance (database backups, certificate uploads, etc). While it is possible to use these upload and download functions via Invoke-IBFunction , the process is tedious and requires multiple steps. Uploads are particularly difficult because older versions of PowerShell don't support multipart form data uploads in the native web cmdlets. So you're either forced to upgrade your PowerShell version to 6.1+ or delve into lower level .NET functionality to do the actual file upload step. To alleviate these hassles, Receive-IBFile and Send-IBFile were added in Posh-IBWAPI 2.0. Their goal is to turn uploading or downloading data from Infoblox into a single function call. NOTE: The examples in this guide were written against WAPI 2.10 (NIOS 8.4). If your grid is on an earlier version, functions available and their arguments might be different. Check the docs for your version if you have problems. Receive-IBFile \u00b6 Let's start with downloading data because it's usually easier and probably more common. Here's the function syntax via Get-Help SYNTAX Receive-IBFile [-FunctionName] <String> [-OutFile] <String> [[-FunctionArgs] <Hashtable>] [[-ObjectRef] <String>] [-OverrideTransferHost] [[-WAPIHost] <String>] [[-WAPIVersion] <String>] [[-Credential] <PSCredential>] [-SkipCertificateCheck] [[-ProfileName] <String>] [<CommonParameters>] FunctionName and OutFile are the only two required parameters. But most WAPI functions will also have at least one input field you need to specify with FunctionArgs . ObjectRef is set to fileop by default because that's where most of the upload/download functions live. But depending on your WAPI version, there are a few tied to other object types as well. So if you're using one of those, you'd need to specify that parameter. We want to download a grid database backup using fileop's getgriddata function. To quickly review the docs for the function, run this to open a browser to the fileop object type: Get-IBSchema fileop -LaunchHTML Alternatively, you could query the function details directly. But they're usually not quite as detailed as the HTML version. It's also nice to have a browser window open for reference, but here's how to do it anyway: Get-IBSchema fileop -Functions getgriddata -Detail -NoFields The only thing you should need to care about for a download function are the inputs. To download a basic grid database backup with no discovery data (the default), we only need a single argument: $fArgs = @{ type = 'BACKUP' } Now we just call the function and we're done. Obviously, the time it takes is going to vary based on your environment and the size of your grid. It can also be significantly be faster when using PowerShell 7+ (more on that later). Receive-IBFile -FunctionName getgriddata -OutFile .\\ backup . tar . gz -FunctionArgs $fArgs Send-IBFile \u00b6 Uploading data isn't that much different than downloading. Here's the function syntax: SYNTAX Send-IBFile [-FunctionName] <String> [-Path] <String> [-FunctionArgs <Hashtable>] [-ObjectRef <String>] [-OverrideTransferHost] [-WAPIHost <String>] [-WAPIVersion <String>] [-Credential <PSCredential>] [-SkipCertificateCheck] [-ProfileName <String>] [<CommonParameters>] FunctionName is still required. Path will be the path to the file you're uploading and is required. FunctionArgs will hold the input fields for the WAPI function with one exception. Most upload functions have a mandatory token field which is returned by the uploadinit function. You can ignore this requirement because Send-IBFile will handle it for you. ObjectRef is still set to fileop by default. So you can ignore it unless your upload function is tied to another object type. In this example, we're going to upload a new trusted CA certificate to the grid using fileop's uploadcertificate function. This is useful for environments running an internal PKI infrastructure, particularly when using Microsoft Management and connecting to servers via LDAPS (LDAP over SSL). Any valid CA certificate will suffice for this example as long as it hasn't already been imported into your grid. For my own test, I'm using the Let's Encrypt CA's self-signed root, ISRG Root X1 . Uploading a CA certificate via uploadcertificate requries a single input field, certificate_usage . We can ignore token because it is automatically handled by the function and we can ignore member because CA certificates are applied grid-wide. $fArgs = @{ certificate_usage = 'EAP_CA' } Now we just call the function and we're done. Send-IBFile -FunctionName uploadcertificate -Path .\\ myca . pem -FunctionArgs $fArgs If you navigate to Grid - Grid Manager - Members in the web UI and click the Certificates button in the toolbar, you should see your freshly uploaded CA certificate in the list. Feel free to delete it, if this was just a test certificate. Regarding Transfer Speeds \u00b6 Historically, Windows PowerShell was not the speediest tool for uploading or downloading large files via the web cmdlets. But there have been significant performance improvements in PowerShell 7+, particularly around the web cmdlets. So if you have the choice, definitely choose the latest verion of PowerShell over legacy Windows PowerShell as this will directly impact the performance of Posh-IBWAPI. As a completely non-scientific example, a 1 GB file took roughly 23 seconds to downloaded in PowerShell Core 7.2 on my machine using Invoke-WebRequest . The same file downloaded on the same system in Windows PowerShell 5.1 took roughly 10 minutes . That's about a 2600% speed increase just for using a newer version of PowerShell.","title":"Using IBFile Functions"},{"location":"Guides/Using-IBFile-Functions/#using-ibfile-functions","text":"The Infoblox WAPI has long supported the fileop object type which has a bunch of functions associated with it for uploading and download data to and from the appliance (database backups, certificate uploads, etc). While it is possible to use these upload and download functions via Invoke-IBFunction , the process is tedious and requires multiple steps. Uploads are particularly difficult because older versions of PowerShell don't support multipart form data uploads in the native web cmdlets. So you're either forced to upgrade your PowerShell version to 6.1+ or delve into lower level .NET functionality to do the actual file upload step. To alleviate these hassles, Receive-IBFile and Send-IBFile were added in Posh-IBWAPI 2.0. Their goal is to turn uploading or downloading data from Infoblox into a single function call. NOTE: The examples in this guide were written against WAPI 2.10 (NIOS 8.4). If your grid is on an earlier version, functions available and their arguments might be different. Check the docs for your version if you have problems.","title":"Using IBFile Functions"},{"location":"Guides/Using-IBFile-Functions/#receive-ibfile","text":"Let's start with downloading data because it's usually easier and probably more common. Here's the function syntax via Get-Help SYNTAX Receive-IBFile [-FunctionName] <String> [-OutFile] <String> [[-FunctionArgs] <Hashtable>] [[-ObjectRef] <String>] [-OverrideTransferHost] [[-WAPIHost] <String>] [[-WAPIVersion] <String>] [[-Credential] <PSCredential>] [-SkipCertificateCheck] [[-ProfileName] <String>] [<CommonParameters>] FunctionName and OutFile are the only two required parameters. But most WAPI functions will also have at least one input field you need to specify with FunctionArgs . ObjectRef is set to fileop by default because that's where most of the upload/download functions live. But depending on your WAPI version, there are a few tied to other object types as well. So if you're using one of those, you'd need to specify that parameter. We want to download a grid database backup using fileop's getgriddata function. To quickly review the docs for the function, run this to open a browser to the fileop object type: Get-IBSchema fileop -LaunchHTML Alternatively, you could query the function details directly. But they're usually not quite as detailed as the HTML version. It's also nice to have a browser window open for reference, but here's how to do it anyway: Get-IBSchema fileop -Functions getgriddata -Detail -NoFields The only thing you should need to care about for a download function are the inputs. To download a basic grid database backup with no discovery data (the default), we only need a single argument: $fArgs = @{ type = 'BACKUP' } Now we just call the function and we're done. Obviously, the time it takes is going to vary based on your environment and the size of your grid. It can also be significantly be faster when using PowerShell 7+ (more on that later). Receive-IBFile -FunctionName getgriddata -OutFile .\\ backup . tar . gz -FunctionArgs $fArgs","title":"Receive-IBFile"},{"location":"Guides/Using-IBFile-Functions/#send-ibfile","text":"Uploading data isn't that much different than downloading. Here's the function syntax: SYNTAX Send-IBFile [-FunctionName] <String> [-Path] <String> [-FunctionArgs <Hashtable>] [-ObjectRef <String>] [-OverrideTransferHost] [-WAPIHost <String>] [-WAPIVersion <String>] [-Credential <PSCredential>] [-SkipCertificateCheck] [-ProfileName <String>] [<CommonParameters>] FunctionName is still required. Path will be the path to the file you're uploading and is required. FunctionArgs will hold the input fields for the WAPI function with one exception. Most upload functions have a mandatory token field which is returned by the uploadinit function. You can ignore this requirement because Send-IBFile will handle it for you. ObjectRef is still set to fileop by default. So you can ignore it unless your upload function is tied to another object type. In this example, we're going to upload a new trusted CA certificate to the grid using fileop's uploadcertificate function. This is useful for environments running an internal PKI infrastructure, particularly when using Microsoft Management and connecting to servers via LDAPS (LDAP over SSL). Any valid CA certificate will suffice for this example as long as it hasn't already been imported into your grid. For my own test, I'm using the Let's Encrypt CA's self-signed root, ISRG Root X1 . Uploading a CA certificate via uploadcertificate requries a single input field, certificate_usage . We can ignore token because it is automatically handled by the function and we can ignore member because CA certificates are applied grid-wide. $fArgs = @{ certificate_usage = 'EAP_CA' } Now we just call the function and we're done. Send-IBFile -FunctionName uploadcertificate -Path .\\ myca . pem -FunctionArgs $fArgs If you navigate to Grid - Grid Manager - Members in the web UI and click the Certificates button in the toolbar, you should see your freshly uploaded CA certificate in the list. Feel free to delete it, if this was just a test certificate.","title":"Send-IBFile"},{"location":"Guides/Using-IBFile-Functions/#regarding-transfer-speeds","text":"Historically, Windows PowerShell was not the speediest tool for uploading or downloading large files via the web cmdlets. But there have been significant performance improvements in PowerShell 7+, particularly around the web cmdlets. So if you have the choice, definitely choose the latest verion of PowerShell over legacy Windows PowerShell as this will directly impact the performance of Posh-IBWAPI. As a completely non-scientific example, a 1 GB file took roughly 23 seconds to downloaded in PowerShell Core 7.2 on my machine using Invoke-WebRequest . The same file downloaded on the same system in Windows PowerShell 5.1 took roughly 10 minutes . That's about a 2600% speed increase just for using a newer version of PowerShell.","title":"Regarding Transfer Speeds"},{"location":"Guides/Using-SecretManagement/","text":"Using SecretManagement \u00b6 Prior to Posh-IBWAPI 4.0, saved connection profiles were stored in JSON config file on the local filesystem. That is still the default in 4.0, but you may now alternatively utilize the Microsoft SecretManagement module to store connection profiles in a variety of local, on-prem, and cloud secret stores using supported vault extensions . Warning Some vault extensions are read-only and don't allow for creation of new secrets. While it is technically possible to use these extensions with Posh-IBWAPI by pre-creating the necessary secrets, it is not recommended. Calls to Set-IBConfig and Remove-IBConfig will fail and likely leave the module in an inconsistent state. Prerequisites \u00b6 In order to use the SecretManagement feature, you must install both the Microsoft.PowerShell.SecretManagement module and an appropriate vault extension module to interface with your preferred secret store. You will also need to register a new vault and make note of the vault name. It will be provided to Posh-IBWAPI using the IBWAPI_VAULT_NAME environment variable. Vault Password \u00b6 Some vaults can be configured with a password such that retrieving a secret requires first unlocking the vault with the password. In order to use a vault with Posh-IBWAPI, you have three options. Configure the vault so a password is not required. Provide the vault password using the IBWAPI_VAULT_PASS environment variable. Prior to importing the module, unlock or pre-authenticate to the vault so Posh-IBWAPI can make calls like Set-Secret and Get-Secret without error. Secret Names and Customization \u00b6 Each connection profile will be stored as its own secret in the vault using the following default naming convention: poshibwapi-{0} The {0} is replaced with the profile name passed to Set-IBConfig . You may optionally create an environment variable called IBWAPI_VAULT_SECRET_TEMPLATE to override the default template. The new value should include {0} somewhere in the string, but will be appended to the end if it does not exist. Warning Be aware that some vaults have restrictions on the characters allowed in a secret name. In particular, Azure KeyVault is very restrictive and only allows letters, numbers, and the - character. Using a Vault \u00b6 Enable Vault Profile Storage \u00b6 To enable vault profile storage, make sure the environment variables are set properly based on the prerequisites listed above before importing the module. If you set them after the module is already loaded or need to change the values, you will need to force re-load the module for them to take effect. Import-Module Posh-IBWAPI -Force If there is a problem accessing the vault during import, an error is thrown and the module falls back to storing connection profiles on the filesystem. Disable Vault Key Storage \u00b6 To disable vault profile storage, just remove the vault related environment variables and force re-load the module. There is currently no way to migrate local profiles to vault profiles or the other way around. This may be added in a future release. Additional Considerations \u00b6 Azure KeyVault \u00b6 Azure KeyVault has deprecated the ability to have vaults that allow immediate secret removal. \"soft-delete\" is now the default mode and will soon be mandatory which makes it so that deleted secrets are kept in a sort of recycle-bin until their configurable retention period expires. If you attempt to create a new secret using the SecretManagement module with a name that matches a soft-deleted secret, the call will fail. This means certain profile management actions within Posh-IBWAPI may fail like removing a connection profile and then re-creating it later or renaming one and then renaming it back. While it is possible to purge soft-deleted secrets, it is not possible using only the SecretManagement module. I have opened feature request #19733 to address this with the Azure PowerShell team. Sharing Configs and Vaults \u00b6 When using centralized vaults, it is possible to point multiple instances of Posh-IBWAPI to the same vault and effectively share the config. However, keep in mind that if one instances changes a profile or changes the active profile, the change won't be seen by the other instances unless they force re-load the module or load a new instance.","title":"Using SecretManagement"},{"location":"Guides/Using-SecretManagement/#using-secretmanagement","text":"Prior to Posh-IBWAPI 4.0, saved connection profiles were stored in JSON config file on the local filesystem. That is still the default in 4.0, but you may now alternatively utilize the Microsoft SecretManagement module to store connection profiles in a variety of local, on-prem, and cloud secret stores using supported vault extensions . Warning Some vault extensions are read-only and don't allow for creation of new secrets. While it is technically possible to use these extensions with Posh-IBWAPI by pre-creating the necessary secrets, it is not recommended. Calls to Set-IBConfig and Remove-IBConfig will fail and likely leave the module in an inconsistent state.","title":"Using SecretManagement"},{"location":"Guides/Using-SecretManagement/#prerequisites","text":"In order to use the SecretManagement feature, you must install both the Microsoft.PowerShell.SecretManagement module and an appropriate vault extension module to interface with your preferred secret store. You will also need to register a new vault and make note of the vault name. It will be provided to Posh-IBWAPI using the IBWAPI_VAULT_NAME environment variable.","title":"Prerequisites"},{"location":"Guides/Using-SecretManagement/#vault-password","text":"Some vaults can be configured with a password such that retrieving a secret requires first unlocking the vault with the password. In order to use a vault with Posh-IBWAPI, you have three options. Configure the vault so a password is not required. Provide the vault password using the IBWAPI_VAULT_PASS environment variable. Prior to importing the module, unlock or pre-authenticate to the vault so Posh-IBWAPI can make calls like Set-Secret and Get-Secret without error.","title":"Vault Password"},{"location":"Guides/Using-SecretManagement/#secret-names-and-customization","text":"Each connection profile will be stored as its own secret in the vault using the following default naming convention: poshibwapi-{0} The {0} is replaced with the profile name passed to Set-IBConfig . You may optionally create an environment variable called IBWAPI_VAULT_SECRET_TEMPLATE to override the default template. The new value should include {0} somewhere in the string, but will be appended to the end if it does not exist. Warning Be aware that some vaults have restrictions on the characters allowed in a secret name. In particular, Azure KeyVault is very restrictive and only allows letters, numbers, and the - character.","title":"Secret Names and Customization"},{"location":"Guides/Using-SecretManagement/#using-a-vault","text":"","title":"Using a Vault"},{"location":"Guides/Using-SecretManagement/#enable-vault-profile-storage","text":"To enable vault profile storage, make sure the environment variables are set properly based on the prerequisites listed above before importing the module. If you set them after the module is already loaded or need to change the values, you will need to force re-load the module for them to take effect. Import-Module Posh-IBWAPI -Force If there is a problem accessing the vault during import, an error is thrown and the module falls back to storing connection profiles on the filesystem.","title":"Enable Vault Profile Storage"},{"location":"Guides/Using-SecretManagement/#disable-vault-key-storage","text":"To disable vault profile storage, just remove the vault related environment variables and force re-load the module. There is currently no way to migrate local profiles to vault profiles or the other way around. This may be added in a future release.","title":"Disable Vault Key Storage"},{"location":"Guides/Using-SecretManagement/#additional-considerations","text":"","title":"Additional Considerations"},{"location":"Guides/Using-SecretManagement/#azure-keyvault","text":"Azure KeyVault has deprecated the ability to have vaults that allow immediate secret removal. \"soft-delete\" is now the default mode and will soon be mandatory which makes it so that deleted secrets are kept in a sort of recycle-bin until their configurable retention period expires. If you attempt to create a new secret using the SecretManagement module with a name that matches a soft-deleted secret, the call will fail. This means certain profile management actions within Posh-IBWAPI may fail like removing a connection profile and then re-creating it later or renaming one and then renaming it back. While it is possible to purge soft-deleted secrets, it is not possible using only the SecretManagement module. I have opened feature request #19733 to address this with the Azure PowerShell team.","title":"Azure KeyVault"},{"location":"Guides/Using-SecretManagement/#sharing-configs-and-vaults","text":"When using centralized vaults, it is possible to point multiple instances of Posh-IBWAPI to the same vault and effectively share the config. However, keep in mind that if one instances changes a profile or changes the active profile, the change won't be seen by the other instances unless they force re-load the module or load a new instance.","title":"Sharing Configs and Vaults"},{"location":"Guides/WAPI-to-NIOS-Versions/","text":"WAPI to NIOS Versions \u00b6 This is mostly for my own reference so I don't continually have to look it up elsewhere. Feel free to submit corrections/updates. WAPI version NIOS version EOL Date 2.12.2 8.6.2 2.12.1 8.6.1 2.12 8.6.0 2.11.1 8.5.1 2.11 8.5 2.10.5 8.4.5-7 2022-03-02 2.10.3 8.4.4 2022-03-02 2.10.1 8.4.2-3 2022-03-02 2.10 8.4.0-1 2022-03-02 2.9.7 8.3.7-8 2021-07-31 2.9.5 8.3.6 2021-07-31 2.9.1 8.3.2-5 2021-07-31 2.9 8.3.0-1 2021-07-31 2.7.3 8.2.6-9 2020-07-25 2.7.1 8.2.4-5 2020-07-25 2.7 8.2.0-3 2020-07-25 2.6.1 8.1.1-8 2020-03-30 2.6 8.1 2020-03-30 2.5 8.0.0-10 2019-10-25 2.4 7.3.17-201 + 8.0 2.3.1 7.3.4 2020-01-31 2.3 7.3 2020-01-31 2.2.2 7.2.4-19 2018-07-27 2.2.1 ? 2.2 ? 2.1.2 ? 2.1.1 ? 2.1 7.1.11 2018-04-30 2.0 7.0 2017-12-19 1.7.5 6.12.28 1.7.4 ? 1.7.3 ? 1.7.2 ? 1.7.1 ? 1.7 ? 1.6.1 ? 1.6 6.11 1.5 ? 1.4.2 ? 1.4.1 ? 1.4 6.10.14-203 1.3 ? 1.2.1 6.8.13 1.2 ? 1.1 ? 1.0 ?","title":"WAPI to NIOS Versions"},{"location":"Guides/WAPI-to-NIOS-Versions/#wapi-to-nios-versions","text":"This is mostly for my own reference so I don't continually have to look it up elsewhere. Feel free to submit corrections/updates. WAPI version NIOS version EOL Date 2.12.2 8.6.2 2.12.1 8.6.1 2.12 8.6.0 2.11.1 8.5.1 2.11 8.5 2.10.5 8.4.5-7 2022-03-02 2.10.3 8.4.4 2022-03-02 2.10.1 8.4.2-3 2022-03-02 2.10 8.4.0-1 2022-03-02 2.9.7 8.3.7-8 2021-07-31 2.9.5 8.3.6 2021-07-31 2.9.1 8.3.2-5 2021-07-31 2.9 8.3.0-1 2021-07-31 2.7.3 8.2.6-9 2020-07-25 2.7.1 8.2.4-5 2020-07-25 2.7 8.2.0-3 2020-07-25 2.6.1 8.1.1-8 2020-03-30 2.6 8.1 2020-03-30 2.5 8.0.0-10 2019-10-25 2.4 7.3.17-201 + 8.0 2.3.1 7.3.4 2020-01-31 2.3 7.3 2020-01-31 2.2.2 7.2.4-19 2018-07-27 2.2.1 ? 2.2 ? 2.1.2 ? 2.1.1 ? 2.1 7.1.11 2018-04-30 2.0 7.0 2017-12-19 1.7.5 6.12.28 1.7.4 ? 1.7.3 ? 1.7.2 ? 1.7.1 ? 1.7 ? 1.6.1 ? 1.6 6.11 1.5 ? 1.4.2 ? 1.4.1 ? 1.4 6.10.14-203 1.3 ? 1.2.1 6.8.13 1.2 ? 1.1 ? 1.0 ?","title":"WAPI to NIOS Versions"}]}